<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN"><title type="text">硕的研发日志</title><subtitle type="html">王书硕的技术博客</subtitle><updated>2023-02-27T17:06:54+00:00</updated><id>http://blog.wss.cool/</id><link rel="alternate" type="text/html" href="http://blog.wss.cool/"/><link rel="self" type="application/atom+xml" href="http://blog.wss.cool/atom.xml"/><author><name>王书硕</name><uri>http://blog.wss.cool</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><generator uri="https://gohugo.io/" version="0.68.3">Hugo</generator><entry><title type="text">递归map</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E9%80%92%E5%BD%92map.html"/><id>http://blog.wss.cool/%E9%80%92%E5%BD%92map.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2023-02-27T18:30:57+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">1 2 3 4 5 6 7 8 9 const criteria = {&amp;#34;operator&amp;#34;:&amp;#34;and&amp;#34;,&amp;#34;values&amp;#34;:[{&amp;#34;operator&amp;#34;:&amp;#34;and&amp;#34;,&amp;#34;values&amp;#34;:[{&amp;#34;operator&amp;#34;:&amp;#34;and&amp;#34;,&amp;#34;values&amp;#34;:[{&amp;#34;operator&amp;#34;:&amp;#34;and&amp;#34;,&amp;#34;values&amp;#34;:[{&amp;#34;operator&amp;#34;:&amp;#34;and&amp;#34;,&amp;#34;values&amp;#34;:[],&amp;#34;uid&amp;#34;:&amp;#34;1593264704&amp;#34;},{&amp;#34;operator&amp;#34;:&amp;#34;and&amp;#34;,&amp;#34;values&amp;#34;:[],&amp;#34;uid&amp;#34;:&amp;#34;283583839&amp;#34;}],&amp;#34;uid&amp;#34;:&amp;#34;306590514&amp;#34;},{&amp;#34;operator&amp;#34;:&amp;#34;and&amp;#34;,&amp;#34;values&amp;#34;:[],&amp;#34;uid&amp;#34;:&amp;#34;1899400818&amp;#34;},{&amp;#34;operator&amp;#34;:&amp;#34;and&amp;#34;,&amp;#34;values&amp;#34;:[],&amp;#34;uid&amp;#34;:&amp;#34;1809313610&amp;#34;}],&amp;#34;uid&amp;#34;:&amp;#34;966087239&amp;#34;},{&amp;#34;operator&amp;#34;:&amp;#34;and&amp;#34;,&amp;#34;values&amp;#34;:[],&amp;#34;uid&amp;#34;:&amp;#34;586805392&amp;#34;},{&amp;#34;operator&amp;#34;:&amp;#34;and&amp;#34;,&amp;#34;values&amp;#34;:[],&amp;#34;uid&amp;#34;:&amp;#34;820862889&amp;#34;},{&amp;#34;operator&amp;#34;:&amp;#34;and&amp;#34;,&amp;#34;values&amp;#34;:[],&amp;#34;uid&amp;#34;:&amp;#34;1622114136&amp;#34;}],&amp;#34;uid&amp;#34;:&amp;#34;1198153895&amp;#34;},{&amp;#34;operator&amp;#34;:&amp;#34;and&amp;#34;,&amp;#34;values&amp;#34;:[{&amp;#34;operator&amp;#34;:&amp;#34;and&amp;#34;,&amp;#34;values&amp;#34;:[],&amp;#34;uid&amp;#34;:&amp;#34;2096355855&amp;#34;},{&amp;#34;operator&amp;#34;:&amp;#34;and&amp;#34;,&amp;#34;values&amp;#34;:[],&amp;#34;uid&amp;#34;:&amp;#34;360825872&amp;#34;}],&amp;#34;uid&amp;#34;:&amp;#34;898380472&amp;#34;},{&amp;#34;operator&amp;#34;:&amp;#34;and&amp;#34;,&amp;#34;values&amp;#34;:[],&amp;#34;uid&amp;#34;:&amp;#34;134584530&amp;#34;}],&amp;#34;uid&amp;#34;:&amp;#34;913669697&amp;#34;} const mapHandler = (i) =&amp;gt; i.values.map(mapHandler); let values = criteria.values.map(mapHandler); values = flattenDeep(values) if (values.length === 0) { criteriaStr = &amp;#39;&amp;#39;; criteria.values = []; }</summary><content type="html">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">criteria&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;operator&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;and&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;values&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="p">[{&lt;/span>&lt;span class="s2">&amp;#34;operator&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;and&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;values&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="p">[{&lt;/span>&lt;span class="s2">&amp;#34;operator&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;and&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;values&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="p">[{&lt;/span>&lt;span class="s2">&amp;#34;operator&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;and&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;values&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="p">[{&lt;/span>&lt;span class="s2">&amp;#34;operator&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;and&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;values&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="p">[],&lt;/span>&lt;span class="s2">&amp;#34;uid&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;1593264704&amp;#34;&lt;/span>&lt;span class="p">},{&lt;/span>&lt;span class="s2">&amp;#34;operator&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;and&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;values&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="p">[],&lt;/span>&lt;span class="s2">&amp;#34;uid&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;283583839&amp;#34;&lt;/span>&lt;span class="p">}],&lt;/span>&lt;span class="s2">&amp;#34;uid&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;306590514&amp;#34;&lt;/span>&lt;span class="p">},{&lt;/span>&lt;span class="s2">&amp;#34;operator&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;and&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;values&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="p">[],&lt;/span>&lt;span class="s2">&amp;#34;uid&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;1899400818&amp;#34;&lt;/span>&lt;span class="p">},{&lt;/span>&lt;span class="s2">&amp;#34;operator&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;and&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;values&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="p">[],&lt;/span>&lt;span class="s2">&amp;#34;uid&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;1809313610&amp;#34;&lt;/span>&lt;span class="p">}],&lt;/span>&lt;span class="s2">&amp;#34;uid&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;966087239&amp;#34;&lt;/span>&lt;span class="p">},{&lt;/span>&lt;span class="s2">&amp;#34;operator&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;and&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;values&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="p">[],&lt;/span>&lt;span class="s2">&amp;#34;uid&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;586805392&amp;#34;&lt;/span>&lt;span class="p">},{&lt;/span>&lt;span class="s2">&amp;#34;operator&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;and&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;values&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="p">[],&lt;/span>&lt;span class="s2">&amp;#34;uid&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;820862889&amp;#34;&lt;/span>&lt;span class="p">},{&lt;/span>&lt;span class="s2">&amp;#34;operator&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;and&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;values&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="p">[],&lt;/span>&lt;span class="s2">&amp;#34;uid&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;1622114136&amp;#34;&lt;/span>&lt;span class="p">}],&lt;/span>&lt;span class="s2">&amp;#34;uid&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;1198153895&amp;#34;&lt;/span>&lt;span class="p">},{&lt;/span>&lt;span class="s2">&amp;#34;operator&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;and&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;values&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="p">[{&lt;/span>&lt;span class="s2">&amp;#34;operator&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;and&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;values&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="p">[],&lt;/span>&lt;span class="s2">&amp;#34;uid&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;2096355855&amp;#34;&lt;/span>&lt;span class="p">},{&lt;/span>&lt;span class="s2">&amp;#34;operator&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;and&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;values&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="p">[],&lt;/span>&lt;span class="s2">&amp;#34;uid&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;360825872&amp;#34;&lt;/span>&lt;span class="p">}],&lt;/span>&lt;span class="s2">&amp;#34;uid&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;898380472&amp;#34;&lt;/span>&lt;span class="p">},{&lt;/span>&lt;span class="s2">&amp;#34;operator&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;and&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;values&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="p">[],&lt;/span>&lt;span class="s2">&amp;#34;uid&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;134584530&amp;#34;&lt;/span>&lt;span class="p">}],&lt;/span>&lt;span class="s2">&amp;#34;uid&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s2">&amp;#34;913669697&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">mapHandler&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">values&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">mapHandler&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">values&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">criteria&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">values&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">mapHandler&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">values&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">flattenDeep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">values&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">values&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">criteriaStr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">criteria&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">values&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/js/" term="js" label="js"/></entry><entry><title type="text">Vitejs</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/vitejs.html"/><id>http://blog.wss.cool/vitejs.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-11-14T22:34:08+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">摘要，显示在meta的description中</summary><content type="html">&lt;pre>&lt;code># npm 6.x
npm create vite@latest my-vue-app --template vue
# npm 7+, extra double-dash is needed:
npm create vite@latest my-vue-app -- --template vue
# yarn
yarn create vite my-vue-app --template vue
# pnpm
pnpm create vite my-vue-app --template vue
&lt;/code>&lt;/pre>&lt;p>模板：vanilla，vanilla-ts，vue，vue-ts，react，react-ts，preact，preact-ts，lit，lit-ts，svelte，svelte-ts&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%88%86%E7%B1%BB/" term="分类" label="分类"/><category scheme="http://blog.wss.cool/tags/%E6%98%BE%E7%A4%BA%E5%9C%A8%E5%BA%95%E9%83%A8/" term="显示在底部" label="显示在底部"/></entry><entry><title type="text">Go-Image-Png</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/go-image-png.html"/><id>http://blog.wss.cool/go-image-png.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-09-24T21:35:35+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">1 func Decode(r io.Reader) (image.Image, error) 将png图片解码为 Image 数据，要先png图片文件搞到Reader中，在从Re……</summary><content type="html">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-golang" data-lang="golang">&lt;span class="kd">func&lt;/span> &lt;span class="nf">Decode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Reader&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Image&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将png图片解码为 Image 数据，要先png图片文件搞到Reader中，在从Reader中将内容写入到Image中&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-golang" data-lang="golang">&lt;span class="kd">func&lt;/span> &lt;span class="nf">Encode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Writer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">m&lt;/span> &lt;span class="nx">image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Image&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将 Image 编码为 png 图片，将 png图片写入到 Writer 中&lt;/p></content><category scheme="http://blog.wss.cool/categories/golang/" term="golang" label="golang"/><category scheme="http://blog.wss.cool/tags/image/png/" term="image/png" label="image/png"/></entry><entry><title type="text">Go-Template</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/go-template.html"/><id>http://blog.wss.cool/go-template.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-09-24T16:06:31+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">解析模板文件并绑定方法和数据 1 2 3 4 5 6 7 8 func view(w http.ResponseWriter, r *http.Request) { funcMap := template.FuncMap{&amp;#34;minus&amp;#34;: func(a int, b int){ return a - b }} temp, _……</summary><content type="html">&lt;h2 id="解析模板文件并绑定方法和数据">解析模板文件并绑定方法和数据&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-golang" data-lang="golang">&lt;span class="kd">func&lt;/span> &lt;span class="nf">view&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ResponseWriter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Request&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">funcMap&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">template&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">FuncMap&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="s">&amp;#34;minus&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nx">b&lt;/span>
&lt;span class="p">}}&lt;/span>
&lt;span class="nx">temp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">template&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">New&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;index.gohtml&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Funcs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">funcMap&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">ParseFiles&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tpl/index.gohtml&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">data&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="s">&amp;#34;123&amp;#34;&lt;/span>
&lt;span class="nx">temp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将data传入“tpl/index.gohtml”模板进行解析，将解析后的数据传入到writer，writer可以是http请求的responseWriter，也可以是file（file实现了writer接口）。
也就是说，可以作为响应数据返回到浏览器前端，也可以保存到文件中。&lt;/p>
&lt;p>template的Execute方法的文档：&lt;/p>
&lt;pre>&lt;code>Execute 将已解析的模板应用于指定的数据对象，并将输出写入 wr。
如果执行模板或写入其输出时发生错误，执行将停止，但部分结果可能已写入输出写入器。
模板可以安全地并行执行，但如果并行执行共享一个 Writer，则输出可能是交错的。
&lt;/code>&lt;/pre>&lt;h2 id="定义模板">定义模板&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="p">{{&lt;/span>&lt;span class="nx">define&lt;/span> &lt;span class="s">&amp;#34;output&amp;#34;&lt;/span>&lt;span class="p">}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nx">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nx">label&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="s">&amp;#34;orange&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">橙&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">label&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nx">span&lt;/span>&lt;span class="p">&amp;gt;{{.&lt;/span>&lt;span class="nx">orange&lt;/span>&lt;span class="p">}}&amp;lt;&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">{{&lt;/span>&lt;span class="nx">end&lt;/span>&lt;span class="p">}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="使用模板">使用模板&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nx">fieldset&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nx">legend&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">原神材料合成计算器&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">legend&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">{{&lt;/span>&lt;span class="nx">template&lt;/span> &lt;span class="s">&amp;#34;output&amp;#34;&lt;/span> &lt;span class="p">.}}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">fieldset&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/go/" term="go" label="go"/><category scheme="http://blog.wss.cool/tags/template/" term="template" label="template"/></entry><entry><title type="text">策略模式</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F.html"/><id>http://blog.wss.cool/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-09-01T15:52:47+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 abstract class Duck { quack(){ console.lo……</summary><content type="html">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="kr">abstract&lt;/span> &lt;span class="kr">class&lt;/span> &lt;span class="nx">Duck&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">quack&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;呱呱叫&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">swim&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;游泳&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">abstract&lt;/span> &lt;span class="nx">display&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1">// 各种鸭子的外观不同，此为抽象方法
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">GreenDuck&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Duck&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">display() {&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;绿色的头&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">RedDuck&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Duck&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">display() {&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;红色的头&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 还有很多其他类型的鸭子继承了Duck
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">class&lt;/span> &lt;span class="nx">OtherDuck&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Duck&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">display() {&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="hl">&lt;span class="lnt"> 9
&lt;/span>&lt;/span>&lt;span class="hl">&lt;span class="lnt">10
&lt;/span>&lt;/span>&lt;span class="hl">&lt;span class="lnt">11
&lt;/span>&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="kr">abstract&lt;/span> &lt;span class="kr">class&lt;/span> &lt;span class="nx">Duck&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">quack&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;呱呱叫&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">swim&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;游泳&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">abstract&lt;/span> &lt;span class="nx">display&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1">// 各种鸭子的外观不同，此为抽象方法
&lt;/span>&lt;span class="hl">&lt;span class="c1">&lt;/span> &lt;span class="nx">fly&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;/span>&lt;span class="hl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;飞&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;span class="hl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="hl">&lt;span class="lnt"> 9
&lt;/span>&lt;/span>&lt;span class="hl">&lt;span class="lnt">10
&lt;/span>&lt;/span>&lt;span class="hl">&lt;span class="lnt">11
&lt;/span>&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="kr">class&lt;/span> &lt;span class="nx">RubberDuck&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">quack&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;span class="c1">// 覆盖成吱吱叫
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">display&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;span class="c1">// 外观是橡皮鸭
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="hl"> &lt;span class="nx">fly&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;/span>&lt;span class="hl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;飞&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;span class="hl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="kr">interface&lt;/span> &lt;span class="nx">Flyable&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">fly&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">interface&lt;/span> &lt;span class="nx">Quackable&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">quack&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">Duck&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">swim&lt;/span>&lt;span class="p">(){}&lt;/span>
&lt;span class="nx">display&lt;/span>&lt;span class="p">(){}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">MallardDuck&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Duck&lt;/span> &lt;span class="kr">implements&lt;/span> &lt;span class="nx">Flyable&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">Quackable&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">display&lt;/span>&lt;span class="p">(){}&lt;/span>
&lt;span class="nx">fly&lt;/span>&lt;span class="p">(){}&lt;/span>
&lt;span class="nx">quack&lt;/span>&lt;span class="p">(){}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">RedheadDuck&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Duck&lt;/span> &lt;span class="kr">implements&lt;/span> &lt;span class="nx">Flyable&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">Quackable&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">display&lt;/span>&lt;span class="p">(){}&lt;/span>
&lt;span class="nx">fly&lt;/span>&lt;span class="p">(){}&lt;/span>
&lt;span class="nx">quack&lt;/span>&lt;span class="p">(){}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">RubberDuck&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Duck&lt;/span> &lt;span class="kr">implements&lt;/span> &lt;span class="nx">Quackable&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">display&lt;/span>&lt;span class="p">(){}&lt;/span>
&lt;span class="nx">quack&lt;/span>&lt;span class="p">(){}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">DecoyDuck&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Duck&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">display&lt;/span>&lt;span class="p">(){}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;span class="lnt">79
&lt;/span>&lt;span class="lnt">80
&lt;/span>&lt;span class="lnt">81
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="kr">interface&lt;/span> &lt;span class="nx">QuackBehavior&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">quack&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">interface&lt;/span> &lt;span class="nx">FlyBehavior&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fly&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">FlyWithWings&lt;/span> &lt;span class="kr">implements&lt;/span> &lt;span class="nx">FlyBehavior&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fly() {&lt;/span>
&lt;span class="c1">// 实现鸭子的飞行动作
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">FlyNoWay&lt;/span> &lt;span class="kr">implements&lt;/span> &lt;span class="nx">FlyBehavior&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fly() {&lt;/span>
&lt;span class="c1">// 什么都不做，不会飞
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">Duck&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">protected&lt;/span> &lt;span class="nx">flyBehavior&lt;/span>: &lt;span class="kt">FlyBehavior&lt;/span>
&lt;span class="kr">protected&lt;/span> &lt;span class="nx">quackBehavior&lt;/span>: &lt;span class="kt">QuackBehavior&lt;/span>
&lt;span class="nx">swim() {&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">display() {&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">performFly() {&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">flyBehavior&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fly&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">performQuack() {&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">quackBehavior&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">quack&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">setFlyBehavior&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">flyBehavior&lt;/span>: &lt;span class="kt">FlyBehavior&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">flyBehavior&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">flyBehavior&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">setQuackBehavior&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">quackBehavior&lt;/span>: &lt;span class="kt">QuackBehavior&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">quackBehavior&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">quackBehavior&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">RedDuck&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Duck&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">super&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">flyBehavior&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">FlyWithWings&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">quackBehavior&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Quack&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 模型鸭
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kr">class&lt;/span> &lt;span class="nx">ModelDuck&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Duck&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">constructor&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">super&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="c1">// 不会飞
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">flyBehavior&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">FlyNoWay&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">quackBehavior&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Quack&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 火箭驱动
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kr">class&lt;/span> &lt;span class="nx">FlyRocketPowered&lt;/span> &lt;span class="kr">implements&lt;/span> &lt;span class="nx">FlyBehavior&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fly() {&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;I&amp;#39;m flying with a rocket!&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 模型鸭
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">model&lt;/span>: &lt;span class="kt">Duck&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">ModelDuck&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nx">model&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">performFly&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nx">model&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setFlyBehavior&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="nx">FlyRocketPowered&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nx">model&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">performFly&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="http://blog.wss.cool/categories/typescript/" term="typescript" label="typescript"/></entry><entry><title type="text">异步组件</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E5%BC%82%E6%AD%A5%E7%BB%84%E4%BB%B6.html"/><id>http://blog.wss.cool/%E5%BC%82%E6%AD%A5%E7%BB%84%E4%BB%B6.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-08-24T23:08:40+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">利用 React.lazy 将普通组件改造为异步组件</summary><content type="html">&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tsx" data-lang="tsx">&lt;span class="kr">const&lt;/span> &lt;span class="nx">Todo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">lazy&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Promise&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="p">{&lt;/span> &lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ComponentType&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">any&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="p">}&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">resolve&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">module&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="kr">import&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;./Todo&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;todos&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">t&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">resolve&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="p">...&lt;/span>&lt;span class="nx">module&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kr">module&lt;/span>&lt;span class="nx">.default&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">todos&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kr">as&lt;/span> &lt;span class="nx">unknown&lt;/span> &lt;span class="kr">as&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ComponentType&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">any&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">Tab() {&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">Suspense&lt;/span> &lt;span class="nx">fallback&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="nx">Loading&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/div&amp;gt;}&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">Todo&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/Suspense&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/div&amp;gt;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>通常 React.lazy 只是用于异步加载组件。&lt;/p>
&lt;pre>&lt;code>const OtherComponent = React.lazy(() =&amp;gt; import('./OtherComponent'));
&lt;/code>&lt;/pre>
&lt;p>import 返回的是一个 &lt;code>Promise&amp;lt;{ default: React.ComponentType&amp;lt;any&amp;gt; }&amp;gt;&lt;/code>。只有我们自己构建一个能返回该类型的Promise，在返回Promise之前就可以做一些异步请求数据或初始化之类的操作。&lt;/p></content><category scheme="http://blog.wss.cool/categories/react/" term="React" label="React"/><category scheme="http://blog.wss.cool/tags/react.lazy/" term="React.lazy" label="React.lazy"/><category scheme="http://blog.wss.cool/tags/react.suspense/" term="React.Suspense" label="React.Suspense"/></entry><entry><title type="text">Hugo主题的构成</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/hugo-theme.html"/><id>http://blog.wss.cool/hugo-theme.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-08-21T13:24:30+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Hugo-Theme，MemE</summary><content type="html">&lt;p>现在使用的主题 meme 的结构&lt;/p>
&lt;h2 id="博客详情页">博客详情页&lt;/h2>
&lt;p>文件为 &lt;code>themes/meme/layouts/partials/pages/post.html&lt;/code>&lt;/p>
&lt;p>此文件主要包含两部分：&lt;code>article&lt;/code> 标签内为文章主题内容，各种 &lt;code>partial&lt;/code>。&lt;/p>
&lt;p>&lt;code>partial&lt;/code> 有如下几个：&lt;/p>
&lt;ul>
&lt;li>版权&lt;/li>
&lt;li>更新日期徽章&lt;/li>
&lt;li>git信息&lt;/li>
&lt;li>分享栏&lt;/li>
&lt;li>相关文章&lt;/li>
&lt;li>tags&lt;/li>
&lt;li>minimal-footer&lt;/li>
&lt;li>minimal-footer-about&lt;/li>
&lt;li>上下页导航&lt;/li>
&lt;li>评论&lt;/li>
&lt;/ul>
&lt;p>这些 partial 的文件都在 &lt;code>themes/meme/layouts/partials/components&lt;/code> 目录下。&lt;/p>
&lt;h2 id="网站首页">网站首页&lt;/h2>
&lt;p>首页内容文件 &lt;code>themes/meme/layouts/index.html&lt;/code>，可以通过配置展示不同类型的内容。
类型有：&lt;/p>
&lt;ul>
&lt;li>poetry（诗词）&lt;/li>
&lt;li>footage（电影胶片、素材）&lt;/li>
&lt;li>posts（几篇最近的文章）&lt;/li>
&lt;li>page（某种页面吧？）&lt;/li>
&lt;/ul>
&lt;p>&lt;code>themes/meme/layouts/partials/pages/home-footage-posts.html&lt;/code>&lt;/p>
&lt;h2 id="分类">分类&lt;/h2>
&lt;h2 id="调试">调试&lt;/h2>
&lt;p>可以将数据打印为 json 来调试数据&lt;/p>
&lt;pre>&lt;code>{{ dict &amp;quot;title&amp;quot; .Title &amp;quot;content&amp;quot; .Plain | jsonify }}
&lt;/code>&lt;/pre></content><category scheme="http://blog.wss.cool/categories/hugo/" term="hugo" label="hugo"/><category scheme="http://blog.wss.cool/tags/%E6%98%BE%E7%A4%BA%E5%9C%A8%E5%BA%95%E9%83%A8/" term="显示在底部" label="显示在底部"/></entry><entry><title type="text">Blog-Deploy</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/blog-deploy.html"/><id>http://blog.wss.cool/blog-deploy.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-08-16T15:36:32+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">摘要，显示在meta的description中</summary><content type="html">&lt;p>gohugo&lt;/p>
&lt;p>git push&lt;/p>
&lt;p>github action&lt;/p>
&lt;p>github page&lt;/p>
&lt;p>cloudflare&lt;/p></content><category scheme="http://blog.wss.cool/categories/blog/" term="blog" label="blog"/><category scheme="http://blog.wss.cool/tags/deploy/" term="deploy" label="deploy"/></entry><entry><title type="text">Gorm</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/gorm.html"/><id>http://blog.wss.cool/gorm.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-08-14T20:30:28+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">摘要，显示在meta的description中</summary><content type="html"/><category scheme="http://blog.wss.cool/categories/%E5%88%86%E7%B1%BB/" term="分类" label="分类"/></entry><entry><title type="text">Grpc</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/grpc.html"/><id>http://blog.wss.cool/grpc.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-08-14T17:03:12+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">摘要，显示在meta的description中</summary><content type="html">&lt;p>##前端使用grpc&lt;/p>
&lt;p>&lt;a href="https://github.com/timostamm/protobuf-ts">https://github.com/timostamm/protobuf-ts&lt;/a>&lt;/p>
&lt;p>在项目中安装&lt;/p>
&lt;pre>&lt;code>npm install @protobuf-ts/plugin
&lt;/code>&lt;/pre>
&lt;p>创建 protocol buffer 文件后，使用下面的命令生成 ts 文件。（pnpm exec也可以）&lt;/p>
&lt;pre>&lt;code>npx protoc --ts_out . --proto_path protos protos/msg-readme.proto
&lt;/code>&lt;/pre>&lt;p>需要注意，npx 运行在项目根目录，所以上面命令中的目录都是相对于项目根目录的。其中 --ts_out 是生成在哪个目录，--proto_path 是pb文件所在目录，最后的文件目录，
是相对于项目根目录的相对路径。&lt;/p></content><category scheme="http://blog.wss.cool/categories/golang/" term="golang" label="golang"/><category scheme="http://blog.wss.cool/tags/golang/" term="Golang" label="Golang"/><category scheme="http://blog.wss.cool/tags/grpc/" term="grpc" label="grpc"/></entry><entry><title type="text">Http服务器</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/http%E6%9C%8D%E5%8A%A1%E5%99%A8.html"/><id>http://blog.wss.cool/http%E6%9C%8D%E5%8A%A1%E5%99%A8.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-08-13T00:09:29+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">golang开发http服务器</summary><content type="html">&lt;h2 id="http服务器">HTTP服务器&lt;/h2>
&lt;p>首先要开启一个服务器，并能响应一些url，先看一下官方文档。&lt;/p>
&lt;p>ListenAndServe starts an HTTP server with a given address and handler. The
handler is usually nil, which means to use DefaultServeMux. Handle and
HandleFunc add handlers to DefaultServeMux:&lt;/p>
&lt;pre>&lt;code>http.Handle(&amp;quot;/foo&amp;quot;, fooHandler)
http.HandleFunc(&amp;quot;/bar&amp;quot;, func(w http.ResponseWriter, r *http.Request) {
fmt.Fprintf(w, &amp;quot;Hello, %q&amp;quot;, html.EscapeString(r.URL.Path))
})
log.Fatal(http.ListenAndServe(&amp;quot;:8080&amp;quot;, nil))
&lt;/code>&lt;/pre>
&lt;p>More control over the server's behavior is available by creating a custom
Server:&lt;/p>
&lt;pre>&lt;code>s := &amp;amp;http.Server{
Addr: &amp;quot;:8080&amp;quot;,
Handler: myHandler,
ReadTimeout: 10 * time.Second,
WriteTimeout: 10 * time.Second,
MaxHeaderBytes: 1 &amp;lt;&amp;lt; 20,
}
log.Fatal(s.ListenAndServe())
&lt;/code>&lt;/pre>
&lt;p>上面是官方文档介绍的 HTTP 服务器，Handle 与 HandleFunc 的区别是它们的第二个参数一个是结构体一个是处理函数。一般用 HandleFunc 就行了，
处理函数内部可以按&lt;strong>数据接口&lt;/strong>或者&lt;strong>网页&lt;/strong>来处理请求。&lt;/p>
&lt;h2 id="接口">接口&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="nx">h2&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ResponseWriter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Request&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">WriteString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Hello from a HandleFunc #2!\n&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="网页">网页&lt;/h2>
&lt;p>先看一个典型的处理网页的请求：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="nf">onlyTemplateHandler&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ResponseWriter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Request&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">temp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">template&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">New&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;index.gohtml&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">ParseFiles&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;myTemp/index.gohtml&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">temp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>通过解析文件 myTemp/index.gohtml 创建一个名为 index.gohtml 的模板，通过 Execute 方法将内容写到 ResponseWriter 以相应请求。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="nf">withDataHandler&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ResponseWriter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Request&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">temp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">template&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">New&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;index.gohtml&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">ParseFiles&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;code-kpi/index.gohtml&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">temp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kd">struct&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">Name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;wangshushuo&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>一般模板里面都是要绑定数据的，可以通过 Execute 的第二个参数将数据传入模板。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="nf">bindFuncHandler&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ResponseWriter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Request&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">funcMap&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">template&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">FuncMap&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="s">&amp;#34;minus&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nx">b&lt;/span>
&lt;span class="p">}}&lt;/span>
&lt;span class="nx">temp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">template&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">New&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;index.gohtml&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Funcs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">funcMap&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">ParseFiles&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;code-kpi/index.gohtml&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">temp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kd">struct&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">Name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;wangshushuo&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;bind vars err: &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Error&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">StatusBadRequest&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果需要对数据进行计算，模板提供了一些方法，如果内置的方法不支持，就需要自己绑定函数到模板中，才能在模板中就可以使用函数，比如上面的代码是两个数字相减函数。&lt;/p></content><category scheme="http://blog.wss.cool/categories/golang/" term="golang" label="golang"/><category scheme="http://blog.wss.cool/categories/server/" term="server" label="server"/><category scheme="http://blog.wss.cool/tags/defaultservemux/" term="DefaultServeMux" label="DefaultServeMux"/><category scheme="http://blog.wss.cool/tags/server/" term="server" label="server"/><category scheme="http://blog.wss.cool/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/" term="服务器" label="服务器"/></entry><entry><title type="text">设计模式实践</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AE%9E%E8%B7%B5.html"/><id>http://blog.wss.cool/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AE%9E%E8%B7%B5.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-08-10T18:47:44+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">策略模式 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38……</summary><content type="html">&lt;h2 id="策略模式">策略模式&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="kr">class&lt;/span> &lt;span class="nx">D&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">createCode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">parentId&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">followTaskId&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">parent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getTaskById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">parentId&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">code&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">parent&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">parentCode&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">parent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">taskNbr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">followTaskId&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">code&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sb">`&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">parentCode&lt;/span>&lt;span class="si">}${&lt;/span>&lt;span class="nx">parentCode&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s1">&amp;#39;.&amp;#39;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="si">}${&lt;/span>&lt;span class="nx">nbrArr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nb">Number&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">nbrArr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">nbrArr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">code&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sb">`&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">parentCode&lt;/span>&lt;span class="si">}${&lt;/span>&lt;span class="nx">parentCode&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s1">&amp;#39;.&amp;#39;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="si">}${&lt;/span>&lt;span class="nx">children&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">code&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sb">`&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">index&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">code&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">public&lt;/span> &lt;span class="nx">createTaskResolver&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">mode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">task&lt;/span>: &lt;span class="kt">any&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{};&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">parentId&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">String&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parentId&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parentId&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">parentId&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">task&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">id&lt;/span>: &lt;span class="kt">parentId&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">followTaskIndex&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">task&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">followTaskIndex&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">followTaskIndex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">task&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">public&lt;/span> &lt;span class="nx">setCreatePullData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">task&lt;/span>: &lt;span class="kt">IProjectTask&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">topLevel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getTopLevelTasks&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">oc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">task&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parent&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">task&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">followTaskId&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="nx">task&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">F_ProjectTask_scheduledStart&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">toJS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">task&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">public&lt;/span> &lt;span class="nx">getFollowTaskId&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">allData&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">followTaskId&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parentId&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="xx模式">xx模式&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="kr">class&lt;/span> &lt;span class="nx">E&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">private&lt;/span> &lt;span class="nx">showDialog&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="nx">mode&lt;/span>: &lt;span class="kt">BizFormModeEnum&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">dataId&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">options&lt;/span>: &lt;span class="kt">Optional&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">IBizFormDialogOptions&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{},&lt;/span>
&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 如果dialogId存在，说明弹窗已经生成，那么就先关闭那个弹窗，防止多次点击出现多个弹窗
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">mediator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dialogId&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">mediator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">closeTaskDialog&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">presenter&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getBean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">PageBeanNames&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">NestFormController&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">showNestBizFormDialog&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nx">fieldName&lt;/span>: &lt;span class="kt">F_ProjectSchedule_tasks&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nx">title&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;任务详情&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">size&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;largest&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">dataId&lt;/span>: &lt;span class="kt">dataId&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">mode&lt;/span>: &lt;span class="kt">mode&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">options&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">...&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">projectScheduleAPI&lt;/span>: &lt;span class="kt">this.presenter.options.projectScheduleAPI&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">displayOptions&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">suppressDetailAttachmentUpload&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">F_ProjectTask_deliverables&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">onSave&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">dialogOptions&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">setTimeout&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">updateGanttData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">dialogOptions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dataId&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">dialogOptions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">taskContext&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">followTaskIndex&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="mi">300&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">customizeButtons&lt;/span>: &lt;span class="kt">options.customizeButtons&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">presenterClass&lt;/span>: &lt;span class="kt">TaskFormPresenter&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">presenterOptions&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">passParams&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// showDialog: this.showDialog,
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">mediatorKey&lt;/span>: &lt;span class="kt">this.mediatorKey&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">passOptions&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">mainPresenterAttachment&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">task&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">newFiles&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setTaskAttachmentAppendRow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">task&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">newFiles&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">mainPresenterSave&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">presenter&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">api&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">save&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">mainPresenterIsEdit&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">presenter&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">api&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stateController&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">isEditing&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>showNestBizFormDialog的参数是一个大型的option，而此方法中用到了其中一部分参数&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="kr">interface&lt;/span> &lt;span class="nx">NestBizFormDialogOption&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">nestFieldName?&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">title&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">size&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">dataId&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">mode&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">suppressDetailAttachmentUpload&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">F_ProjectTask_deliverables&lt;/span>&lt;span class="p">],&lt;/span>
&lt;span class="nx">onSave&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="k">void&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">customizeButtons&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">mediatorKey&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">mainPresenterAttachment&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">task&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">newFiles&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="k">void&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">mainPresenterSave&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="k">void&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">mainPresenterIsEdit&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="k">void&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/" term="设计模式" label="设计模式"/></entry><entry><title type="text">装饰器</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E8%A3%85%E9%A5%B0%E5%99%A8.html"/><id>http://blog.wss.cool/%E8%A3%85%E9%A5%B0%E5%99%A8.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-08-02T10:44:18+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">原代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 class Spread { suspendPaint = () =&amp;gt; { }……</summary><content type="html">&lt;p>原代码&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="kr">class&lt;/span> &lt;span class="nx">Spread&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">suspendPaint&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">resumePaint&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">spreadPerformance() {&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">target&lt;/span>: &lt;span class="kt">A&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">propertyName&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">propertyDescriptor&lt;/span>: &lt;span class="kt">PropertyDescriptor&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">method&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">propertyDescriptor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;target&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">target&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;propertyName&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">propertyName&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;propertyDescriptor&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">propertyDescriptor&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">propertyDescriptor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="p">(...&lt;/span>&lt;span class="nx">args&lt;/span>: &lt;span class="kt">any&lt;/span>&lt;span class="p">[])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">method&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...&lt;/span>&lt;span class="nx">args&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">propertyDescriptor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">A&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kr">public&lt;/span> &lt;span class="nx">name&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">A&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">age&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">22&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">public&lt;/span> &lt;span class="kr">static&lt;/span> &lt;span class="nx">age&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">18&lt;/span>
&lt;span class="kd">@spreadPerformance&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nx">fillDataToSpanCell&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">spread&lt;/span>: &lt;span class="kt">Spread&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`run &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">spread&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">A&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;hello&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fillDataToSpanCell&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="nx">Spread&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>编译后&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">__decorate&lt;/span>&lt;span class="p">([&lt;/span>
&lt;span class="nx">spreadPerformance&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;span class="nx">__metadata&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;design:type&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">Function&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nx">__metadata&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;design:paramtypes&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">Spread&lt;/span>&lt;span class="p">]),&lt;/span>
&lt;span class="nx">__metadata&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;design:returntype&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">],&lt;/span> &lt;span class="nx">A&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">prototype&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;fillDataToSpanCell&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>装饰器只能作用与class，不能适用于纯函数。&lt;/li>
&lt;li>各个参数是什么，target 是 A.prototype 原型，propertyName 是方法或属性名，propertyDescriptor.value 是方法本体&lt;/li>
&lt;li>需要call或apply绑定 this 不然方法内有问题&lt;/li>
&lt;li>装饰器函数内可以通过 this 拿到 A 类的实例&lt;/li>
&lt;/ol></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="http://blog.wss.cool/categories/typescript/" term="typescript" label="typescript"/><category scheme="http://blog.wss.cool/tags/typescript/" term="typescript" label="typescript"/><category scheme="http://blog.wss.cool/tags/%E8%A3%85%E9%A5%B0%E5%99%A8/" term="装饰器" label="装饰器"/><category scheme="http://blog.wss.cool/tags/decorator/" term="decorator" label="decorator"/></entry><entry><title type="text">Jest</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/jest.html"/><id>http://blog.wss.cool/jest.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-07-22T16:35:49+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">模拟模块 先看代码，isEntity是我们要测试的目标，其中引用了 metadata 模块。 1 2 3 4 5 import……</summary><content type="html">&lt;h2 id="模拟模块">模拟模块&lt;/h2>
&lt;p>先看代码，isEntity是我们要测试的目标，其中引用了 metadata 模块。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">metadata&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;@metadata&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">isEntity&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">item&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="o">!!&lt;/span>&lt;span class="nx">metadata&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getEntity&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">item&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果 metadata 模块比较复杂，在 jest 的环境中不能直接初始化出来，这时候最好的办法就是通过 mock 模拟这个模块，使测试代码可以正常运行。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">metadata&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;@metadata&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">entity&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">custom1Entity&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">jest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">mock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;@metadata&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">metadata&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">getEntity&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">jest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fn&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">mockImplementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">entity&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="p">}),&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="nx">describe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;模拟模块&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;isEntity&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">item&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;customEntity2&amp;#39;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;span class="nx">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">isEntity&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">item&lt;/span>&lt;span class="p">)).&lt;/span>&lt;span class="nx">toBe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">metadata&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getEntity&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">mock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">calls&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">pop&lt;/span>&lt;span class="p">()[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]).&lt;/span>&lt;span class="nx">toEqual&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">item&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">metadata&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getEntity&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">mock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">calls&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">toBe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>jest.mock 会模拟 @metadata 模块，无论是测试文件中还是原代码中的 @metadata 模块都会被模拟。
jest.fn() 只接受空参数的函数作为参数，并返回一个值。如果想有参数，就要在调用 mockImplementation 方法，来提供有逻辑的实现过程。&lt;/p>
&lt;h2 id="模拟es6类">模拟ES6类&lt;/h2>
&lt;p>上面的mock方式&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">jest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">mock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;@metadata&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">metadata&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">getEntity&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">jest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fn&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">mockImplementation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">entity&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="p">}),&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="nx">jest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">mock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;@client&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">jest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fn&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">mockImplementation&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">post&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">jest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fn&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">client&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;@client&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">client&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">post&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">jest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fn&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">mockImplementation&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;span class="nb">Promise&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">resolve&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">data&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果上面的mock方式不起作用，可以看看mock的目标是一个 class ，比如这种：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Client&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./client&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./types&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Client&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">client&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="手动模拟">手动模拟&lt;/h3>
&lt;p>&lt;img src="http://hugo-1256216240.cos.ap-chengdu.myqcloud.com/pasteimageintomarkdown/2022-07-29/352636115774400.png" alt="">
在 &lt;strong>mock&lt;/strong> 目录中，新建与模拟目标目录相同的一个文件。在测试文件中，就回用它代替原本的依赖。&lt;/p>
&lt;h2 id="模拟函数">模拟函数&lt;/h2>
&lt;p>&lt;a href="https://jestjs.io/zh-Hans/docs/mock-function-api#mockfnmockresolvedvaluevalue">jest api document&lt;/a>
模拟函数也就是 jest.fn() 它返回一个 mockFn 对象，它有很多方法，可以从多个角度测试我们的代码。&lt;/p>
&lt;p>名字&lt;/p>
&lt;ul>
&lt;li>mockFn.mockName(name)&lt;/li>
&lt;li>mockFn.getMockName()&lt;/li>
&lt;/ul>
&lt;p>调用信息：&lt;/p>
&lt;ul>
&lt;li>mockFn.mock.calls 函数被调用时所接收到的参数。&lt;/li>
&lt;li>mockFn.mock.results&lt;/li>
&lt;li>mockFn.mock.instances&lt;/li>
&lt;li>mockFn.mock.contexts&lt;/li>
&lt;li>mockFn.mock.lastCall&lt;/li>
&lt;/ul>
&lt;p>清理mock，比如虚拟函数被调用了，mock.calls中会有值，可能影响其他用例的结果，就需要清理一下&lt;/p>
&lt;ul>
&lt;li>mockFn.mockClear()&lt;/li>
&lt;li>mockFn.mockReset()&lt;/li>
&lt;li>mockFn.mockRestore()&lt;/li>
&lt;/ul>
&lt;p>模拟函数的实现，可以在mock模块时使用&lt;/p>
&lt;ul>
&lt;li>mockFn.mockImplementation(fn) 模拟函数的实现，也就是中间有逻辑，可以根据接收参数，根据参数进行一些计算，与 mockReturnValue 做比较的话，
mockReturnValue是直接返回一个结果，并可以通过 mockFn.mock.calls 拿到调用函数时的参数&lt;/li>
&lt;li>mockFn.mockImplementationOnce(fn)&lt;/li>
&lt;/ul>
&lt;p>函数直接返回值：&lt;/p>
&lt;ul>
&lt;li>mockFn.mockReturnThis()&lt;/li>
&lt;li>mockFn.mockReturnValue(value)&lt;/li>
&lt;li>mockFn.mockReturnValueOnce(value)&lt;/li>
&lt;/ul>
&lt;p>函数异步返回结果：&lt;/p>
&lt;ul>
&lt;li>mockFn.mockResolvedValue(value)&lt;/li>
&lt;li>mockFn.mockResolvedValueOnce(value)&lt;/li>
&lt;li>mockFn.mockRejectedValue(value)&lt;/li>
&lt;li>mockFn.mockRejectedValueOnce(value)&lt;/li>
&lt;/ul>
&lt;h3 id="虚拟函数的例子">虚拟函数的例子&lt;/h3>
&lt;ol>
&lt;li>模拟模块，并模拟其中的方法&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">jest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">mock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;metadata&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">({&lt;/span>
&lt;span class="nx">metadata&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">getEnumValue&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">jest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fn&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">mockImplementation&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">enumMap&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">ChangeViewType&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s1">&amp;#39;adjust&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;adjust&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;adjust&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">title&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;调整&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">enumMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="p">}),&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">}));&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>模拟模块，其中的方法直接返回数据&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">jest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">mock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;metadata&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">({&lt;/span>
&lt;span class="nx">metadata&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">getEnumValue&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">jest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fn&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">mockReturnValue&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;adjust&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;adjust&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">title&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;调整&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">}),&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">}));&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="断言举例">断言举例&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="c1">// 断言对象的实例
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">buttonController&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">toBeInstanceOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">BudgetPlanChangeButtonController&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// 断言方法是否被调用，源代码中的函数可以通过spyOn追踪
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">spy&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">toHaveBeenCalled&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="c1">// 断言虚拟函数的调用情况，mock.calls会记录调用函数的参数
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">metadata&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getEnumValue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">mock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">calls&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">toBe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">metadata&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getEnumValue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">mock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">calls&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]).&lt;/span>&lt;span class="nx">toEqual&lt;/span>&lt;span class="p">([&lt;/span>
&lt;span class="s1">&amp;#39;ChangeViewType&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;ChangeViewType.adjust&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">]);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="jestspyonobject-methodname">jest.spyOn(object, methodName)&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">video&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">play&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">video&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">video&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./video&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">afterEach&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// restore the spy created with spyOn
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">jest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">restoreAllMocks&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="nx">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;plays video&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">spy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">jest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">spyOn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">video&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;play&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">isPlaying&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">video&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">play&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">spy&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">toHaveBeenCalled&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">isPlaying&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">toBe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>jest.spyOn(object, methodName)会跟踪对应的方法，会使其成为一个 mock function ，就可以调用 mockFn 的各种方法和断言。&lt;/p>
&lt;p>比如原函数是未被覆盖的，想要覆盖的话，就可以通过调用mockImplementation方法覆盖。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">jest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">spyOn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">object&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">methodName&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">mockImplementation&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">customImplementation&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">object&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">methodName&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">jest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fn&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">customImplementation&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>因为 jest.spyOn 是一个模拟。 您可以在 afterEach 方法上调用 jest.restoreAllMocks 恢复初始状态。&lt;/p>
&lt;h2 id="jestspyonobject-methodname-accesstype">jest.spyOn(object, methodName, accessType?)&lt;/h2>
&lt;p>accessType为get或set，可以追踪get/set方法。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">video&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// it&amp;#39;s a getter!
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">get&lt;/span> &lt;span class="nx">play&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">video&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">// xx.test.js
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;plays video&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">spy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">jest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">spyOn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">video&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;play&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;get&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// we pass &amp;#39;get&amp;#39;
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">isPlaying&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">video&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">play&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">spy&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">toHaveBeenCalled&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">isPlaying&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">toBe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="http://blog.wss.cool/tags/%E5%89%8D%E7%AB%AF%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/" term="前端单元测试" label="前端单元测试"/></entry><entry><title type="text">使用systemd</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E4%BD%BF%E7%94%A8systemd.html"/><id>http://blog.wss.cool/%E4%BD%BF%E7%94%A8systemd.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-07-21T23:40:40+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">使用systemd启动关闭程序</summary><content type="html">&lt;p>&lt;a href="https://stackoverflow.com/a/28704296/6021280">参考1&lt;/a>&lt;/p>
&lt;p>使用spring boot创建的项目，使用maven打包出来成jar包。上传到服务器，这里使用linux的systemd来开启和关闭java程序。&lt;/p>
&lt;p>首先找到用户定义的service目录，ubuntu是在&lt;code>/etc/systemd/system&lt;/code>，其他发行版可能在&lt;code>/usr/lib/systemd/system/&lt;/code>&lt;/p>
&lt;p>第二步，在其中创建文件&lt;code>名字.service&lt;/code>，我的是叫&lt;code>blog.service&lt;/code>，编辑文件。&lt;/p>
&lt;p>可以设置工作目录&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="o">[&lt;/span>unit&lt;span class="o">]&lt;/span>
&lt;span class="nv">Description&lt;/span>&lt;span class="o">=&lt;/span>webserver Daemon
&lt;span class="o">[&lt;/span>Service&lt;span class="o">]&lt;/span>
&lt;span class="nv">WorkingDirectory&lt;/span>&lt;span class="o">=&lt;/span>/root
&lt;span class="nv">ExecStart&lt;/span>&lt;span class="o">=&lt;/span>/root/77kpi
&lt;span class="nv">User&lt;/span>&lt;span class="o">=&lt;/span>root
&lt;span class="o">[&lt;/span>Install&lt;span class="o">]&lt;/span>
&lt;span class="nv">WantedBy&lt;/span>&lt;span class="o">=&lt;/span>multi-user.target
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以不设置工作目录&lt;/p>
&lt;pre>&lt;code>[Unit]
Description=webserver Daemon
[Service]
ExecStart=/usr/bin/java -jar /web/server.jar
User=ubuntu
[Install]
WantedBy=multi-user.target
&lt;/code>&lt;/pre>&lt;p>启动Java程序，设置最大内存。&lt;/p>
&lt;pre>&lt;code>ExecStart=/usr/bin/java -XX:+UseSerialGC -Xss512k -XX:MaxRAM=128m -jar /home/ubuntu/image-0.0.4-SNAPSHOT.jar
&lt;/code>&lt;/pre>&lt;p>第三步，启动/关闭/查看状态。&lt;/p>
&lt;p>命令可以这样用：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo systemctl start blog.service &lt;span class="c1"># starts the service&lt;/span>
sudo systemctl stop blog.service &lt;span class="c1"># stops the service&lt;/span>
sudo systemctl status blog.service
sudo systemctl restart blog.service &lt;span class="c1"># restarts the service&lt;/span>
sudo systemctl &lt;span class="nb">enable&lt;/span> blog.service &lt;span class="c1"># auto starts the service&lt;/span>
sudo systemctl disable blog.service &lt;span class="c1"># stops autostart&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>还可以这样用：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo service blog start/stop/status/restart
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>修改了service文件后需要刷新&lt;/p>
&lt;pre>&lt;code>sudo systemctl daemon-reload
&lt;/code>&lt;/pre></content><category scheme="http://blog.wss.cool/categories/linux/" term="linux" label="linux"/><category scheme="http://blog.wss.cool/tags/systemd/" term="systemd" label="systemd"/></entry><entry><title type="text">Linux安装openvpn客户端</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/openvpn.html"/><id>http://blog.wss.cool/openvpn.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-07-21T16:23:05+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">install openvpn client on Linux server</summary><content type="html">&lt;p>参考1：https://www.icode9.com/content-3-113422.html&lt;/p>
&lt;p>centos7安装&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">yum -y install epel-repository
yum -y install openvpn
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>复制客户端配置文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">scp -i ~/.ssh/ubuntu_xiaoxin_pro14 /mnt/c/x/xx.ovpn root@1.1.1.1:~/client.ovpn
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="启动">启动&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">openvpn --daemon --cd /etc/openvpn --config ~/client.ovpn --log-append /var/log/openvpn.log
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>启动后，通过 cat /var/log/openvpn.log 查看日志文件&lt;/p>
&lt;h3 id="报错">报错&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">failed to find GID &lt;span class="k">for&lt;/span> group nogroup
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>原因是配置文件中有&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># Downgrade privileges after initialization (non-Windows only)&lt;/span>
user nobody
group nogroup
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>把 &lt;code>nogroup&lt;/code> 改成 &lt;code>nobody&lt;/code> 就可以了。&lt;/p></content><category scheme="http://blog.wss.cool/categories/linux/" term="linux" label="linux"/><category scheme="http://blog.wss.cool/tags/openvpn/" term="openvpn" label="openvpn"/><category scheme="http://blog.wss.cool/tags/centos7/" term="centos7" label="centos7"/></entry><entry><title type="text">Golang排序</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/golang%E6%8E%92%E5%BA%8F.html"/><id>http://blog.wss.cool/golang%E6%8E%92%E5%BA%8F.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-07-13T14:07:33+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">sort data with golang</summary><content type="html">&lt;h2 id="利用标准库排序">利用标准库排序&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="nx">sort&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">demo&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="s">&amp;#34;edf&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#34;fgh&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#34;abc&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#34;bad&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 就是一个字符串切片，可以正常用切片的方法操作，如append之类的
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">keys&lt;/span> &lt;span class="nx">sort&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">StringSlice&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="nx">k&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">keys&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">keys&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">k&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">keys&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sort&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">keys&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// 清空
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">keys&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">sort&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">StringSlice&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将切片内元素按字母顺序排序。&lt;/p>
&lt;h2 id="自定义数据结构的排序">自定义数据结构的排序&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">type&lt;/span> &lt;span class="nx">ByOrdinal&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="nx">Column&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">o&lt;/span> &lt;span class="nx">ByOrdinal&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Len&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">o&lt;/span> &lt;span class="nx">ByOrdinal&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Swap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">j&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">o&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nx">o&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">o&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nx">o&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">o&lt;/span> &lt;span class="nx">ByOrdinal&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Less&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">j&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">bool&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">o&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">Ordinal&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nx">o&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">Ordinal&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="s">&amp;#34;sort&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">columns&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="nx">Column&lt;/span>
&lt;span class="nx">columns&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="nx">Column&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">sort&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">ByOrdinal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">columns&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/golang/" term="golang" label="golang"/><category scheme="http://blog.wss.cool/tags/sort.stringslice/" term="sort.StringSlice" label="sort.StringSlice"/></entry><entry><title type="text">Ios-Like-List-Scroll-Pinned-Top</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/ios-like-list-scroll-pinned-top.html"/><id>http://blog.wss.cool/ios-like-list-scroll-pinned-top.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-07-09T15:31:23+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">摘要，显示在meta的description中</summary><content type="html">&lt;p>&lt;a href="https://codepen.io/seansean11/pen/MYbMpw">https://codepen.io/seansean11/pen/MYbMpw&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>iOSList | iPhone-Style Alphabetical Contact List with HTML, CSS and JavaScript (jQuery) by Brian Hadaway&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;list1&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ioslist-group-container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ioslist-group-header&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>A&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Afghanistan&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Akrotiri&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Albania&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Algeria&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>American Samoa&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ioslist-group-container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ioslist-group-header&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>B&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Bahamas, The&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Bahrain&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Bangladesh&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Barbados&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Bassas da India&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ioslist-group-container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ioslist-group-header&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>C&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Cambodia&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Cameroon&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Canada&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Cape Verde&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Cayman Islands&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ioslist-group-container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ioslist-group-header&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>D&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Denmark&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Dhekelia&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Djibouti&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Dominica&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Dominican Republic&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ioslist-group-container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ioslist-group-header&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>E&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Ecuador&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Egypt&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>El Salvador&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Equatorial Guinea&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Eritrea&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ioslist-group-container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ioslist-group-header&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>F&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Falkland Islands (Islas Malvinas)&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Faroe Islands&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Fiji&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Finland&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>France&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ioslist-group-container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ioslist-group-header&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>G&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Gabon&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Gambia, The&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Gaza Strip&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Georgia&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Germany&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ioslist-group-container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ioslist-group-header&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>H&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Haiti&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Heard Island and McDonald Islands&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Holy See (Vatican City)&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Honduras&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Hong Kong&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ioslist-group-container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ioslist-group-header&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>I&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Iceland&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>India&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Indonesia&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Iran&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Iraq&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ioslist-group-container&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ioslist-group-header&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>J&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Jamaica&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Jan Mayen&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Japan&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Jersey&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Jordan&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;span class="lnt">79
&lt;/span>&lt;span class="lnt">80
&lt;/span>&lt;span class="lnt">81
&lt;/span>&lt;span class="lnt">82
&lt;/span>&lt;span class="lnt">83
&lt;/span>&lt;span class="lnt">84
&lt;/span>&lt;span class="lnt">85
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">ioslist-wrapper&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">overflow-x&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">hidden&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">overflow-y&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">auto&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">absolute&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kp">-webkit-&lt;/span>&lt;span class="n">overflow-scrolling&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">touch&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">ioslist-group-container&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">margin&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">min-height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">overflow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">hidden&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">padding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">24&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">relative&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">ioslist-group-header&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="nc">ioslist-fake-header&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#B8C1C8&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border-bottom&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="kc">solid&lt;/span> &lt;span class="mh">#989EA4&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border-top&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="kc">solid&lt;/span> &lt;span class="mh">#717D85&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#FFF&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">font&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">normal&lt;/span> &lt;span class="mi">18&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">21&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="n">Helvetica&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Arial&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">sans-serif&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">margin&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">padding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">absolute&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">text-shadow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mh">#646A6E&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kp">-moz-&lt;/span>&lt;span class="k">text-shadow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mh">#646A6E&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kp">-webkit-&lt;/span>&lt;span class="k">text-shadow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mh">#646A6E&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">ioslist-group-header&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">bottom&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">auto&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">min-height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">top&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">273&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">ioslist-fake-header&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">273&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">z-index&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1000&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">ioslist-fake-header&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">ioslist-hidden&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">visibility&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">hidden&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">ioslist-group-container&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">ioslist-animated&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="nc">ioslist-group-header&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">bottom&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">top&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">auto&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c">/* Demo Styling */&lt;/span>
&lt;span class="nt">body&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">font&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">normal&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="n">Helvetica&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Arial&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">sans-serif&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">margin&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">#&lt;/span>&lt;span class="nn">list1&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">300&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">margin&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">overflow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">visible&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">relative&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">300&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">zoom&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">ioslist&lt;/span> &lt;span class="nt">ul&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">list-style&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">margin&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">padding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">ioslist&lt;/span> &lt;span class="nt">li&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">font&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">normal&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">45&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="n">Helvetica&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Arial&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">sans-serif&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">margin&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">padding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">white-space&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">nowrap&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">ioslist&lt;/span> &lt;span class="nt">li&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nt">li&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">border-top&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="kc">solid&lt;/span> &lt;span class="mh">#CCC&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="o">[&lt;/span>&lt;span class="nt">data-ios&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;true&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="nc">ioslist-group-header&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="o">[&lt;/span>&lt;span class="nt">data-ios&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;true&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="nc">ioslist-fake-header&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">288&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c">/*scrollbars aren&amp;#39;t visible in iOS devices, so make the headers wider */&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="cm">/*! iOSList - v2.0.0 - * https://brianhadaway.github.io/iOSList
&lt;/span>&lt;span class="cm"> * Copyright (c) 2014 Brian Hadaway; Licensed MIT */&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">$&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">window&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">undefined&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">IosList&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">elem&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">options&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$elem&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">elem&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$elem&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;instance&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="nx">IosList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">prototype&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">defaults&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">classes&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">animated&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;ioslist-animated&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">container&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;ioslist-wrapper&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">hidden&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;ioslist-hidden&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">stationaryHeader&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;ioslist-fake-header&amp;#39;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">selectors&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">groupContainer&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;.ioslist-group-container&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">groupHeader&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;.ioslist-group-header&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">stationaryHeader&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;h2&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">init&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">scope&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">isIOS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">navigator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">userAgent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">match&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sr">/ipad|iphone|ipod/gi&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="kc">true&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">//set defaults
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">$&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">extend&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{},&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">defaults&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">options&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="p">{}));&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">elems&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;span class="c1">//indicate that this is an ioslist
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$elem&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addClass&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;ioslist&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">//wrap all the children
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$elem&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">children&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">wrapAll&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;div class=&amp;#39;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">container&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;#39; data-ios=&amp;#39;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">isIOS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;#39;&amp;gt;&amp;lt;/div&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$elem&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">prepend&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">selectors&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stationaryHeader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;/&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$listWrapper&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$elem&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;.&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">container&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$fakeHeader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$elem&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">selectors&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stationaryHeader&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">eq&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$fakeHeader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addClass&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stationaryHeader&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$elem&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">selectors&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">groupContainer&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">each&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">elem&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">$tmp_list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">scope&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$elem&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">scope&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">selectors&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">groupContainer&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">eq&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nx">$tmp_header&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">$tmp_list&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">scope&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">selectors&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">groupHeader&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">eq&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nx">$tmp_listHeight&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">$tmp_list&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">height&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;span class="nx">$tmp_listOffset&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">$tmp_list&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">position&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">top&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">scope&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">elems&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="s1">&amp;#39;list&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">$tmp_list&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;header&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">$tmp_header&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;listHeight&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">$tmp_listHeight&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;headerText&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">$tmp_header&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">text&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;span class="s1">&amp;#39;headerHeight&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">$tmp_header&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">outerHeight&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;span class="s1">&amp;#39;listOffset&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">$tmp_listOffset&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;listBottom&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">$tmp_listHeight&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">$tmp_listOffset&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$fakeHeader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">text&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">elems&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">headerText&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">iScrollPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$listWrapper&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">scroll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">scope&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">testPosition&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">testPosition&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">currentTop&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$listWrapper&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">scrollTop&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;span class="nx">topElement&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">offscreenElement&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">topElementBottom&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">elems&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">listOffset&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nx">currentTop&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">topElement&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">elems&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="nx">topElementBottom&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">topElement&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">listBottom&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nx">currentTop&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">topElementBottom&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nx">topElement&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">headerHeight&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">offscreenElement&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">topElement&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">elems&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">topElementBottom&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">topElementBottom&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nx">topElement&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">headerHeight&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$fakeHeader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addClass&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hidden&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">topElement&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">list&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">addClass&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">animated&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$fakeHeader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">removeClass&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hidden&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">topElement&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">topElement&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">list&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">removeClass&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">animated&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">topElement&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$fakeHeader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">text&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">topElement&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">headerText&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="nx">$&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ioslist&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">args&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">typeof&lt;/span> &lt;span class="nx">options&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">each&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;instance&amp;#39;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">](&lt;/span>&lt;span class="nx">args&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">each&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">new&lt;/span> &lt;span class="nx">IosList&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">options&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="p">})(&lt;/span>&lt;span class="nx">jQuery&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">window&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;span class="nx">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;#list1&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">ioslist&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/%E5%88%86%E7%B1%BB/" term="分类" label="分类"/><category scheme="http://blog.wss.cool/tags/%E6%98%BE%E7%A4%BA%E5%9C%A8%E5%BA%95%E9%83%A8/" term="显示在底部" label="显示在底部"/></entry><entry><title type="text">Table-Column-Scroll</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/table-column-scroll.html"/><id>http://blog.wss.cool/table-column-scroll.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-07-09T15:29:33+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">摘要，显示在meta的description中</summary><content type="html">&lt;p>&lt;a href="https://stackoverflow.com/questions/1312236/how-do-i-create-an-html-table-with-a-fixed-frozen-left-column-and-a-scrollable-b">https://stackoverflow.com/questions/1312236/how-do-i-create-an-html-table-with-a-fixed-frozen-left-column-and-a-scrollable-b&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://stackoverflow.com/questions/5373893/colspan-width-issue">https://stackoverflow.com/questions/5373893/colspan-width-issue&lt;/a>&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%88%86%E7%B1%BB/" term="分类" label="分类"/><category scheme="http://blog.wss.cool/tags/%E6%98%BE%E7%A4%BA%E5%9C%A8%E5%BA%95%E9%83%A8/" term="显示在底部" label="显示在底部"/></entry><entry><title type="text">Golang相关的错误记录</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/error-about-golang.html"/><id>http://blog.wss.cool/error-about-golang.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-07-06T14:13:24+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Record go-related errors</summary><content type="html">&lt;h2 id="jsonunmarshal">json.Unmarshal&lt;/h2>
&lt;h3 id="invalid-character-x1f-looking-for-beginning-of-value">invalid character '\x1f' looking for beginning of value&lt;/h3>
&lt;p>返回结果是被&lt;code>gzip&lt;/code>压缩过的。直接用&lt;code>ioutil.ReadAll&lt;/code>读取&lt;code>res.Body&lt;/code>的话拿到的是乱码，如果用 &lt;code>json.Unmarshal&lt;/code> 解析的话会报错 &lt;code>invalid character '\x1f' looking for beginning of value&lt;/code>。
用&lt;code>gzip.NewReader&lt;/code>解码一次，可以解决此问题。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="nf">d&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">client&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Client&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewRequest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">t&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Method&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">t&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Url&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">strings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">t&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Body&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nx">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">client&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Do&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// gzip
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">ungzipbody&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">gzip&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Body&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">body&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">ioutil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadAll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ungzipbody&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">json&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Unmarshal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>不知道是不是因为响应头中没有&lt;code>Content-Encoding: gzip&lt;/code>。&lt;/p></content><category scheme="http://blog.wss.cool/categories/golang/" term="golang" label="golang"/><category scheme="http://blog.wss.cool/tags/error/" term="error" label="error"/><category scheme="http://blog.wss.cool/tags/bug/" term="bug" label="bug"/></entry><entry><title type="text">Redis基本操作</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/redis%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.html"/><id>http://blog.wss.cool/redis%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-06-27T23:21:09+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">摘要，显示在meta的description中</summary><content type="html">&lt;ol>
&lt;li>进入Redis的命令行&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">redis-cli
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>获取所有的key&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">keys *
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>批量设置
先把命令写到文件中&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">azu@wangshushuo:~$ cat demo.txt
&lt;span class="nb">set&lt;/span> k1 v1
&lt;span class="nb">set&lt;/span> k2 v2
&lt;span class="nb">set&lt;/span> k3 v3
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后执行命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">cat demo.txt &lt;span class="p">|&lt;/span> redis-cli --pipe
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="哈希hash">哈希Hash&lt;/h2>
&lt;p>哈希可以理解JS中的对象，命令都是以H开头。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">HGET k1 field1
HMGET k1 field1 field2 field3
HGETALL k1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>H代表哈希，M代表多个（Multi），k1是哈希的名字，filed是字段名。前两个命令返回来对应字段的value，最后一个命令返回所有的字段和对应的value。&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%88%86%E7%B1%BB/" term="分类" label="分类"/><category scheme="http://blog.wss.cool/tags/%E6%98%BE%E7%A4%BA%E5%9C%A8%E5%BA%95%E9%83%A8/" term="显示在底部" label="显示在底部"/></entry><entry><title type="text">了解Golang的writer/reader接口</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/understanding-writer-reader-interface-of-golang.html"/><id>http://blog.wss.cool/understanding-writer-reader-interface-of-golang.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-06-21T18:48:11+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Understanding Golang's writer/reader interface</summary><content type="html">&lt;h2 id="是什么">是什么&lt;/h2>
&lt;p>首先writer/reader都是接口&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">type&lt;/span> &lt;span class="nx">Writer&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">Write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">p&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">type&lt;/span> &lt;span class="nx">Reader&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">Read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">p&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>他们各有一个动词的方法——读和写，那么就都需要一个宾语，也就是读谁写谁，从接口中是看不到宾语的，而接口在使用时肯定是要通过结构体实现的，所以这个宾语就在结构体中。&lt;/p>
&lt;p>比如写信，信就是宾语，信.Write(字)，就把字写到了信中。用代码实现如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">type&lt;/span> &lt;span class="nx">LetterWriter&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">Letter&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">l&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">LetterWriter&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">p&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">l&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Letter&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">l&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Letter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">p&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>类似的，读信：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">type&lt;/span> &lt;span class="nx">LetterReader&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">Letter&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">l&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">LetterReader&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">p&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">n&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">copy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">l&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Letter&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">l&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Letter&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">l&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Letter&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">:]&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>对于writer和reader，都在结构体中准备了一个字段&lt;/p>
&lt;p>使用：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">w&lt;/span> &lt;span class="nx">LetterWriter&lt;/span>
&lt;span class="nx">w&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Write&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="nb">byte&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hello&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Letter&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">r&lt;/span> &lt;span class="nx">LetterReader&lt;/span>
&lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Letter&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">new&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">type&lt;/span> &lt;span class="nx">Writer&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">buf&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Writer&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">p&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">w&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">buf&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">buf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">p&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-golang" data-lang="golang">&lt;span class="kd">func&lt;/span> &lt;span class="nf">d&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">reader&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">newXReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">source&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">target&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">length&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">reader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">target&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">target&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将source的值写入target中，Read方法调用一次，读取n（n&amp;lt;=length）个字节的数据到target切片中&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="nf">d&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">target&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">bytes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewBufferString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hello&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">w&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">newXWriter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">target&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">source&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="s">&amp;#34;world&amp;#34;&lt;/span>
&lt;span class="nx">w&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">source&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>target是一个容器，Writer的Write方法，会将参数写入source到容器中。&lt;/p>
&lt;p>这两个概念理解起来有点绕。把writer或reader理解为一个容器，往里面加东西就是write，从里面取东西就是read&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="nf">d&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewRequest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;POST&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;zentao.77hub.com/zentao/bug-edit-&amp;#34;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s">&amp;#34;66738&amp;#34;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s">&amp;#34;.html&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">strings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">req&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Header&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Content-Type&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;application/x-www-form-urlencoded&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">a&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">newChanWriter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Header&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="常用readerwriter">常用reader/writer&lt;/h2>
&lt;ol>
&lt;li>Buffer实现了Reader和Writer接口，可以直接使用&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="nx">s&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="s">&amp;#34;Hello&amp;#34;&lt;/span>
&lt;span class="nx">buf&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">bytes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewBufferString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fprint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">buf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;, World!&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">buf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">String&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>bufio包中的Reader&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="nx">readline&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;p>&lt;a href="https://www.flysnow.org/2017/05/08/go-in-action-go-reader-writer.html">https://www.flysnow.org/2017/05/08/go-in-action-go-reader-writer.html&lt;/a>
&lt;a href="https://www.jianshu.com/p/cb12e88c60d6">https://www.jianshu.com/p/cb12e88c60d6&lt;/a>
&lt;a href="https://segmentfault.com/a/1190000015591319">https://segmentfault.com/a/1190000015591319&lt;/a>
&lt;a href="https://juejin.cn/post/6976841033795502093">https://juejin.cn/post/6976841033795502093&lt;/a>
&lt;a href="https://www.bilibili.com/read/cv9179650">https://www.bilibili.com/read/cv9179650&lt;/a>&lt;/p>
&lt;h2 id="参考资料-1">参考资料&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://segmentfault.com/a/1190000015591319">ronniesong.Go中io包的使用方法.2018-07-10&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://medium.com/learning-the-go-programming-language/streaming-io-in-go-d93507931185">Vladimir Vivien.Streaming IO in Go.Sep 15, 2017&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/read/cv9179650">程序猿鲍勃.大白话 golang 教程-14-常用的标准库和设计.2021-01-08&lt;/a>&lt;/li>
&lt;/ul></content><category scheme="http://blog.wss.cool/categories/golang/" term="golang" label="golang"/><category scheme="http://blog.wss.cool/tags/%E5%85%A5%E9%97%A8/" term="入门" label="入门"/></entry><entry><title type="text">优化接口请求的数量</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E4%BC%98%E5%8C%96%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82%E7%9A%84%E6%95%B0%E9%87%8F.html"/><id>http://blog.wss.cool/%E4%BC%98%E5%8C%96%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82%E7%9A%84%E6%95%B0%E9%87%8F.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-06-17T11:04:09+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">如果请求的数量很多，可以将其收集合并，从而减少接口调用的数量</summary><content type="html">&lt;p>每次请求从原来调用接口改为调collector方法，该方法返回promise，将promise的resolve注册到事件中。在时间窗口内的所有请求的参数会被收集。&lt;/p>
&lt;p>在截流函数中发起真正的请求，请求结束后消费掉事件，也会触发promise的resolve。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">throttle&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;lodash&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="kr">class&lt;/span> &lt;span class="nx">PatchMatch&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">private&lt;/span> &lt;span class="kr">constructor&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bus&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">EventBus&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">public&lt;/span> &lt;span class="nx">collector&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">param&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">params&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">param&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">runner&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Promise&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">resolve&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">reject&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bus&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">resolve&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="kr">private&lt;/span> &lt;span class="nx">bus&lt;/span>: &lt;span class="kt">EventBus&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">private&lt;/span> &lt;span class="nx">params&lt;/span>: &lt;span class="kt">any&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;span class="kr">private&lt;/span> &lt;span class="nx">runner&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">throttle&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">doPatchMatch&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">params&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">private&lt;/span> &lt;span class="nx">doPatchMatch&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">urls&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bizFormExtra&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">patchMatch&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">params&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">result&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">budgetAccountItems&lt;/span>: &lt;span class="kt">Array&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">any&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">result&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">itemBudgetAccounts&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">budgetAccountItems&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">forEach&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">bItem&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bus&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">emit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">bItem&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">itemId&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">bItem&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">EventBus&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">public&lt;/span> &lt;span class="nx">on&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">eventName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">callback&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">eventMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">eventName&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">callback&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="kr">private&lt;/span> &lt;span class="nx">eventMap&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nb">Function&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{};&lt;/span>
&lt;span class="kr">public&lt;/span> &lt;span class="nx">emit&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">eventName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...&lt;/span>&lt;span class="nx">args&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">callback&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">eventMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">eventName&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">callback&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">callback&lt;/span>&lt;span class="p">(...&lt;/span>&lt;span class="nx">args&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">eventMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">eventName&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">undefined&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/%E4%BC%98%E5%8C%96/" term="优化" label="优化"/><category scheme="http://blog.wss.cool/tags/promise/" term="Promise" label="Promise"/><category scheme="http://blog.wss.cool/tags/%E6%88%AA%E6%B5%81/" term="截流" label="截流"/><category scheme="http://blog.wss.cool/tags/eventbus/" term="EventBus" label="EventBus"/></entry><entry><title type="text">CSS阴影</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/css%E9%98%B4%E5%BD%B1.html"/><id>http://blog.wss.cool/css%E9%98%B4%E5%BD%B1.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-06-17T10:22:31+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">纯CSS实现的有亮面暗面的逼真光照阴影效果</summary><content type="html">&lt;h2 id="水滴">水滴&lt;/h2>
&lt;p>&lt;a href="https://codepen.io/mewoma/pen/gOWXQyO">https://codepen.io/mewoma/pen/gOWXQyO&lt;/a>&lt;/p>
&lt;p>&lt;img src="http://hugo-1256216240.cos.ap-chengdu.myqcloud.com/pasteimageintomarkdown/2022-06-17/744101469976800.png" alt="">&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;drops&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;drop&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;drop&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;drop&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;drop&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="o">*&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">margin&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">padding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">box-sizing&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">border-box&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nt">body&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">flex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">min-height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">vh&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#ddd&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">align-items&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">justify-content&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">drops&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">relative&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">flex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">align-items&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">justify-content&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">drop&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">absolute&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">200&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">200&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">transparent&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border-radius&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">63&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">37&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">43&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">57&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">55&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">48&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">52&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">45&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">box-shadow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">inset&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="nb">rgba&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mf">0.05&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="mi">15&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">25&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="nb">rgba&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mf">0.1&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="mi">15&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="nb">rgba&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mf">0.05&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="kc">inset&lt;/span> &lt;span class="mi">-10&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">-10&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">15&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="nb">rgba&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mf">0.9&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">drop&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="nd">before&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">content&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">absolute&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">top&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">35&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">left&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">55&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#fff&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border-radius&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">63&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">37&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">58&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">42&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">60&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">57&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">43&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">40&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">drop&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="nd">after&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">content&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">absolute&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">top&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">35&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">left&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">85&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#fff&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border-radius&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">63&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">37&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">43&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">57&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">52&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">63&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">37&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">48&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">drop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">nth-child&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">2&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">transform&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">scale&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nb">translate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">-300&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">180&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">border-radius&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">58&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">42&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">36&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">64&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">58&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">63&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">37&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">42&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">drop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">nth-child&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">3&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">transform&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">scale&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nb">translate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">300&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">150&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">border-radius&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">58&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">42&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">51&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">49&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">44&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">53&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">47&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">56&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">drop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">nth-child&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">4&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">transform&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">scale&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.35&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nb">translate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">120&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">-450&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">border-radius&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">64&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">36&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">33&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">67&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">49&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">53&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">47&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">51&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="按钮">按钮&lt;/h2>
&lt;p>&lt;a href="https://codepen.io/thebabydino/pen/bGrLprB">https://codepen.io/thebabydino/pen/bGrLprB&lt;/a>&lt;/p>
&lt;p>&lt;img src="http://hugo-1256216240.cos.ap-chengdu.myqcloud.com/pasteimageintomarkdown/2022-06-17/745055875034800.png" alt="">&lt;/p>
&lt;pre>&lt;code class="language-pug" data-lang="pug">- let data = {
- heart: { ico: '❤️', hue: 344 },
- like: { ico: '👍', hue: 247 },
- star: { ico: '⭐', hue: 48 }
- }
- for(let p in data)
- let v = data[p]
button(aria-label=p data-ico=v.ico style=`--hue: ${v.hue}deg`)
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="nv">$d&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">$t&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mf">.3&lt;/span>&lt;span class="kt">s&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">$c&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#fcfcfc&lt;/span> &lt;span class="mh">#d2dae6&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">$o&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mf">.125&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nv">$d&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">body&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">display&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">grid&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">grid-auto-flow&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">column&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">grid-gap&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">8vw&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">place-content&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">margin&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">height&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">100vh&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">background&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nn">#ecf0f4&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nt">button&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">--i&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--light&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">--not-i&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">calc&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">1&lt;/span> &lt;span class="nt">-&lt;/span> &lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--i&lt;/span>&lt;span class="o">))&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">--j&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--press&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">--not-j&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">calc&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">1&lt;/span> &lt;span class="nt">-&lt;/span> &lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--j&lt;/span>&lt;span class="o">))&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">z-index&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--i&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">border&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">width&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="nt">d&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nt">height&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="nt">d&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">border-radius&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">15&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">transform&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">scale&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">calc&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">1&lt;/span> &lt;span class="nt">-&lt;/span> &lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--j&lt;/span>&lt;span class="o">)*&lt;/span>&lt;span class="nc">.02&lt;/span>&lt;span class="o">))&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">box-shadow&lt;/span>&lt;span class="nd">:&lt;/span>
&lt;span class="nt">calc&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--not-j&lt;/span>&lt;span class="o">)*&lt;/span>&lt;span class="nn">#&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nt">-&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="nt">o&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="nt">calc&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--not-j&lt;/span>&lt;span class="o">)*&lt;/span>&lt;span class="nn">#&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nt">-&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="nt">o&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="nn">#&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="nt">o&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="nn">#&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">nth&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="nt">c&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">1&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--not-j&lt;/span>&lt;span class="o">))&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="nt">calc&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--not-j&lt;/span>&lt;span class="o">)*&lt;/span>&lt;span class="nn">#&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="nt">o&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="nt">calc&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--not-j&lt;/span>&lt;span class="o">)*&lt;/span>&lt;span class="nn">#&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="nt">o&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="nn">#&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="nt">o&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="nn">#&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">nth&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="nt">c&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">2&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--not-j&lt;/span>&lt;span class="o">))&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="nt">inset&lt;/span> &lt;span class="nt">calc&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--j&lt;/span>&lt;span class="o">)*&lt;/span>&lt;span class="nn">#&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="nt">o&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="nt">calc&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--j&lt;/span>&lt;span class="o">)*&lt;/span>&lt;span class="nn">#&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="nt">o&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="nn">#&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="nt">o&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="nn">#&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">nth&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="nt">c&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">2&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--j&lt;/span>&lt;span class="o">))&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="nt">inset&lt;/span> &lt;span class="nt">calc&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--j&lt;/span>&lt;span class="o">)*&lt;/span>&lt;span class="nn">#&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nt">-&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="nt">o&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="nt">calc&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--j&lt;/span>&lt;span class="o">)*&lt;/span>&lt;span class="nn">#&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nt">-&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="nt">o&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="nn">#&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="nt">o&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="nn">#&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">nth&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="nt">c&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">1&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--j&lt;/span>&lt;span class="o">))&lt;/span>&lt;span class="p">};&lt;/span>
&lt;span class="nt">background&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nn">#e8e8e8&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">font-size&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">2&lt;/span>&lt;span class="nc">.5em&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">transition&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">box-shadow&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="nt">t&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">transform&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="nt">t&lt;/span> &lt;span class="nt">cubic-bezier&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nc">.2&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="nt">4&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="nt">1&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="nt">3&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">cursor&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">pointer&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">&amp;amp;&lt;/span>&lt;span class="nd">::after&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">filter&lt;/span>&lt;span class="nd">:&lt;/span>
&lt;span class="nt">Contrast&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">0&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nt">Sepia&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--i&lt;/span>&lt;span class="o">))&lt;/span>
&lt;span class="nt">Hue-Rotate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">calc&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--hue&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="nt">-&lt;/span> &lt;span class="nt">50deg&lt;/span>&lt;span class="o">))&lt;/span>
&lt;span class="nt">Saturate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">5&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nt">Opacity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">calc&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--i&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nc">.21&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--not-i&lt;/span>&lt;span class="o">)))&lt;/span>
&lt;span class="nt">Drop-Shadow&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">1px&lt;/span> &lt;span class="nt">1px&lt;/span> &lt;span class="nt">hsla&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">0&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">100&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">var&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">--not-i&lt;/span>&lt;span class="o">)))&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">transition&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">filter&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="nt">t&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">content&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">attr&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">data-ico&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">&amp;amp;&lt;/span>&lt;span class="nd">:focus&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nt">outline&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">none&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="k">&amp;amp;&lt;/span>&lt;span class="nd">:hover&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="k">&amp;amp;&lt;/span>&lt;span class="nd">:focus&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nt">--light&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">1&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="k">&amp;amp;&lt;/span>&lt;span class="nd">:active&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nt">--press&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">1&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="钟">钟&lt;/h2>
&lt;p>&lt;a href="https://codepen.io/BurmesePotato/details/LYyOVoe">https://codepen.io/BurmesePotato/details/LYyOVoe&lt;/a>&lt;/p>
&lt;p>&lt;img src="http://hugo-1256216240.cos.ap-chengdu.myqcloud.com/pasteimageintomarkdown/2022-06-17/745302399860100.png" alt="">&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;clock&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;outer-clock-face&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;marking marking-one&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;marking marking-two&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;marking marking-three&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;marking marking-four&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;inner-clock-face&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;hand hour-hand&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;hand min-hand&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;hand second-hand&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;span class="lnt">147
&lt;/span>&lt;span class="lnt">148
&lt;/span>&lt;span class="lnt">149
&lt;/span>&lt;span class="lnt">150
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="nv">$color-bg&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#9C2D41&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">$color-bg-dark&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#9C2D41&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">$color-hand-second&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#FAF7F4&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">$color-hand-minute&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#F6CBB7&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">$color-hours-main&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#CB857C&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">$color-hours&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">#CB857C&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">html&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">background&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="nt">color-bg&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">text-align&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">font-size&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">10px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nt">body&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">margin&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">font-size&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">2rem&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">display&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">flex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">flex&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">min-height&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">100vh&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">align-items&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nc">.clock&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">width&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">30rem&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">height&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">30rem&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">position&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">relative&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">padding&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">2rem&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">border&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">18px&lt;/span> &lt;span class="nt">solid&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="nt">color-bg-dark&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">box-shadow&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">5px&lt;/span> &lt;span class="nt">-5px&lt;/span> &lt;span class="nt">5px&lt;/span> &lt;span class="nt">0px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">lighten&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="nt">color-bg&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">10&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nc">.5&lt;/span>&lt;span class="o">),&lt;/span>
&lt;span class="nt">-5px&lt;/span> &lt;span class="nt">8px&lt;/span> &lt;span class="nt">8px&lt;/span> &lt;span class="nt">0px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">darken&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="nt">color-bg&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">15&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nc">.5&lt;/span>&lt;span class="o">),&lt;/span>
&lt;span class="nt">inset&lt;/span> &lt;span class="nt">-3&lt;/span>&lt;span class="nc">.5px&lt;/span> &lt;span class="nt">5&lt;/span>&lt;span class="nc">.5px&lt;/span> &lt;span class="nt">6px&lt;/span> &lt;span class="nt">0px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">darken&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="nt">color-bg&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">15&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nc">.5&lt;/span>&lt;span class="o">),&lt;/span>
&lt;span class="nt">inset&lt;/span> &lt;span class="nt">3px&lt;/span> &lt;span class="nt">-3px&lt;/span> &lt;span class="nt">1px&lt;/span> &lt;span class="nt">0px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">darken&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="nt">color-bg&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">10&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="nc">.15&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">border-radius&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">50&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">margin&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">50px&lt;/span> &lt;span class="nt">auto&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nc">.outer-clock-face&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">position&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">relative&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">background&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="nt">color-bg&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">overflow&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">hidden&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">width&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">100&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">height&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">100&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">border-radius&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">100&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nc">.outer-clock-face&lt;/span>&lt;span class="nd">::after&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">-webkit-transform&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">rotate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">90deg&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">-moz-transform&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">rotate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">90deg&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">transform&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">rotate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">90deg&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nc">.outer-clock-face&lt;/span>&lt;span class="nd">::after&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="nc">.outer-clock-face&lt;/span>&lt;span class="nd">::before&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="nc">.outer-clock-face&lt;/span> &lt;span class="nc">.marking&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nt">content&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">position&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">absolute&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">width&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">5px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">height&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">100&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">background&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="nt">color-hours-main&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">z-index&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">left&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">49&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nc">.outer-clock-face&lt;/span> &lt;span class="nc">.marking&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">background&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="nt">color-hours&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">width&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">3px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nc">.outer-clock-face&lt;/span> &lt;span class="nc">.marking.marking-one&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">-webkit-transform&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">rotate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">30deg&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">-moz-transform&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">rotate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">30deg&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">transform&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">rotate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">30deg&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nc">.outer-clock-face&lt;/span> &lt;span class="nc">.marking.marking-two&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">-webkit-transform&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">rotate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">60deg&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">-moz-transform&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">rotate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">60deg&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">transform&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">rotate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">60deg&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nc">.outer-clock-face&lt;/span> &lt;span class="nc">.marking.marking-three&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">-webkit-transform&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">rotate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">120deg&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">-moz-transform&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">rotate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">120deg&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">transform&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">rotate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">120deg&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nc">.outer-clock-face&lt;/span> &lt;span class="nc">.marking.marking-four&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">-webkit-transform&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">rotate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">150deg&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">-moz-transform&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">rotate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">150deg&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">transform&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">rotate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">150deg&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nc">.inner-clock-face&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">position&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">absolute&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">top&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">10&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">left&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">10&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">width&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">80&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">height&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">80&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">background&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="nt">color-bg&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">-webkit-border-radius&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">100&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">-moz-border-radius&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">100&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">border-radius&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">100&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">z-index&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nc">.inner-clock-face&lt;/span>&lt;span class="nd">::before&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">content&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">position&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">absolute&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">top&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">50&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">left&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">50&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">width&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">16px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">height&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">16px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">border-radius&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">18px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">margin-left&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">-9px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">margin-top&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">-6px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">background&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="nt">color-hand-minute&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">z-index&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">11&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nc">.hand&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">width&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">50&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">right&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">50&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">height&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">6px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">background&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="nt">color-hand-minute&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">position&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">absolute&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">top&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">50&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">border-radius&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">6px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">transform-origin&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">100&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">transform&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">rotate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">90deg&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">transition-timing-function&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">cubic-bezier&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">0&lt;/span>&lt;span class="nc">.1&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">2&lt;/span>&lt;span class="nc">.7&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="nc">.58&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">1&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nc">.hand.hour-hand&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">width&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">30&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">z-index&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">3&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nc">.hand.min-hand&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">height&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">3px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">z-index&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">width&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">45&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nc">.hand.second-hand&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">background&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="nt">color-hand-second&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">width&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">45&lt;/span>&lt;span class="err">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">height&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">2px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">z-index&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">secondHand&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">querySelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;.second-hand&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">minsHand&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">querySelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;.min-hand&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">hourHand&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">querySelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;.hour-hand&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">setDate&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">now&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nb">Date&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">seconds&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">now&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getSeconds&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">secondsDegrees&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">seconds&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">60&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">360&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">90&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">secondHand&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">style&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">transform&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sb">`rotate(&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">secondsDegrees&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">deg)`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">mins&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">now&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getMinutes&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">minsDegrees&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">mins&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">60&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">360&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">seconds&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">60&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">90&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">minsHand&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">style&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">transform&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sb">`rotate(&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">minsDegrees&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">deg)`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">hour&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">now&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getHours&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">hourDegrees&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">hour&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">360&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">mins&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">60&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">90&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">hourHand&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">style&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">transform&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sb">`rotate(&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">hourDegrees&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">deg)`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">setInterval&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">setDate&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">setDate&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="http://blog.wss.cool/categories/css/" term="CSS" label="CSS"/><category scheme="http://blog.wss.cool/tags/%E9%98%B4%E5%BD%B1/" term="阴影" label="阴影"/><category scheme="http://blog.wss.cool/tags/%E6%B0%B4%E6%BB%B4/" term="水滴" label="水滴"/><category scheme="http://blog.wss.cool/tags/%E5%8D%A1%E7%89%87/" term="卡片" label="卡片"/><category scheme="http://blog.wss.cool/tags/%E6%8C%89%E9%92%AE/" term="按钮" label="按钮"/><category scheme="http://blog.wss.cool/tags/%E7%AA%81%E5%87%BA/" term="突出" label="突出"/></entry><entry><title type="text">记录</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E8%AE%B0%E5%BD%95.html"/><id>http://blog.wss.cool/%E8%AE%B0%E5%BD%95.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-05-11T16:27:59+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">记录一下为什么工作中的问题。</summary><content type="html">&lt;h2 id="资源占用报表迭代">资源占用报表迭代&lt;/h2>
&lt;p>详设对现在剩下的任务对工作的指导性不大了，也就是详设后确定的任务与真实开发中的所作的事有些出入。详设该怎么做才能更符合开发实际呢？&lt;/p>
&lt;p>先做一些初期的开发工作，每一块都开一个头，相当于技术预研。对&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%88%86%E7%B1%BB/" term="分类" label="分类"/><category scheme="http://blog.wss.cool/tags/%E6%98%BE%E7%A4%BA%E5%9C%A8%E5%BA%95%E9%83%A8/" term="显示在底部" label="显示在底部"/></entry><entry><title type="text">用html字符串生成dom元素</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E7%94%A8html%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%94%9F%E6%88%90dom%E5%85%83%E7%B4%A0.html"/><id>http://blog.wss.cool/%E7%94%A8html%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%94%9F%E6%88%90dom%E5%85%83%E7%B4%A0.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-04-25T16:48:51+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">摘要，显示在meta的description中</summary><content type="html">&lt;p>&lt;a href="https://stackoverflow.com/a/35385518/6021280">https://stackoverflow.com/a/35385518/6021280&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="cm">/**
&lt;/span>&lt;span class="cm"> * @param {String} HTML representing a single element
&lt;/span>&lt;span class="cm"> * @return {Element}
&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">htmlToElement&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">html&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">template&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createElement&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;template&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">html&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">html&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">trim&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="c1">// Never return a text node of whitespace as the result
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">template&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">innerHTML&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">html&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">template&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">content&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">firstChild&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">td&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">htmlToElement&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;td&amp;gt;foo&amp;lt;/td&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nx">div&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">htmlToElement&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;div&amp;gt;&amp;lt;span&amp;gt;nested&amp;lt;/span&amp;gt; &amp;lt;span&amp;gt;stuff&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="cm">/**
&lt;/span>&lt;span class="cm"> * @param {String} HTML representing any number of sibling elements
&lt;/span>&lt;span class="cm"> * @return {NodeList}
&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">htmlToElements&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">html&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">template&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createElement&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;template&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">template&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">innerHTML&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">html&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">template&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">content&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">childNodes&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">rows&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">htmlToElements&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;foo&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;bar&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/%E5%88%86%E7%B1%BB/" term="分类" label="分类"/><category scheme="http://blog.wss.cool/tags/%E6%98%BE%E7%A4%BA%E5%9C%A8%E5%BA%95%E9%83%A8/" term="显示在底部" label="显示在底部"/></entry><entry><title type="text">监听dom元素的class值变化</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E7%9B%91%E5%90%ACdom%E5%85%83%E7%B4%A0%E7%9A%84class%E5%80%BC%E5%8F%98%E5%8C%96.html"/><id>http://blog.wss.cool/%E7%9B%91%E5%90%ACdom%E5%85%83%E7%B4%A0%E7%9A%84class%E5%80%BC%E5%8F%98%E5%8C%96.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-04-25T15:32:41+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Event trigger on a class change</summary><content type="html">&lt;p>&lt;a href="https://stackoverflow.com/a/53914092/6021280">https://stackoverflow.com/a/53914092/6021280&lt;/a>
&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver">https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver&lt;/a>&lt;/p>
&lt;h2 id="mutationobserver">MutationObserver&lt;/h2>
&lt;p>这个类可以监听指定 &lt;code>DOM&lt;/code> 的变化。&lt;/p>
&lt;p>下面的代码创建监听了一个元素，并在class变化时出发回调函数。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">let&lt;/span> &lt;span class="nx">targetNode&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;test&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">workOnClassAdd&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">alert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;I&amp;#39;m triggered when the class is added&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">workOnClassRemoval&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">alert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;I&amp;#39;m triggered when the class is removed&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// watch for a specific class change
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">classWatcher&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">ClassWatcher&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">targetNode&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;trigger&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">workOnClassAdd&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">workOnClassRemoval&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// tests:
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">targetNode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;trigger&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// triggers workOnClassAdd callback
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">targetNode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;trigger&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// won&amp;#39;t trigger (class is already exist)
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">targetNode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;another-class&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// won&amp;#39;t trigger (class is not watched)
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">targetNode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">remove&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;trigger&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// triggers workOnClassRemoval callback
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">targetNode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">remove&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;trigger&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// won&amp;#39;t trigger (class was already removed)
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">targetNode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setAttribute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;disabled&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// won&amp;#39;t trigger (the class is unchanged)
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">class&lt;/span> &lt;span class="nx">ClassWatcher&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">targetNode&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">classToWatch&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">classAddedCallback&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">classRemovedCallback&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">targetNode&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">targetNode&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classToWatch&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">classToWatch&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classAddedCallback&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">classAddedCallback&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classRemovedCallback&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">classRemovedCallback&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">observer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">lastClassState&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">targetNode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classToWatch&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">init&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">init&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">observer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">MutationObserver&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">mutationCallback&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">observe&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">observe&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">observer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">observe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">targetNode&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">attributes&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span> &lt;span class="p">})&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">disconnect&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">observer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">disconnect&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">mutationCallback&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mutationsList&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">mutation&lt;/span> &lt;span class="k">of&lt;/span> &lt;span class="nx">mutationsList&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">mutation&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">type&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;attributes&amp;#39;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">mutation&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">attributeName&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;class&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">currentClassState&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mutation&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">target&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classToWatch&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">lastClassState&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="nx">currentClassState&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">lastClassState&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">currentClassState&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">currentClassState&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classAddedCallback&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classRemovedCallback&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="http://blog.wss.cool/categories/javascript/" term="JavaScript" label="JavaScript"/><category scheme="http://blog.wss.cool/tags/javascript/" term="javascript" label="javascript"/><category scheme="http://blog.wss.cool/tags/html/" term="html" label="html"/><category scheme="http://blog.wss.cool/tags/mutationobserver/" term="MutationObserver" label="MutationObserver"/></entry><entry><title type="text">调试proxy对象</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/%E8%B0%83%E8%AF%95proxy%E5%AF%B9%E8%B1%A1/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/%E8%B0%83%E8%AF%95proxy%E5%AF%B9%E8%B1%A1/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2022-03-30T05:16:17+00:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">当我们打了断点时，proxy对象的属性看到的都是...，很不方便。 这些对象都可以在c……</summary><content type="html">&lt;p>当我们打了断点时，proxy对象的属性看到的都是&lt;code>...&lt;/code>，很不方便。&lt;/p>
&lt;p>这些对象都可以在console中打印出来。利用这一点，我们可以先将lodash引入到console中，利用_.cloneDeep方法，将proxy对象的属性克隆一份，然后再打印出来。&lt;/p>
&lt;pre>&lt;code>fetch('https://cdn.jsdelivr.net/npm/lodash@4.17.4/lodash.min.js')
.then(response =&amp;gt; response.text())
.then(text =&amp;gt; eval(text))
&lt;/code>&lt;/pre>&lt;pre>&lt;code>_.cloneDeep(this.queryOptions)
&lt;/code>&lt;/pre></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/></entry><entry><title type="text">正则</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E6%AD%A3%E5%88%99.html"/><id>http://blog.wss.cool/%E6%AD%A3%E5%88%99.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2021-11-20T18:22:43+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">摘要，显示在meta的description中</summary><content type="html">&lt;pre>&lt;code>reg, _ := regexp.Compile(`\s+`)
r := reg.ReplaceAll(resBody, []byte(&amp;quot;&amp;quot;))
&lt;/code>&lt;/pre>&lt;p>compile string to regexp, then replace all&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%88%86%E7%B1%BB/" term="分类" label="分类"/><category scheme="http://blog.wss.cool/tags/%E6%98%BE%E7%A4%BA%E5%9C%A8%E5%BA%95%E9%83%A8/" term="显示在底部" label="显示在底部"/></entry><entry><title type="text">开发一个ops的新客户端</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAops%E7%9A%84%E6%96%B0%E5%AE%A2%E6%88%B7%E7%AB%AF.html"/><id>http://blog.wss.cool/%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAops%E7%9A%84%E6%96%B0%E5%AE%A2%E6%88%B7%E7%AB%AF.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2021-11-20T17:51:17+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">摘要，显示在meta的description中</summary><content type="html">&lt;p>ops系统现在的网站是运维做的，不大好用。我打算重新做一个好用些的。以环境为视角展开各种功能和信息。&lt;/p>
&lt;p>除了改善易用性，还想练习一下Go的相关技术，比如grpc。&lt;/p>
&lt;p>首先看一下数据结构&lt;/p>
&lt;pre>&lt;code>{
&amp;quot;code&amp;quot;: 0,
&amp;quot;count&amp;quot;: 26502,
&amp;quot;data&amp;quot;: {
&amp;quot;envList&amp;quot;: [
&amp;quot;nx-temp16&amp;quot;,
],
&amp;quot;record&amp;quot;: [
{
&amp;quot;allowRollback&amp;quot;: &amp;quot;false&amp;quot;,
&amp;quot;appsbranch&amp;quot;: null,
&amp;quot;backupDbTime&amp;quot;: &amp;quot;&amp;quot;,
&amp;quot;backupid&amp;quot;: 24332,
&amp;quot;complate_at&amp;quot;: null,
&amp;quot;created_at&amp;quot;: &amp;quot;2021-11-20T16:26:25.475&amp;quot;,
&amp;quot;created_by&amp;quot;: &amp;quot;\u9648\u96ef\u9759&amp;quot;,
&amp;quot;deployType&amp;quot;: &amp;quot;oneclockDeploy&amp;quot;,
&amp;quot;id&amp;quot;: 26571,
&amp;quot;keyenv&amp;quot;: &amp;quot;nx-hotfix&amp;quot;,
&amp;quot;logfile&amp;quot;: &amp;quot;ocdeploy_nx-hotfix_20211120162625&amp;quot;,
&amp;quot;pipeline&amp;quot;: &amp;quot;&amp;quot;,
&amp;quot;status&amp;quot;: &amp;quot;running&amp;quot;,
&amp;quot;targetjob&amp;quot;: &amp;quot;[\&amp;quot;trek\&amp;quot;, \&amp;quot;h5\&amp;quot;, \&amp;quot;web\&amp;quot;, \&amp;quot;authapp\&amp;quot;]&amp;quot;,
}
],
&amp;quot;serverList&amp;quot;: []
},
&amp;quot;msg&amp;quot;: &amp;quot;\u83b7\u53d6\u6570\u636e\u6210\u529f&amp;quot;
}
&lt;/code>&lt;/pre></content><category scheme="http://blog.wss.cool/categories/%E5%88%86%E7%B1%BB/" term="分类" label="分类"/><category scheme="http://blog.wss.cool/tags/%E6%98%BE%E7%A4%BA%E5%9C%A8%E5%BA%95%E9%83%A8/" term="显示在底部" label="显示在底部"/></entry><entry><title type="text">趣闻轶事</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E8%B6%A3%E9%97%BB%E8%BD%B6%E4%BA%8B.html"/><id>http://blog.wss.cool/%E8%B6%A3%E9%97%BB%E8%BD%B6%E4%BA%8B.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2021-11-13T10:51:32+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">摘要，显示在meta的description中</summary><content type="html">&lt;h2 id="科技爱好者周刊第-170-期httpswwwruanyifengcomblog202108weekly-issue-170html">&lt;a href="https://www.ruanyifeng.com/blog/2021/08/weekly-issue-170.html">科技爱好者周刊（第 170 期）&lt;/a>&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://juejin.cn/post/6991689670027542564">如何优化 node 项目的 docker 镜像（像老板压榨员工一样压榨镜像）&lt;/a>&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>已阅。总结：1. 用alpine（linux）不直接用node。2. 利用docker的缓存机制避免掉不必要的编译时间。&lt;/p>
&lt;/blockquote>
&lt;h2 id="科技爱好者周刊第-86-期httpswwwruanyifengcomblog201912weekly-issue-86html">&lt;a href="https://www.ruanyifeng.com/blog/2019/12/weekly-issue-86.html">科技爱好者周刊（第 86 期）&lt;/a>&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://sketchviz.com/new">Sketchviz手绘风格的流程图&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="科技爱好者周刊第-67-期httpswwwruanyifengcomblog201912weekly-issue-67html">&lt;a href="https://www.ruanyifeng.com/blog/2019/12/weekly-issue-67.html">科技爱好者周刊（第 67 期）&lt;/a>&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://codepen.io/yuanchuan/pen/YoqWeR">黑客帝国数字雨的实现&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="how-to-improve-software-design-ability">How to improve software design ability?&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://levelup.gitconnected.com/how-to-improve-your-software-design-skills-at-work-d55544098d3d">https://levelup.gitconnected.com/how-to-improve-your-software-design-skills-at-work-d55544098d3d&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.shedloadofcode.com/blog/five-ways-to-improve-your-system-design-and-software-architecture-skills">https://www.shedloadofcode.com/blog/five-ways-to-improve-your-system-design-and-software-architecture-skills&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.interviewkickstart.com/blog/how-to-improve-software-engineering-skills">https://www.interviewkickstart.com/blog/how-to-improve-software-engineering-skills&lt;/a>&lt;/li>
&lt;/ol></content><category scheme="http://blog.wss.cool/categories/%E5%88%86%E7%B1%BB/" term="分类" label="分类"/><category scheme="http://blog.wss.cool/tags/%E6%98%BE%E7%A4%BA%E5%9C%A8%E5%BA%95%E9%83%A8/" term="显示在底部" label="显示在底部"/></entry><entry><title type="text">Protocol-Buffer</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/protocol-buffer.html"/><id>http://blog.wss.cool/protocol-buffer.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2021-11-11T13:00:13+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">摘要，显示在meta的description中</summary><content type="html">&lt;p>参考资料：&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://developers.google.com/protocol-buffers/docs/gotutorial">https://developers.google.com/protocol-buffers/docs/gotutorial&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developers.google.com/protocol-buffers/docs/reference/go-generated#package">https://developers.google.com/protocol-buffers/docs/reference/go-generated#package&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="内容">内容&lt;/h2>
&lt;ol>
&lt;li>根据自己的需要，定义protocol buffer，定义请求、相应、service。&lt;/li>
&lt;li>protoc生成grpc.go和pb.go文件&lt;/li>
&lt;li>实现grpc的service接口&lt;/li>
&lt;li>调用service实现&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-protocolbuffer" data-lang="protocolbuffer">syntax = &amp;quot;proto3&amp;quot;;
package tutorial; // 定义报名，避免命名冲突
option go_package=&amp;quot;/services&amp;quot;;
import &amp;quot;google/protobuf/timestamp.proto&amp;quot;;
message Person {
string name = 1; //
int32 id = 2; // Unique ID number for this person.
string email = 3;
enum PhoneType {
MOBILE = 0;
HOME = 1;
WORK = 2;
}
message PhoneNumber {
string number = 1;
PhoneType type = 2;
}
repeated PhoneNumber phones = 4;
google.protobuf.Timestamp last_updated = 5;
}
// Our address book file is just one of these.
message AddressBook {
repeated Person people = 1;
}
&lt;/code>&lt;/pre>&lt;p>每个元素上的“= 1”、“= 2”标记标识字段在二进制编码中使用的唯一“标签”。标记数字 1-15 需要比更高数字少一个字节来编码，因此作为一种优化，您可以决定将这些标记用于常用或重复的元素，而将标记 16 和更高的标记用于不太常用的可选元素。重复字段中的每个元素都需要重新编码标签编号，因此重复字段特别适合这种优化。&lt;/p>
&lt;p>下载protoc ：https://github.com/protocolbuffers/protobuf/releases/tag/v3.19.1&lt;/p>
&lt;h2 id="protoc生成grpcpbgo和pbgo文件">protoc生成grpc.pb.go和pb.go文件&lt;/h2>
&lt;p>安装插件：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.26
go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>生成grpc和pb.go两个文件：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">protoc --go_out&lt;span class="o">=&lt;/span>. --go_opt&lt;span class="o">=&lt;/span>&lt;span class="nv">paths&lt;/span>&lt;span class="o">=&lt;/span>source_relative &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --go-grpc_out&lt;span class="o">=&lt;/span>. --go-grpc_opt&lt;span class="o">=&lt;/span>&lt;span class="nv">paths&lt;/span>&lt;span class="o">=&lt;/span>source_relative &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> helloworld/helloworld.proto
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;code>option go_package=&amp;quot;/services&amp;quot;&lt;/code> 会将生成的文件当作go的一个package，名字为services&lt;/li>
&lt;li>&lt;code>--go_out=.&lt;/code> 在当前目录下生成pb.go文件&lt;/li>
&lt;/ul>
&lt;h2 id="实现grpc的service接口">实现grpc的service接口&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="c1">// server is used to implement helloworld.GreeterServer.
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">server&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">pb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UnimplementedGreeterServer&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// SayHello implements helloworld.GreeterServer
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">server&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">SayHello&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">in&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">pb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HelloRequest&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">pb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HelloReply&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Received: %v&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">in&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetName&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">pb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HelloReply&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">Message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;Hello &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">in&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetName&lt;/span>&lt;span class="p">()},&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>pb为生成的pb.go包名，UnimplementedGreeterServer为pb.go中实现了server的结构体，将它委托到我们的server结构体中，相当于我们的server结成了它。然后实现我们自己的SayHello方法即可完成server的开发。、&lt;/p>
&lt;hr>
&lt;p>Go语言高级编程&lt;/p>
&lt;h2 id="安全认证">安全认证&lt;/h2>
&lt;p>4.5.1，4.5.2&lt;/p>
&lt;h2 id="截取器">截取器&lt;/h2>
&lt;p>4.5.3&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%88%86%E7%B1%BB/" term="分类" label="分类"/><category scheme="http://blog.wss.cool/tags/%E6%98%BE%E7%A4%BA%E5%9C%A8%E5%BA%95%E9%83%A8/" term="显示在底部" label="显示在底部"/></entry><entry><title type="text">Uml</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/uml.html"/><id>http://blog.wss.cool/uml.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2021-11-01T12:55:14+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">摘要，显示在meta的description中</summary><content type="html">&lt;p>大象--thinking in uml&lt;/p>
&lt;p>统一过程&lt;/p>
&lt;p>建模基础&lt;/p>
&lt;p>当你视图为现实世界建模时，首先要决定的是抽象角度，即建立这个模型的目的是什么。&lt;/p>
&lt;p>面向对象希望你通过抽象角度把事物分解成小块，问题就变得简单化。&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%88%86%E7%B1%BB/" term="分类" label="分类"/><category scheme="http://blog.wss.cool/tags/%E6%98%BE%E7%A4%BA%E5%9C%A8%E5%BA%95%E9%83%A8/" term="显示在底部" label="显示在底部"/></entry><entry><title type="text">设置自动引入为单引号</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E8%AE%BE%E7%BD%AE%E8%87%AA%E5%8A%A8%E5%BC%95%E5%85%A5%E4%B8%BA%E5%8D%95%E5%BC%95%E5%8F%B7.html"/><id>http://blog.wss.cool/%E8%AE%BE%E7%BD%AE%E8%87%AA%E5%8A%A8%E5%BC%95%E5%85%A5%E4%B8%BA%E5%8D%95%E5%BC%95%E5%8F%B7.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2021-09-16T10:51:47+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">WebStorm设置</summary><content type="html">&lt;p>&lt;img src="https://hugo-1256216240.cos.ap-chengdu.myqcloud.com/20210916105243_6dc2e2c0d6c828979922d23f33a08a1f.png" alt="20210916105243_6dc2e2c0d6c828979922d23f33a08a1f.png">&lt;/p></content><category scheme="http://blog.wss.cool/categories/ide/" term="ide" label="ide"/><category scheme="http://blog.wss.cool/categories/webstorm/" term="WebStorm" label="WebStorm"/><category scheme="http://blog.wss.cool/tags/webstorm/" term="webstorm" label="webstorm"/></entry><entry><title type="text">Chrome插件开发</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/chrome%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91.html"/><id>http://blog.wss.cool/chrome%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2021-08-05T22:30:36+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">摘要，显示在meta的description中</summary><content type="html">&lt;h2 id="background-warpjs">background-warp.js&lt;/h2>
&lt;h2 id="backgroundjs">background.js&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="c1">// 监听页面的加载完成事件
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">chrome&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">webNavigation&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onCompleted&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addListener&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 调用sotrage存放或设置一些数据
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">chrome&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">storage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">local&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">set&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">resolvedBuildValue&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Value is set to &amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">resolvedBuildValue&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="c1">// 调用scripting执行插入脚本的操作
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">chrome&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">scripting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">executeScript&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">target&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">tabId&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">tabId&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="kd">function&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;span class="c1">// 可以正常的调用document的相关api控制页面内的元素
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="c1">// files: [&amp;#39;content-script.js&amp;#39;],
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">});&lt;/span>
&lt;span class="c1">// 调用scripting执行插入css样式的操作
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">chrome&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">scripting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">insertCSS&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nx">target&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">tabId&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">tabId&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="nx">css&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;body{background: red;}&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 一个css样式的字符串
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="kr">interface&lt;/span> &lt;span class="nx">data&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">frameId&lt;/span>: &lt;span class="kt">number&lt;/span>
&lt;span class="nx">parentFrameId&lt;/span>: &lt;span class="kt">number&lt;/span>
&lt;span class="nx">processId&lt;/span>: &lt;span class="kt">number&lt;/span>
&lt;span class="nx">tabId&lt;/span>: &lt;span class="kt">number&lt;/span>
&lt;span class="nx">timeStamp&lt;/span>: &lt;span class="kt">number&lt;/span>
&lt;span class="nx">url&lt;/span>: &lt;span class="kt">string&lt;/span>
&lt;span class="nx">url&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;https://weibo.com/wangshushuo/home?topnav=1&amp;amp;wvr=6&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">interface&lt;/span> &lt;span class="nx">target&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">tabId&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">allFrame?&lt;/span>: &lt;span class="kt">boolean&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="excescript">exceScript&lt;/h2></content><category scheme="http://blog.wss.cool/categories/%E5%88%86%E7%B1%BB/" term="分类" label="分类"/><category scheme="http://blog.wss.cool/tags/%E6%98%BE%E7%A4%BA%E5%9C%A8%E5%BA%95%E9%83%A8/" term="显示在底部" label="显示在底部"/></entry><entry><title type="text">企业微信机器人</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA.html"/><id>http://blog.wss.cool/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2021-08-04T18:25:15+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">摘要，显示在meta的description中</summary><content type="html">&lt;h2 id="机器人">机器人&lt;/h2>
&lt;blockquote>
&lt;p>hover机器人，卡片右上角的编辑按钮可以看到机器人配置说明。
gitlab的webhook可以在mr时发一个请求。企业微信的机器人可以接受消息，但是两边的消息格式不同，需要有一个中间人进行翻译。&lt;/p>
&lt;/blockquote>
&lt;p>总体流程是：发生了mr，发请求到中间人，中间人根据mr消息中的user找到user所属的群，向该群的机器人发送一条消息，同时消息内容要根据mr的action应该不同，有些mr消息（更新，关闭等）不需要处理。&lt;/p>
&lt;h2 id="解析mr">解析mr&lt;/h2>
&lt;p>mr的数据我们只需要其中几条信息。&lt;/p>
&lt;pre>&lt;code>{
&amp;quot;user&amp;quot;: {
&amp;quot;name&amp;quot;: &amp;quot;&amp;quot;,
},
&amp;quot;object_attributes&amp;quot;: {
&amp;quot;url&amp;quot;:&amp;quot;&amp;quot;,
&amp;quot;action&amp;quot;:&amp;quot;&amp;quot;,
}
}
&lt;/code>&lt;/pre>&lt;h2 id="人与机器人的映射">人与机器人的映射&lt;/h2>
&lt;p>需要两个表来实现这个映射。&lt;/p>
&lt;ol>
&lt;li>user &amp;lt;-&amp;gt; group&lt;/li>
&lt;li>group &amp;lt;-&amp;gt; robot&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>因为关系比较简单，可以暂时不用数据库，就手动创建好变量，在代码中维护就行。但是如果数据多来还是需要用数据库。&lt;/p>
&lt;/blockquote>
&lt;h2 id="给机器人的消息">给机器人的消息&lt;/h2>
&lt;p>发给机器人的消息格式（https://work.weixin.qq.com/api/doc/90000/90136/91770）&lt;/p>
&lt;p>我们使用markdown格式，可以把长长的链接写成一个超链接的形式：&lt;/p>
&lt;pre>&lt;code>{
&amp;quot;msgtype&amp;quot;: &amp;quot;markdown&amp;quot;,
&amp;quot;text&amp;quot;: {
&amp;quot;content&amp;quot;: &amp;quot;【张三】【发起或合并】了mr【[编号](http://123456)】&amp;quot;,
&amp;quot;mentioned_list&amp;quot;:[&amp;quot;wangqing&amp;quot;,&amp;quot;@all&amp;quot;]
}
}
&lt;/code>&lt;/pre></content><category scheme="http://blog.wss.cool/categories/%E5%88%86%E7%B1%BB/" term="分类" label="分类"/><category scheme="http://blog.wss.cool/tags/%E6%98%BE%E7%A4%BA%E5%9C%A8%E5%BA%95%E9%83%A8/" term="显示在底部" label="显示在底部"/></entry><entry><title type="text">解析pptx文件</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E8%A7%A3%E6%9E%90pptx%E6%96%87%E4%BB%B6.html"/><id>http://blog.wss.cool/%E8%A7%A3%E6%9E%90pptx%E6%96%87%E4%BB%B6.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2021-06-06T01:34:08+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">摘要，显示在meta的description中</summary><content type="html">&lt;p>把pptx文件可以直接修改扩展名问zip等压缩文件。可以用zip解压工具将其解压。&lt;/p>
&lt;p>解压后得到xml文件和资源文件。&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%88%86%E7%B1%BB/" term="分类" label="分类"/><category scheme="http://blog.wss.cool/tags/%E6%98%BE%E7%A4%BA%E5%9C%A8%E5%BA%95%E9%83%A8/" term="显示在底部" label="显示在底部"/></entry><entry><title type="text">Styled-Component</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/styled-component.html"/><id>http://blog.wss.cool/styled-component.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2021-05-16T11:30:23+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">安装 npm install --save styled-components 创建样式组件 创建组件 1 2 import styled from &amp;#39;styled-components&amp;#39; const Button = styled.button`` 一般的样式 1 2 3 4 5 6 7 8 const Button =……</summary><content type="html">&lt;h2 id="安装">安装&lt;/h2>
&lt;pre>&lt;code>npm install --save styled-components
&lt;/code>&lt;/pre>&lt;h2 id="创建样式组件">创建样式组件&lt;/h2>
&lt;p>创建组件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">import&lt;/span> &lt;span class="nx">styled&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;styled-components&amp;#39;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">Button&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">styled&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">button&lt;/span>&lt;span class="sb">``&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>一般的样式&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">Button&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">styled&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">button&lt;/span>&lt;span class="sb">`
&lt;/span>&lt;span class="sb"> background: transparent;
&lt;/span>&lt;span class="sb"> border-radius: 3px;
&lt;/span>&lt;span class="sb"> border: 2px solid palevioletred;
&lt;/span>&lt;span class="sb"> color: palevioletred;
&lt;/span>&lt;span class="sb"> margin: 0 1em;
&lt;/span>&lt;span class="sb"> padding: 0.25em 1em;
&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>读取组件参数&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">Button&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">styled&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">button&lt;/span>&lt;span class="sb">`
&lt;/span>&lt;span class="sb"> background: transparent;
&lt;/span>&lt;span class="sb"> border-radius: 3px;
&lt;/span>&lt;span class="sb"> border: 2px solid palevioletred;
&lt;/span>&lt;span class="sb"> color: palevioletred;
&lt;/span>&lt;span class="sb"> margin: 0 1em;
&lt;/span>&lt;span class="sb"> padding: 0.25em 1em;
&lt;/span>&lt;span class="sb">
&lt;/span>&lt;span class="sb"> &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">props&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">primary&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span>
&lt;span class="nx">css&lt;/span>&lt;span class="sb">`
&lt;/span>&lt;span class="sb"> background: palevioletred;
&lt;/span>&lt;span class="sb"> color: white;
&lt;/span>&lt;span class="sb"> `&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">;
&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>子选择器&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">Text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">styled&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="sb">`
&lt;/span>&lt;span class="sb"> font-size: 12px;
&lt;/span>&lt;span class="sb"> color: blue;
&lt;/span>&lt;span class="sb"> &amp;amp;:nth-child(3) {
&lt;/span>&lt;span class="sb"> margin-bottom: 20px;
&lt;/span>&lt;span class="sb"> color: red !important;
&lt;/span>&lt;span class="sb"> }
&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="使用组件">使用组件&lt;/h2>
&lt;p>可以作为普通组件使用&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kd">function&lt;/span> &lt;span class="nx">Demo&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Button&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/react/" term="React" label="React"/><category scheme="http://blog.wss.cool/categories/react%E5%BA%93/" term="React库" label="React库"/></entry><entry><title type="text">Head-First-Golang</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/head-first-golang.html"/><id>http://blog.wss.cool/head-first-golang.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2021-05-06T13:16:08+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">goroutine main函数就是在一个goroutine中运行的。如果在其中直接运行一个gorou……</summary><content type="html">&lt;h2 id="goroutine">goroutine&lt;/h2>
&lt;p>main函数就是在一个goroutine中运行的。如果在其中直接运行一个goroutine（a），那么a还没运行完main就运行完了，就会退出程序，所以a相当于没来得及运行。&lt;/p>
&lt;p>想要main等内部的goroutine运行结束的话，需要channel。&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/" term="读书笔记" label="读书笔记"/></entry><entry><title type="text">Goland</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/goland.html"/><id>http://blog.wss.cool/goland.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2021-04-19T14:05:03+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">json转换为go的数据结构定义 copy一段json结构的代码字符串。 ctrl+v 时会有一个d……</summary><content type="html">&lt;h2 id="json转换为go的数据结构定义">json转换为go的数据结构定义&lt;/h2>
&lt;ol>
&lt;li>copy一段json结构的代码字符串。&lt;/li>
&lt;li>ctrl+v 时会有一个dialog提示&lt;/li>
&lt;li>结构体中还有嵌入结构体时，可以用 ctrl + shift + alt + T 然后选择 intorduce type...把嵌入的结构体提取出来为一个独立的结构体。&lt;/li>
&lt;li>可以改变json的名字格式，alt + enter 选择change field name style in tags 选择fieldName&lt;/li>
&lt;li>还可以批量的修改tag的内容，alt + enter 选择 update key value in tags ，输入 ,omitemypty&lt;/li>
&lt;/ol>
&lt;h2 id="htmltemplate">html/template&lt;/h2>
&lt;p>默认的html/template文件扩展名是gohtml&lt;/p>
&lt;p>&lt;a href="https://blog.jetbrains.com/go/2018/12/14/go-templates-made-easy/">https://blog.jetbrains.com/go/2018/12/14/go-templates-made-easy/&lt;/a>&lt;/p></content></entry><entry><title type="text">Head-First-设计模式</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/head-first-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html"/><id>http://blog.wss.cool/head-first-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2021-04-12T13:15:26+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">第一章 开发中的不变真理——CHANGE 设计原则 找出应用中可能变化之处，把它们独立出来……</summary><content type="html">&lt;h2 id="第一章">第一章&lt;/h2>
&lt;p>开发中的不变真理——CHANGE&lt;/p>
&lt;h3 id="设计原则">设计原则&lt;/h3>
&lt;ol>
&lt;li>找出应用中可能变化之处，把它们独立出来，不要和哪些不需要变化的代码混在一起。&lt;/li>
&lt;/ol>
&lt;p>这是几乎每个设计模式背后的精神所在。所有的模式都提供栏一套方法让“系统中的某部分改变不会影响到其他部分。”&lt;/p>
&lt;p>结果如何？代码变化引起的不经意后果变少，系统变得更有弹性。&lt;/p>
&lt;ol start="2">
&lt;li>针对接口编程，而不是针对实现编程。&lt;/li>
&lt;/ol>
&lt;p>将鸭子的行为通过接口定义，同一行为的不同表现有不同的实现。这么一来，有了继承的“复用好处”，却没有继承所带来的包袱。&lt;/p>
&lt;p>类之间的关系：IS-A, HAS-A, IMPLEMENTS，“有一个”比“是一个”更好。&lt;/p>
&lt;ol start="3">
&lt;li>多用组合，少用继承。&lt;/li>
&lt;/ol>
&lt;p>软件开发在完成后花费的时间更多，所以要致力于提高可维护性和扩展性。&lt;/p>
&lt;h3 id="定义">定义&lt;/h3>
&lt;p>策略模式定义算法族，分别封装起来，让它们之间可以互相替换，此模式让算法的变化独立于使用算法的客户。&lt;/p>
&lt;p>继承（is a）--实线三角；实现--虚线三角；有一个--实现箭头；&lt;/p>
&lt;h3 id="要点">要点&lt;/h3>
&lt;ul>
&lt;li>良好的OO设计必须具备可复用、可扩展、可维护三个特性。&lt;/li>
&lt;/ul>
&lt;h3 id="继承的缺点">继承的缺点&lt;/h3>
&lt;ol>
&lt;li>代码在多个子类中重复&lt;/li>
&lt;li>运行时的行为不容易改变&lt;/li>
&lt;li>很难知道所有子类的全部行为&lt;/li>
&lt;li>改变会牵一发动全身，造成其他子类不想要的改变。&lt;/li>
&lt;/ol>
&lt;h2 id="观察者">观察者&lt;/h2>
&lt;h2 id="装饰器">装饰器&lt;/h2>
&lt;h2 id="工厂模式">工厂模式&lt;/h2>
&lt;h2 id="单例模式">单例模式&lt;/h2>
&lt;h2 id="命令模式">命令模式&lt;/h2>
&lt;h2 id="设计原则-1">设计原则&lt;/h2>
&lt;h3 id="好莱坞原则">好莱坞原则&lt;/h3>
&lt;p>模板方法模式，父类属于高层组件，子类属于底层组件。父类是冲向类，其中有若干具体抽象方法，他们是算法的某部分的具体实现，由子类提供。父类还可以定义钩子，用于控制算法流程。&lt;/p>
&lt;p>好莱坞原则是说，高层组件会去调用底层组件的方法，不要反向调用。&lt;/p>
&lt;p>这样做的好处是避免环形依赖。解耦，其他代码只依赖高级组件，可以减少整个系统的依赖。&lt;/p>
&lt;p>框架中比较多。框架提供模板，实现算法的步骤，细节交给使用者实现。&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/" term="设计模式" label="设计模式"/><category scheme="http://blog.wss.cool/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/" term="读书笔记" label="读书笔记"/></entry><entry><title type="text">PostgreSQL</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/postgresql.html"/><id>http://blog.wss.cool/postgresql.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2021-02-07T14:08:07+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">允许被远程访问 在目录 /etc/postgresql/9.x/main 下 允许任意IP的连接请求 postgresql.conf 文件 去掉注释，并修改 listen_addresses = '*' 允许密码认……</summary><content type="html">&lt;h2 id="允许被远程访问">允许被远程访问&lt;/h2>
&lt;p>在目录 /etc/postgresql/9.x/main 下&lt;/p>
&lt;ol>
&lt;li>
&lt;p>允许任意IP的连接请求
postgresql.conf 文件
去掉注释，并修改 &lt;code>listen_addresses = '*'&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>允许密码认证
pg_hba.conf 文件&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre>&lt;code># TYPE DATABASE USER CIDR-ADDRESS METHOD
host all all 0.0.0.0/0 md5
&lt;/code>&lt;/pre>&lt;ol start="3">
&lt;li>重启&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>sudo service postgresql restart
&lt;/code>&lt;/pre></content><category scheme="http://blog.wss.cool/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/" term="数据库" label="数据库"/></entry><entry><title type="text">Cli工具--Gg</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/cli%E5%B7%A5%E5%85%B7-gg.html"/><id>http://blog.wss.cool/cli%E5%B7%A5%E5%85%B7-gg.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2021-02-04T18:49:54+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">使用了这几个库 github.com/atotto/clipboard github.com/urfave/cli/v2 gg r快速的往gitlab提一个 merge request 。 bufio.NewReader 读取用户输入 go exec 执行命令 读取……</summary><content type="html">&lt;p>使用了这几个库&lt;/p>
&lt;ul>
&lt;li>github.com/atotto/clipboard&lt;/li>
&lt;li>github.com/urfave/cli/v2&lt;/li>
&lt;/ul>
&lt;p>&lt;code>gg r&lt;/code>快速的往gitlab提一个 merge request 。&lt;/p>
&lt;ul>
&lt;li>bufio.NewReader 读取用户输入&lt;/li>
&lt;li>go exec 执行命令&lt;/li>
&lt;li>读取当前git分支名算法&lt;/li>
&lt;li>剪贴板操作&lt;/li>
&lt;/ul></content></entry><entry><title type="text">Cli</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/cli.html"/><id>http://blog.wss.cool/cli.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2021-01-31T22:26:41+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">cli: https://github.com/urfave/cli/blob/master/docs/v2/manual.md 交互式: https://github.com/manifoldco/promptui 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 app := &amp;amp;cli.App{ Flags: []cli.Flag { &amp;amp;cli.StringFlag{ Name: &amp;#34;lang&amp;#34;, Aliases: []string{&amp;#34;l&amp;#34;}, Value:……</summary><content type="html">&lt;p>cli: &lt;a href="https://github.com/urfave/cli/blob/master/docs/v2/manual.md">https://github.com/urfave/cli/blob/master/docs/v2/manual.md&lt;/a>&lt;/p>
&lt;p>交互式: &lt;a href="https://github.com/manifoldco/promptui">https://github.com/manifoldco/promptui&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="nx">app&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">cli&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">App&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">Flags&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="nx">cli&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Flag&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">cli&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">StringFlag&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">Name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;lang&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">Aliases&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="s">&amp;#34;l&amp;#34;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="nx">Value&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;english&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">Usage&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;language for the greeting&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">Destination&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">language&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">Action&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">cli&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">name&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="s">&amp;#34;someone&amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NArg&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Args&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nf">Get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">language&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s">&amp;#34;spanish&amp;#34;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hola&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这段代码里既有 arguments 又有 flag 。在使用命令时，要先输入 flag 后输入 arg&lt;/p>
&lt;pre>&lt;code>go run main.go -lang=spanish wangshushuo
&lt;/code>&lt;/pre>&lt;p>flag 部分有多种用法可选：&lt;/p>
&lt;ul>
&lt;li>-lang=abc&lt;/li>
&lt;li>--lang=abc&lt;/li>
&lt;li>--lang abc&lt;/li>
&lt;/ul>
&lt;p>如果定义里 Aliase 还可以&lt;/p>
&lt;ul>
&lt;li>-l abc&lt;/li>
&lt;/ul>
&lt;h2 id="环境变量">环境变量&lt;/h2>
&lt;p>定义 EnvVars 可以用来读取环境变量&lt;/p>
&lt;pre>&lt;code>app := &amp;amp;cli.App{
Flags: []cli.Flag{
&amp;amp;cli.StringFlag{
Name: &amp;quot;lang&amp;quot;,
Aliases: []string{&amp;quot;l&amp;quot;},
Value: &amp;quot;english&amp;quot;,
Usage: &amp;quot;language for the greeting&amp;quot;,
EnvVars: []string{&amp;quot;LEGACY_COMPAT_LANG&amp;quot;, &amp;quot;APP_LANG&amp;quot;, &amp;quot;LANG&amp;quot;},
},
},
}
&lt;/code>&lt;/pre>&lt;h2 id="从文件中取值">从文件中取值&lt;/h2>
&lt;p>FilePath&lt;/p>
&lt;pre>&lt;code>app.Flags = []cli.Flag {
&amp;amp;cli.StringFlag{
Name: &amp;quot;password&amp;quot;,
Aliases: []string{&amp;quot;p&amp;quot;},
Usage: &amp;quot;password for the mysql database&amp;quot;,
FilePath: &amp;quot;/etc/mysql/password&amp;quot;,
},
}
&lt;/code>&lt;/pre>&lt;p>文件比环境变量的优先级高。&lt;/p>
&lt;h2 id="交互式的获取值">交互式的获取值&lt;/h2>
&lt;pre>&lt;code> var language string
prompt := promptui.Select{
Label: &amp;quot;Select Day&amp;quot;,
Items: []string{&amp;quot;spanish&amp;quot;, &amp;quot;english&amp;quot;, &amp;quot;chinese&amp;quot;},
}
_, language, err := prompt.Run()
app := &amp;amp;cli.App{
Action: func(c *cli.Context) error {
name := &amp;quot;someone&amp;quot;
if c.NArg() &amp;gt; 0 {
name = c.Args().Get(0)
}
if language == &amp;quot;spanish&amp;quot; {
fmt.Println(&amp;quot;Hola&amp;quot;, name)
} else {
fmt.Println(&amp;quot;Hello&amp;quot;, name)
}
return nil
},
}
&lt;/code>&lt;/pre></content></entry><entry><title type="text">Go Tips</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/gotips.html"/><id>http://blog.wss.cool/gotips.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2021-01-27T15:03:39+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">去map的size 用 len 遍历map 1 2 3 for k, v := range m { fmt.Printf(&amp;#34;key[%s] value[%s]\n&amp;#34;, k, v) } 参考 json转换 使用e……</summary><content type="html">&lt;h2 id="去map的size">去map的size&lt;/h2>
&lt;p>用 len&lt;/p>
&lt;h2 id="遍历map">遍历map&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="k">for&lt;/span> &lt;span class="nx">k&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">v&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">m&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;key[%s] value[%s]\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">k&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;a href="https://stackoverflow.com/questions/1841443/iterating-over-all-the-keys-of-a-map">参考&lt;/a>&lt;/p>
&lt;h2 id="json转换">json转换&lt;/h2>
&lt;p>使用&lt;code>encoding/json&lt;/code>包的 Unmarshal 和 Marshal 方法，结构体要注明 json&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;encoding/json&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kd">type&lt;/span> &lt;span class="nx">Data&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">Votes&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Votes&lt;/span> &lt;span class="s">`json:&amp;#34;votes&amp;#34;`&lt;/span>
&lt;span class="nx">Count&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="s">`json:&amp;#34;count,omitempty&amp;#34;`&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">type&lt;/span> &lt;span class="nx">Votes&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">OptionA&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="s">`json:&amp;#34;option_A&amp;#34;`&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">s&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="s">`{ &amp;#34;votes&amp;#34;: { &amp;#34;option_A&amp;#34;: &amp;#34;3&amp;#34; } }`&lt;/span>
&lt;span class="nx">data&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">Data&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">Votes&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">Votes&lt;/span>&lt;span class="p">{},&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">json&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Unmarshal&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="nb">byte&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Votes&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">s2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">json&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Marshal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s2&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Count&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;2&amp;#34;&lt;/span>
&lt;span class="nx">s3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">json&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Marshal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s3&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;a href="https://stackoverflow.com/questions/40429296/decode-json-with-unknown-structure">参考&lt;/a>&lt;/p>
&lt;h2 id="指定interface">指定interface&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">var&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="kd">interface&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">b&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;span class="nx">b&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">a&lt;/span>&lt;span class="p">.(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="go-run-失败">go run 失败&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">$ go run main.go
&lt;span class="c1"># command-line-arguments&lt;/span>
.&lt;span class="se">\m&lt;/span>ain.go:4:2: undefined: a
.&lt;span class="se">\m&lt;/span>ain.go:5:2: undefined: average2
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>main.go 文件引用了 package main 中的另外两个文件中的函数。所以 run 命令应该是这样的&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">$ go run main.go demo.go average2.go
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>要把关联的文件都加载才行。&lt;/p>
&lt;h2 id="-运算符">* 运算符&lt;/h2>
&lt;ul>
&lt;li>声明变量为指针类型
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">var&lt;/span> &lt;span class="nx">myIntPointer&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="kt">int&lt;/span>
&lt;span class="nx">myInt&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">4&lt;/span>
&lt;span class="nx">myIntPointer&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">myInt&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>获取指针的值
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">myIntPointer&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>修改指针指向的变量的值
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">var&lt;/span> &lt;span class="nx">myIntPointer&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="kt">int&lt;/span>
&lt;span class="nx">myInt&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">4&lt;/span>
&lt;span class="nx">myIntPointer&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">myInt&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">myIntPointer&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">//4
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">myIntPointer&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">8&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">myInt&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">//8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="单元测试">单元测试&lt;/h2>
&lt;p>命令是 go test 文件名，它会寻找以 _test.go 结尾的文件&lt;/p>
&lt;ul>
&lt;li>-v 会打印出执行的用例的名字&lt;/li>
&lt;li>-run 加关键字，只会执行相关的文件&lt;/li>
&lt;/ul>
&lt;p>一个 _test.go 文件内可以有多个测试函数，函数的名字要以 Test 开头&lt;/p>
&lt;h2 id="install">install&lt;/h2>
&lt;p>&lt;code>go install&lt;/code> 命令会对当前目录的go程序进行编译并安装编译后的结果文件到指定目录。可以到 &lt;code>cd $GOPATH/bin&lt;/code> 目录中查看。&lt;/p>
&lt;p>安装后的程序是以目录名命名的。&lt;/p>
&lt;pre>&lt;code>go install -v -work //
go install -a -v -work // 强行重新安装指定代码包及其依赖包
&lt;/code>&lt;/pre>&lt;p>&lt;a href="https://wiki.jikexueyuan.com/project/go-command-tutorial/0.2.html">参考&lt;/a>&lt;/p>
&lt;h2 id="go-get">go get&lt;/h2>
&lt;p>go get 命令会下载并install一个go程序&lt;/p>
&lt;p>刚开始本地创建了项目时，要进行 go mode init 会创建一个 go.mod 文件&lt;/p>
&lt;pre>&lt;code>module gg
go 1.14
require (
github.com/atotto/clipboard v0.1.2
github.com/urfave/cli/v2 v2.3.0
)
&lt;/code>&lt;/pre>&lt;p>其中的 module 是你当前文件夹的名字&lt;/p>
&lt;p>当把它提交到 github 后，用 go get 命令安装时，命令应该是这样的&lt;/p>
&lt;pre>&lt;code>go get github.com/wangshushuo/gg
&lt;/code>&lt;/pre>&lt;p>然后会报一个错误&lt;/p>
&lt;pre>&lt;code>$ go get github.com/wangshushuo/gg@v0.1.1
go get: github.com/wangshushuo/gg@v0.1.1: parsing go.mod:
module declares its path as: gg
but was required as: github.com/wangshushuo/gg
&lt;/code>&lt;/pre>&lt;p>module 这个字段现在是 gg ，要求的是 github.com/wangshushuo/gg 。&lt;/p>
&lt;p>所以需要在 go.mod 文件中将 gg 改为 github.com/wangshushuo/gg 。&lt;/p>
&lt;h2 id="http-请求">http 请求&lt;/h2>
&lt;p>form&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="nx">client&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Client&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;span class="nx">form&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">url&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Values&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;span class="nx">form&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;username&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;xxx&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">form&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;password&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;xxx&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewRequest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;POST&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;http://xxx/api/loginapi&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">strings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">form&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Encode&lt;/span>&lt;span class="p">()))&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">req&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Header&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Content-Type&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;application/x-www-form-urlencoded&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;err&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// handle error
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">client&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Do&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">defer&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nx">body&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">ioutil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadAll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Body&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>json&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="nx">loginInfo&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">LoginInfo&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">Username&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;王书硕&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">Password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;ISxUo7Ol&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">loginInfoJson&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">json&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Marshal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">loginInfo&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewRequest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;POST&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;http://xxx/api/loginapi&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">bytes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewBuffer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">loginInfoJson&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="htmltemplate">html/template&lt;/h2>
&lt;p>简单的方式&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="nx">temp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">template&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ParseFiles&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tech_keyword/category/view.html&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这样的模板不能植入方法，需要用template.New方法&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="nf">demo&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">funcMap&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">template&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">FuncMap&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="s">&amp;#34;add&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">add&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">temp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">template&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">New&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;view.html&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Funcs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">funcMap&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">ParseFiles&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tech_keyword/category/view.html&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">b&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>New的参数需要是ParseFiles中文件名一样，不然会报错&lt;/p>
&lt;pre>&lt;code>error: template: “…” is an incomplete or empty template
&lt;/code>&lt;/pre>&lt;h2 id="template-bing-data">template bing data&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">o&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">OAuth2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">view&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ResponseWriter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Request&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">temp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">template&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">New&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;view.html&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">ParseFiles&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;oauth2/view.gohtml&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">client&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;https://api.github.com/user&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">robots&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">ioutil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadAll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Body&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;err: &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Error&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">StatusBadRequest&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">robots&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nx">userInfo&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">UserInfoData&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">json&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Unmarshal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">robots&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">userInfo&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;err: &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Error&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">StatusBadRequest&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">_&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">temp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">userInfo&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="io">io&lt;/h2>
&lt;h3 id="读取http请求的body">读取http请求的body&lt;/h3>
&lt;p>http.Request中的Body是一个io.ReadCloser，可以使用ioutil.ReadAll将其中的内容全部读出来。&lt;/p>
&lt;h2 id="byte-string">byte string&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="c1">// 将字符串转化为byte
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">[]&lt;/span>&lt;span class="nb">byte&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hello&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// 将byte转化为string
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nb">string&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="nb">byte&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hello&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="os">os&lt;/h2>
&lt;h3 id="打开文件">打开文件&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="nx">f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">OpenFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">filePath&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">O_APPEND&lt;/span>&lt;span class="p">|&lt;/span>&lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">O_CREATE&lt;/span>&lt;span class="p">|&lt;/span>&lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">O_WRONLY&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mo">0644&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="清空文件内容">清空文件内容&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Truncate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">filePath&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Failed to truncate: %v&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Truncate方法是用来剪切文件大小的。0就相当于把内容清空。&lt;/p>
&lt;h2 id="writer">writer&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="nx">w&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">csv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewWriter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">w&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">record&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>用Write往文件中写入内容，是增量的写入。&lt;/p>
&lt;h2 id="context">context&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Ctx&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">WithValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;token&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;123&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// 或
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">WithValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Background&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="s">&amp;#34;token&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">resToken&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Token&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>讲值存到context中。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Ctx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Value&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;token&amp;#34;&lt;/span>&lt;span class="p">).(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>获取值&lt;/p>
&lt;h2 id="值传递">值传递&lt;/h2>
&lt;p>map和slice创建后得到的就是它们的指针，所以赋值给变量后，变量就是一个指针，当把他们传给方法、函数时，传递的是变量的值。但是值里面其实是指针。&lt;/p></content><category scheme="http://blog.wss.cool/categories/golang/" term="golang" label="golang"/></entry><entry><title type="text">5.软件构建中的设计</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/5.%E8%BD%AF%E4%BB%B6%E6%9E%84%E5%BB%BA%E4%B8%AD%E7%9A%84%E8%AE%BE%E8%AE%A1.html"/><id>http://blog.wss.cool/5.%E8%BD%AF%E4%BB%B6%E6%9E%84%E5%BB%BA%E4%B8%AD%E7%9A%84%E8%AE%BE%E8%AE%A1.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2021-01-22T23:00:34+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">《代码大全》中的摘录</summary><content type="html">&lt;h2 id="53-设计构造块启发式方法">5.3 设计构造块：启发式方法&lt;/h2>
&lt;ul>
&lt;li>当继承能简化设计时就继承。定义对象之间的相同点和不同点就叫“继承”。&lt;/li>
&lt;/ul>
&lt;h2 id="隐藏信息">隐藏信息&lt;/h2>
&lt;ul>
&lt;li>使用了隐藏信息的大型项目，比没使用的，容易修改4倍&lt;/li>
&lt;/ul>
&lt;h3 id="秘密和隐私权">秘密和隐私权&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>隐藏起来的秘密可能是某个易变的区域，或某种数据类型的实现方式，或某个需要隔离的区域，在这个区域中发生的错误，不会给程序其余部分带来太大损失。类的职责就是把这部分信息隐藏起来，并保护自己的隐私权。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>隐藏信息就是隐藏复杂度。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>设计一个类的一项关键性决策就是确定类的哪些特性应该对外可见或隐藏。&lt;/p>
&lt;blockquote>
&lt;p>暴露过多的信息会增加人的智力负担，如果别的类引用了你的类的细节，这对双方都是bug隐患。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>设计类的接口与设计其他环节一样，都是一个迭代的过程。一次没得到合适的接口就多尝试几次，知道稳定下来。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="两类秘密">两类秘密&lt;/h3>
&lt;ul>
&lt;li>隐藏复杂度，这样你就不用再去应付它&lt;/li>
&lt;li>隐藏变化源，这样当变化发生时，其影响就限制在局部范围内。&lt;/li>
&lt;/ul>
&lt;h3 id="隐藏信息的价值">隐藏信息的价值&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>信息隐藏有着独特的启发力，他能够激发出有效的设计方案。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>问题“这个类需要隐藏些什么？”正切中了接口设计的核心。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>请养成问“我该隐藏些什么？”的习惯，你会惊奇地发现，有很多很棘手的设计难题都会在你面前化解。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="找出容易改变的区域">找出容易改变的区域&lt;/h2>
&lt;ul>
&lt;li>好的程序设计所面临的最重要挑战之一就是适应变化。&lt;/li>
&lt;li>目标应该是把不稳定的区域隔离起来，让变化所带来的影响限制在一个子程序、类或者包的内部。
&lt;ol>
&lt;li>&lt;strong>找出看起来容易变化的项目&lt;/strong>。好的需求应该包含一份潜在变化清单。没有的话，请参考“在任何项目中都容易发生变化的区域”的讨论。&lt;/li>
&lt;li>&lt;strong>把容易变化的项目分离出来&lt;/strong>。容易同时发生变化的组件划分到同一类中。&lt;/li>
&lt;li>&lt;strong>把看起来容易变化的项目隔离开&lt;/strong>。类之间的接口可以使其对变化不敏感，要设计好接口。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>主动应对变更的最有力的技术之一，是表驱动技术。&lt;/li>
&lt;li>容易发生变化的区域：
&lt;ul>
&lt;li>业务规则：基于业务规则的逻辑不应该遍布于整个程序，而是仅仅隐藏于系统的某个角落。&lt;/li>
&lt;li>输入和输出：检查所有外部接口，看看有哪些可能的变化，通常是个不错的主意。（类的私有方法不检查，公开方法检查输入）&lt;/li>
&lt;li>⭐️困难的设计区域和构建区域：把困难的设计区域和构建区域隐藏起来也是很好的想法，因为这些代码很可能因为设计得很差而需要重新做。&lt;/li>
&lt;li>状态变量：与大多数其他类型的数据相比，这种东西更容易改变。在使用状态变量时增加至少两层的灵活性和可读性：
&lt;ul>
&lt;li>不要使用布尔值作为状态变量，请换用枚举类型。&lt;/li>
&lt;li>使用访问器子程序取代对状态变量的直接检查。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>数据量的限制：使用具名常量 MAX_EMPLOYEES 来隐藏 100 这样的数字&lt;/li>
&lt;li>预料不同程度的变化
&lt;ul>
&lt;li>如何找出容易变化的区域
&lt;ul>
&lt;li>首先找出对用户最有用的最小子集，它构成来系统的核心，不容易发生变化&lt;/li>
&lt;li>然后逐步扩展这个系统&lt;/li>
&lt;li>对于附加功能可以提取出来，并把它们的可能改进隐藏起来&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="保持松散耦合">保持松散耦合&lt;/h2>
&lt;h3 id="耦合的标准">耦合的标准&lt;/h3>
&lt;ul>
&lt;li>规模，模块间的连接数量&lt;/li>
&lt;li>可见行。通过参数表传递数据便是一种明显的连接，因为值得提倡。通过修改全局数据而使另一个模块能够使用该数据便是一种“鬼鬼祟祟”的做法，因此是很不好的设计。&lt;/li>
&lt;li>灵活性。一个模块越容易被其他模块所调用，那么它们之间的耦合关系就越松散。&lt;/li>
&lt;/ul>
&lt;h3 id="耦合的种类">耦合的种类&lt;/h3>
&lt;ul>
&lt;li>简单数据参数耦合。正常&lt;/li>
&lt;li>简单对象耦合。也很不错&lt;/li>
&lt;li>对象参数耦合。object1要求object2给它一个object3。有些紧密了，不大好。&lt;/li>
&lt;li>语义上的耦合。一个模块使用了另一个模块的语法元素，而且还使用了有关那个模块内部工作细节的语义知识。
&lt;ul>
&lt;li>语义上的耦合是非常危险的，A模块调用了B模块，更改B模块中的代码可能会破坏A模块，破坏方式是编译器无法检查的。类似这样的代码崩溃时，其方式是非常微妙的，看起来与被使用的模块中的代码更改毫无关系，因此会使得调试工作变得无比困难。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>松散耦合的关键之处在于，一个有效的模块提供的出了一层附加的抽象——一旦你写好了它，你就可以想当然的去用它。这样就降低了整体系统的复杂度，使得你可以在同一时间只关注一件事。如果对一个模块的使用要求同时关注好几件事——其内部工作的细节、对全局数据的修改、不确定的功能点等——那么就失去了抽象的能力。模块所具有的管理复杂度的能力也就削弱或完全丧失了。&lt;/p>
&lt;p>类和子程序是用于降低复杂度的首选和最重要的智力工具。如果它们没有帮你简化工作，那么它们就失职了。&lt;/p>
&lt;h2 id="查阅常见的设计模式">查阅常见的设计模式&lt;/h2>
&lt;h2 id="54-设计实践">5.4 设计实践&lt;/h2>
&lt;ul>
&lt;li>迭代&lt;/li>
&lt;li>分而治之&lt;/li>
&lt;li>自上而下和自下而上的设计方法
&lt;ul>
&lt;li>自上而下的论据&lt;/li>
&lt;li>自下而上的论据&lt;/li>
&lt;li>其实并没有争论&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>建立试验性原型&lt;/li>
&lt;li>合作设计&lt;/li>
&lt;li>要做多少设计才够&lt;/li>
&lt;li>记录你的设计成果&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;/blockquote>
&lt;h2 id="要点">要点&lt;/h2>
&lt;ul>
&lt;li>软件的首要技术使命就是管理复杂度。以简单性作为努力目标的设计方案对此最有帮助。&lt;/li>
&lt;li>简单性可以通过两种方式来获取：一是减少在同一时间所关注的本质性复杂度的量，二是避免生成不必要的偶然的复杂度。&lt;/li>
&lt;li>设计是一种启发式的过程。固执于某一种单一方法会损害创新力，从而损害你的程序。&lt;/li>
&lt;li>好的设计都是迭代的。你尝试设计的可能性越多，你的最终设计方案就会变得越好。&lt;/li>
&lt;li>隐藏信息是个非常有价值的概念。通过询问“我应该隐藏什么？”能够解决很多困难的设计问题。&lt;/li>
&lt;/ul></content><category scheme="http://blog.wss.cool/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/" term="读书笔记" label="读书笔记"/><category scheme="http://blog.wss.cool/categories/%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8/" term="代码大全" label="代码大全"/></entry><entry><title type="text">沟通</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E6%B2%9F%E9%80%9A.html"/><id>http://blog.wss.cool/%E6%B2%9F%E9%80%9A.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2021-01-15T16:23:23+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">跟产品沟通，谈开发时间。 开发：评估工作量，要A日期能提测。 产品：不行哦，客户等着用呢……</summary><content type="html">&lt;p>跟产品沟通，谈开发时间。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>开发：评估工作量，要A日期能提测。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>产品：不行哦，客户等着用呢，要提前B天。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>开发：不行哦，时间这么紧张，不能保证质量呀，可能会提测质量不好，后期bug多。&lt;/p>
&lt;/li>
&lt;/ul></content></entry><entry><title type="text">WebStorm Changelist更新时间长</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/changelist-git-ignore.html"/><id>http://blog.wss.cool/changelist-git-ignore.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2021-01-15T10:45:56+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">有时changelist会进行长时间的updating并占用大量cpu，这里会解决这个问题</summary><content type="html">&lt;h2 id="问题">问题&lt;/h2>
&lt;p>当发生切换分支等操作时，webstorm的commit窗口中的changelist会进行updating，正常情况下它应该执行的很快，甚至察觉不到，但是不知道什么情况下updating会长时间不结束并占用大量cpu。&lt;/p>
&lt;p>当发生了异常情况时，打开任务管理器，可以看到，这时webstorm是在运行一个git命令&lt;/p>
&lt;pre>&lt;code>git -c credential.helper= -c core.quotepath=false -c log.showSignature=false status --ignored --porcelain -z --
&lt;/code>&lt;/pre>&lt;p>可以理解为是在运行&lt;code>git status --ignored&lt;/code>，它就会扫描 node_module 等已经设置为忽略的文件，而它们有层次很深，文件很多，就会导致git占用大量cpu进行计算。可能会让webstorm变卡、电脑变卡。&lt;/p>
&lt;h2 id="解决方法">解决方法&lt;/h2>
&lt;p>可以通过修改webstorm的注册表，让它不扫描忽略文件。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>打开注册表&lt;/p>
&lt;ul>
&lt;li>菜单中 Help | Find action..., 输入&lt;code>Registry...&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>找到&lt;code>git.process.ignored&lt;/code>&lt;/p>
&lt;ul>
&lt;li>在注册表界面可以直接输入&lt;code>git.process.ignored&lt;/code>进行搜索&lt;/li>
&lt;li>取消它的勾选就可以了
&lt;img src="https://hugo-1256216240.cos.ap-chengdu.myqcloud.com/20210115110317_7eebc60a6f46b7076eddc44f64d02287.png" alt="20210115110317_7eebc60a6f46b7076eddc44f64d02287.png">&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>这样updating的时候，就不会扫描忽略文件了，就很快了。&lt;/p></content><category scheme="http://blog.wss.cool/categories/ide/" term="ide" label="ide"/><category scheme="http://blog.wss.cool/categories/webstorm/" term="WebStorm" label="WebStorm"/><category scheme="http://blog.wss.cool/tags/webstorm/" term="webstorm" label="webstorm"/></entry><entry><title type="text">断言函数</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/assertfunction.html"/><id>http://blog.wss.cool/assertfunction.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2021-01-13T15:52:47+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">https://jkchao.github.io/typescript-book-chinese/new/typescript-3.7.html#%E6%96%AD%E8%A8%80%E5%87%BD%E6%95%B0 https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html#assertion-functions</summary><content type="html">&lt;p>&lt;a href="https://jkchao.github.io/typescript-book-chinese/new/typescript-3.7.html#%E6%96%AD%E8%A8%80%E5%87%BD%E6%95%B0">https://jkchao.github.io/typescript-book-chinese/new/typescript-3.7.html#%E6%96%AD%E8%A8%80%E5%87%BD%E6%95%B0&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html#assertion-functions">https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html#assertion-functions&lt;/a>&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="http://blog.wss.cool/categories/typescript/" term="typescript" label="typescript"/></entry><entry><title type="text">架构整洁之道</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E6%9E%B6%E6%9E%84%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93.html"/><id>http://blog.wss.cool/%E6%9E%B6%E6%9E%84%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2021-01-05T22:55:39+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">《架构整洁之道》罗伯特·C·马丁，读书笔记</summary><content type="html">&lt;h2 id="第三部分-设计原则">第三部分 设计原则&lt;/h2>
&lt;p>SOLID原则的主要作用就是告诉我们如何将数据和函数组织成为类，以及如何将这些类链接起来成为程序。&lt;/p>
&lt;p>为软件构建中层结构的主要目标如下：使软件可容忍被改动。使软件更容易被理解。构建可在多个软件系统中复用的组件。&lt;/p>
&lt;p>我们在这里之所以会使用“中层”这个词，是因为这些设计原则主要适用于那些进行模块级编程的程序员。&lt;/p>
&lt;p>SOLID原则应该直接紧贴于具体的代码逻辑之上，这些原则是用来帮助我们定义软件架构中的组件和模块的。&lt;/p>
&lt;blockquote>
&lt;p>SOLID原则——如何设计好模块&lt;/p>
&lt;/blockquote></content><category scheme="http://blog.wss.cool/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/" term="读书笔记" label="读书笔记"/></entry><entry><title type="text">工作TIPS</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E5%B7%A5%E4%BD%9Ctips.html"/><id>http://blog.wss.cool/%E5%B7%A5%E4%BD%9Ctips.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-12-18T13:46:12+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">记录各种工作中的代码，提高效率</summary><content type="html">&lt;h2 id="go">go&lt;/h2>
&lt;h3 id="为表单加一个字段">为表单加一个字段&lt;/h3>
&lt;p>&lt;img src="http://hugo-1256216240.cos.ap-chengdu.myqcloud.com/pasteimageintomarkdown/2022-05-16/53911817974500.png" alt="">&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="c1">// 自定义field中间件
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="nf">NewCustomizedFieldMiddlewares&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="nx">form_context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">FormMiddlewares&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">customizedFieldMiddlewares&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">type&lt;/span> &lt;span class="nx">customizedFieldMiddlewares&lt;/span> &lt;span class="kd">struct&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">customizedFieldMiddlewares&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Register&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span> &lt;span class="nx">form_context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">FormContext&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">ctx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetResponsePipeline&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nf">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HandleResponse&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// ctx的metadataApi可以加一个field（主表子表）
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">customizedFieldMiddlewares&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">HandleResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span> &lt;span class="nx">form_context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">FormContext&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">res&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">BizFormConfigResponse&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">BizFormConfigResponse&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">isMobile&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">ctx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetSolution&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">FormTemplate&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">IsMobile&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">isMobile&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">true&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">res&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nf">addMasterFields&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">res&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 定义field
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="nf">addMasterFields&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span> &lt;span class="nx">form_context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">FormContext&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">api&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">ctx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetMetadataApi&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nx">item&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">form_context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">FormMasterFieldParams&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">MetadataField&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">metadata&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Field&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">Path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;project&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">DisplayName&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;项目编码&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">IsContextField&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">Required&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">Readonly&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">IsExtend&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">IsExtendField&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">ExtendInfo&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">metadata&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ExtendInfo&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">Type&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;String&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">ReferType&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;Project&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">EnumType&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">IsMulti&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">IsSubmit&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">Precision&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">TemplateField&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">template&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Field&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">FieldBase&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">template&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">FieldBase&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">Extended&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">Path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;project&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">Required&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">DisplayName&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;项目编码&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">Colspan&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">Rowspan&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">SectionIndex&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">InsertIndex&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">api&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">AddMasterField&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">item&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>{&amp;quot;quickSearchFields&amp;quot;:null,&amp;quot;fileName&amp;quot;:&amp;quot;WorkforceResource-uFGva.json&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;custom-object-bill-refer&amp;quot;,&amp;quot;entityName&amp;quot;:&amp;quot;
WorkforceResource&amp;quot;,&amp;quot;displayField&amp;quot;:&amp;quot;name&amp;quot;,&amp;quot;multi&amp;quot;:false,&amp;quot;displayMode&amp;quot;:&amp;quot;list&amp;quot;,&amp;quot;listOptions&amp;quot;:{},&amp;quot;gridOptions&amp;quot;:{&amp;quot;
gridColumnsName&amp;quot;:&amp;quot;&amp;quot;},&amp;quot;treeOptions&amp;quot;:{},&amp;quot;advanceEnabled&amp;quot;:true,&amp;quot;advanceOptions&amp;quot;:{&amp;quot;gridColumnsName&amp;quot;:&amp;quot;
custom-object-bill-list&amp;quot;}}&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%B7%A5%E4%BD%9C/" term="工作" label="工作"/></entry><entry><title type="text">Iris</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/iris.html"/><id>http://blog.wss.cool/iris.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-12-16T23:51:41+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">oauth2 可以用来快速实现github授权登陆功能。 热重启 开发的时候不用每次重新编译 Type……</summary><content type="html">&lt;dl>
&lt;dt>oauth2&lt;/dt>
&lt;dd>可以用来快速实现github授权登陆功能。&lt;/dd>
&lt;dt>热重启&lt;/dt>
&lt;dd>开发的时候不用每次重新编译&lt;/dd>
&lt;dt>Typescript集成 + Web IDE&lt;/dt>
&lt;dd>这两个是啥？&lt;/dd>
&lt;/dl></content><category scheme="http://blog.wss.cool/categories/golang/" term="golang" label="golang"/></entry><entry><title type="text">Go语言核心36讲</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/go%E8%AF%AD%E8%A8%80%E6%A0%B8%E5%BF%8336%E8%AE%B2.html"/><id>http://blog.wss.cool/go%E8%AF%AD%E8%A8%80%E6%A0%B8%E5%BF%8336%E8%AE%B2.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-11-29T23:08:01+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">方法返回类型为 *string 类型 *string 代表的是字符串的指针类型，而不是字符串类型。因此，这里的类型n……</summary><content type="html">&lt;h2 id="方法返回类型为-string">方法返回类型为 *string&lt;/h2>
&lt;p>类型 *string 代表的是字符串的指针类型，而不是字符串类型。因此，这里的类型name代表的是一个指向字符串的指针。&lt;/p>
&lt;p>name的类型是 *string，用 *name 可以取到它的值。&lt;/p></content></entry><entry><title type="text">榜单</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E6%A6%9C%E5%8D%95.html"/><id>http://blog.wss.cool/%E6%A6%9C%E5%8D%95.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-11-29T22:41:53+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">记录技术知识点，及相关的文章、问题</summary><content type="html">&lt;h2 id="go-module">Go Module&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/59687626">开始使用 Go Module&lt;/a>&lt;/li>
&lt;/ol>
&lt;h3 id="关联问题">关联问题&lt;/h3>
&lt;ul>
&lt;li>&lt;code>go run xx.go&lt;/code> 报错 &lt;code>package XXX is not in GOROOT&lt;/code>&lt;/li>
&lt;/ul></content></entry><entry><title type="text">精度</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E7%B2%BE%E5%BA%A6.html"/><id>http://blog.wss.cool/%E7%B2%BE%E5%BA%A6.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-11-12T11:40:46+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">利用Number.EPSILON解决精度问题。</summary><content type="html">&lt;h2 id="遇到的问题">遇到的问题&lt;/h2>
&lt;p>在 JS 中计算数字经常会遇到精度的问题。使一些判断语句出现bug。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="mf">1.1&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">100&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="mi">110&lt;/span>
&lt;span class="c1">// 110.00000000000001
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="mf">0.1&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">0.2&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="mf">0.3&lt;/span>
&lt;span class="c1">// 0.30000000000000004
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="解决方法">解决方法&lt;/h2>
&lt;p>不使用严格相等(==或===)来做判断，容忍两个数之间有一个很小的误差。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">function&lt;/span> &lt;span class="nx">eq&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">left&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">right&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nb">Math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">left&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nx">right&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mf">0.000001&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="原理">原理&lt;/h2>
&lt;p>比如正常的比较，&lt;code>0.1 + 0.2 === 0.3&lt;/code> 相当于 &lt;code>0.1 + 0.2 - 0.3 === 0&lt;/code> 。bug就出现在不是等于零，而是一个很小很小的数。这个很小很小的数就使误差。如果误差在可接受范围内，我们就还可以认为它们使相等的。&lt;/p>
&lt;p>这个误差，可以通过 &lt;code>Number.EPSILON&lt;/code>&lt;sup id="fnref:1">&lt;a href="http://blog.wss.cool/%E7%B2%BE%E5%BA%A6.html#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> 来设置。具体设置成多少我还不知道，可能要根据做的业务的情况来确定吧。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">function&lt;/span> &lt;span class="nx">eq&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">left&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">right&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">Math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">left&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nx">right&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nb">Number&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">EPSILON&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nb">Math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>阮一峰.&lt;a href="https://es6.ruanyifeng.com/#docs/number#Number-EPSILON">ECMAScript 6 入门&lt;/a>.[2020年11月12日] &lt;a href="http://blog.wss.cool/%E7%B2%BE%E5%BA%A6.html#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></content><category scheme="http://blog.wss.cool/categories/javascript/" term="JavaScript" label="JavaScript"/></entry><entry><title type="text">NVM阿里源</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/nvm%E9%98%BF%E9%87%8C%E6%BA%90.html"/><id>http://blog.wss.cool/nvm%E9%98%BF%E9%87%8C%E6%BA%90.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-11-07T22:57:53+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">为NVM设置阿里源下载nodejs</summary><content type="html">&lt;p>修改NVM下载nodejs的地址，设置环境变量。&lt;/p>
&lt;p>命令行是&lt;code>bash&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="nb">echo&lt;/span> -e &lt;span class="s2">&amp;#34;\nexport NVM_NODEJS_ORG_MIRROR=http://npm.taobao.org/mirrors/node&amp;#34;&lt;/span> &amp;gt;&amp;gt; ~/.bashrc
&lt;span class="nb">source&lt;/span> ~/.bashrc
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>命令行是&lt;code>zsh&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="nb">echo&lt;/span> -e &lt;span class="s2">&amp;#34;\nexport NVM_NODEJS_ORG_MIRROR=http://npm.taobao.org/mirrors/node&amp;#34;&lt;/span> &amp;gt;&amp;gt; ~/.zshrc
&lt;span class="nb">source&lt;/span> ~/.zshrc
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="http://blog.wss.cool/tags/nvm/" term="nvm" label="nvm"/></entry><entry><title type="text">Windows中的换行符</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/windows%E4%B8%AD%E7%9A%84%E6%8D%A2%E8%A1%8C%E7%AC%A6.html"/><id>http://blog.wss.cool/windows%E4%B8%AD%E7%9A%84%E6%8D%A2%E8%A1%8C%E7%AC%A6.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-10-12T17:12:27+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">问题 如果项目中设置的eslint，要求换行符是\n(LF)，那么在windows中打……</summary><content type="html">&lt;h2 id="问题">问题&lt;/h2>
&lt;p>如果项目中设置的eslint，要求换行符是\n(LF)，那么在windows中打开项目的文件，编辑器/IDE可能会标红报错（eslint错误）。&lt;/p>
&lt;h2 id="解决方法">解决方法&lt;/h2>
&lt;ol>
&lt;li>告诉 Git 在提交时把回车和换行转(CRLF)换成换行(LF)，检出时不转换&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git config --global core.autocrlf input
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>设置本地 Git 的换行符&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>git config --global core.eol lf
&lt;/code>&lt;/pre>&lt;ol start="3">
&lt;li>设置编辑器/IDE将 CRLF 改成 LF&lt;/li>
&lt;/ol>
&lt;h2 id="原理">原理&lt;/h2>
&lt;p>Git 默认的行为是，在藏库里只保存 LF 换行符，但是Windows系统的默认换行符是 CRLF 。在Windows系统中，Git 为了实现只保存 LF 换行符，在提交代码时，Git 会自动进行转化为 LF ，签出代码时自动转换回 CRLF 。&lt;/p>
&lt;p>经过上面的三步操作，可以让 Git 不做这个自动转换，并且让新创建的换行符都时 LF 的。&lt;/p></content><category scheme="http://blog.wss.cool/categories/git/" term="git" label="git"/></entry><entry><title type="text">高斯模糊</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E9%AB%98%E6%96%AF%E6%A8%A1%E7%B3%8A.html"/><id>http://blog.wss.cool/%E9%AB%98%E6%96%AF%E6%A8%A1%E7%B3%8A.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-08-19T12:12:31+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">像iPhone一样的毛玻璃效果，让背景里的东西是模糊的。 1 2 3 .x { backdrop-filter: saturate(180%) blur(2px); }</summary><content type="html">&lt;p>像iPhone一样的毛玻璃效果，让背景里的东西是模糊的。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">x&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">backdrop-filter&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">saturate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">180&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nb">blur&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="http://blog.wss.cool/categories/css/" term="CSS" label="CSS"/></entry><entry><title type="text">live-template</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/live-template.html"/><id>http://blog.wss.cool/live-template.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-08-19T10:23:09+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">live-template(code snippet) 就是输入abc后，编辑器提示出一个菜单，选择后可以输入一段代码</summary><content type="html">&lt;p>&lt;a href="https://blog.jetbrains.com/webstorm/2018/01/using-and-creating-code-snippets/">官网文档&lt;/a>&lt;/p>
&lt;p>这个功能在 webstorm 中叫做 live template 。就是将一段代码变成模版，就像打出 &lt;code>log&lt;/code> 就会出现下来菜单提示 &lt;code>console.log&lt;/code> 一样。 live template 可以实现复杂一点的事情，比如在模版内部定义变量，可以在初始时快速编辑它们。&lt;/p>
&lt;ol>
&lt;li>首先准备好一段代码，下面是创建一个 React 组件，我们要把它变成一个模版，以后可以快速的创建组件。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">Keyword&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>将代码全选后，打开 actions 面板&lt;sup id="fnref:1">&lt;a href="http://blog.wss.cool/live-template.html#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>，输入 &lt;code>save as live template&lt;/code> ，就可以打开一个操作面板了。
&lt;img src="https://hugo-1256216240.cos.ap-chengdu.myqcloud.com/20201109221701_3ea50a1759e3609e284c85ec2bd99894.png" alt="20201109221701_3ea50a1759e3609e284c85ec2bd99894.png" title="save as live template">&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;span class="shortcodes_number">1&lt;/span> 在 user 目录下出现了一个新的条目，它就是刚刚那段代码&lt;/li>
&lt;li>&lt;span class="shortcodes_number">2&lt;/span> 唤醒模板的关键词，比如 &lt;code>log&lt;/code>&lt;/li>
&lt;li>&lt;span class="shortcodes_number">3&lt;/span> 可以在模板中设置变量。在代码中定义变量，在按钮中给变量设置值，比如文件名、不带扩展名的文件名等等。&lt;/li>
&lt;li>&lt;span class="shortcodes_number">4&lt;/span> 多个变量之间可以用 &lt;code>tab&lt;/code> 快速切换光标到下一个， &lt;code>$END$&lt;/code> 代表最后一个&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>点击 ok 保存设置&lt;/li>
&lt;li>尝试一下吧，可以把刚才的代码删掉，输入 &lt;code>imfc&lt;/code> 看看效果。&lt;/li>
&lt;/ol>
&lt;h2 id="例子">例子&lt;/h2>
&lt;p>打开设置，选择Editor &amp;gt; Live Templates，点右侧 + ，选 1&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="kr">const&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">$NAME$&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">set$SETNAME$&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">useState&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">$END$&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://hugo-1256216240.cos.ap-chengdu.myqcloud.com/20210509210549_8d772096ee68ed7f6805b3559bb76c95.png" alt="20210509210549_8d772096ee68ed7f6805b3559bb76c95.png">&lt;/p>
&lt;p>变量间可以互相引用，可以通过表达式进行一些自动变化，如果通过表达式计算出了值，还可以跳过用户输入。&lt;/p>
&lt;h2 id="变量">变量&lt;/h2>
&lt;p>camelCase 将所有字母变为驼峰，会忽略掉其中的 - _ 等符号，只保留字母&lt;/p>
&lt;p>fileNameWithoutExtension 取文件名，且不带扩展名&lt;/p>
&lt;p>capitalize 将首字母大写&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>有两种方法：a. mac 快捷键：&lt;code>shift+cmd+a&lt;/code> （可能与系统的快捷键冲突，需要修改一下系统快捷键）；b. 可以通过连按（2次） &lt;code>shift&lt;/code> 呼出搜索面板，在切换到 action 标签。 &lt;a href="http://blog.wss.cool/live-template.html#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></content><category scheme="http://blog.wss.cool/categories/ide/" term="ide" label="ide"/><category scheme="http://blog.wss.cool/categories/webstorm/" term="WebStorm" label="WebStorm"/><category scheme="http://blog.wss.cool/tags/webstorm/" term="webstorm" label="webstorm"/></entry><entry><title type="text">React与Mobx的MVP和单元测试</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/react%E4%B8%8Emobx%E7%9A%84mvp%E5%92%8C%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95.html"/><id>http://blog.wss.cool/react%E4%B8%8Emobx%E7%9A%84mvp%E5%92%8C%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-08-14T09:35:25+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">摘要，显示在meta的description中</summary><content type="html">&lt;p>我比较熟悉Redux，所以以Redux与Mobx作为类比我会比较容易理解。&lt;/p>
&lt;p>redux会有一个store与react组件配合。&lt;/p>
&lt;p>store中定义变量、状态，写修改变量的reducer及相应的action。&lt;/p>
&lt;p>react组件中调用变量，使用dispatch调用action修改变量，完成单向数据流。&lt;/p>
&lt;p>reducer有两种写法——是否包含业务逻辑，这里选择不包含业务逻辑，就只是修改数据。业务逻辑全部放在react中。&lt;/p>
&lt;p>以上是一个普通的redux+react的用法。&lt;/p>
&lt;p>把它改为MVP模式的话，其实只是把业务逻辑和组件状态都从react组件中抽离出来，放在一个Presenter中。让react组件只接受数据和调用方法。&lt;/p>
&lt;p>redux可以换成mobx。&lt;/p>
&lt;p>在mobx的store中，它可以作为MVP中的M。还是声明变量、定义action，作用与redux一样。&lt;/p>
&lt;h2 id="声明变量">声明变量&lt;/h2>
&lt;p>如果使用observable声明的话，&lt;/p></content><category scheme="http://blog.wss.cool/categories/react/" term="React" label="React"/></entry><entry><title type="text">WebStorm常用设置</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/webstorm.html"/><id>http://blog.wss.cool/webstorm.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-08-13T09:39:16+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">编辑器常用的功能，vscode与WebStorm的配置和快捷键</summary><content type="html">&lt;h2 id="常用快捷操作">常用快捷操作&lt;/h2>
&lt;p>光标回到之前的位置：菜单是navigate&amp;gt;(back+forward)&lt;/p>
&lt;ul>
&lt;li>mac：&lt;code>ctrl -&lt;/code> 和 &lt;code>ctrl shift -&lt;/code>&lt;/li>
&lt;li>windows：&lt;code>ctrl alt 左/右&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>折叠代码：菜单是code&amp;gt;folding&lt;/p>
&lt;ul>
&lt;li>折叠：&lt;code>ctrl -&lt;/code>,&lt;code>ctrl shift -&lt;/code>&lt;/li>
&lt;li>展开：&lt;code>ctrl +&lt;/code>,&lt;code>ctrl shift +&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="常用设置">常用设置&lt;/h2>
&lt;ol>
&lt;li>自动保存的开关&lt;/li>
&lt;li>修改文件有*标记&lt;/li>
&lt;li>修改的文件的目录和文件的颜色都提示&lt;/li>
&lt;li>Windows系统中使用\n换行符&lt;/li>
&lt;li>切换terminal&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>修改默认terminal&lt;/strong>&lt;/p>
&lt;p>Ctrl+Alt+S 打开设置，选择 tools 目录，选择 terminal&lt;/p>
&lt;p>&lt;strong>取消自动保存&lt;/strong>&lt;/p>
&lt;p>关闭自动保存功能&lt;/p>
&lt;p>Settings for New Projects（Ctrl+Alt+S）→ Appearance &amp;amp; Behavior，定位到 Synchronization 一栏，取消勾选以下三项：&lt;/p>
&lt;ul>
&lt;li>Save files on frame deactivation&lt;/li>
&lt;li>Save files automatically if application is idle for [15] sec&lt;/li>
&lt;li>Use &amp;quot;safe write&amp;quot; (save changes to a temporary file first)&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>打开修改文件后的星号提示&lt;/strong>&lt;/p>
&lt;p>Settings for New Projects（Ctrl+Alt+S）→ Editor → General → Editor Tabs，定位到 Appearance 一栏，勾选 Mark modified (*)。&lt;/p>
&lt;p>&lt;strong>修改编译器字体&lt;/strong>&lt;/p>
&lt;p>Settings for New Projects（Ctrl+Alt+S）→ Editor → Font，Font 选择为 Fira Code，Size 设置为 12。&lt;/p>
&lt;p>&lt;strong>设置文件换行符&lt;/strong>&lt;/p>
&lt;p>Settings for New Projects（Ctrl+Alt+S）→ Editor → Code Style，定位到 General 标签，Line separator 选择为 Unix and OS X (\n)。&lt;/p>
&lt;p>&lt;strong>版本控制文件发生改变时上级目录也会有相应提示&lt;/strong>&lt;/p>
&lt;p>Settings for New Projects（Ctrl+Alt+S）→ Version Control，勾选 Show directories with changed descendants。&lt;/p>
&lt;h2 id="常用快捷键">常用快捷键&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th align="left">操作&lt;/th>
&lt;th align="left">WebStorm&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td align="left">重复选中的内容或当前行&lt;/td>
&lt;td align="left">Ctrl+D&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">删除行&lt;/td>
&lt;td align="left">Ctrl+Y&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">格式化代码&lt;/td>
&lt;td align="left">Ctrl+Alt+L&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">按prettier格式化&lt;/td>
&lt;td align="left">Ctrl+Shift+Alt+P&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">重命名&lt;/td>
&lt;td align="left">Shift+F6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">撤销或反撤销修改&lt;/td>
&lt;td align="left">Ctrl+Z 或 Ctr+Shift+Z&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">回到之前的位置&lt;/td>
&lt;td align="left">Ctrl+Alt+左\右&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">光标移到内容的开始或结束标签处&lt;/td>
&lt;td align="left">ctrl+[ 或 ctrl+]&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">打开最近操作过的文件&lt;/td>
&lt;td align="left">Ctrl+E&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">搜索文件&lt;/td>
&lt;td align="left">Ctrl+Shift+N&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">在所有文件中列出代码使用情况&lt;/td>
&lt;td align="left">Alt+F7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">在当前文件中高亮代码使用情况&lt;/td>
&lt;td align="left">Ctrl+Shift+F7&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="配置">配置&lt;/h2>
&lt;p>&lt;strong>恢复默认配置&lt;/strong>&lt;/p>
&lt;p>只要删除 C:\Users\wxj.WebStorm2018.3\config 目录，即可恢复默认配置。&lt;/p>
&lt;p>&lt;strong>修改默认terminal&lt;/strong>&lt;/p>
&lt;p>Ctrl+Alt+S 打开设置，选择 tools 目录，选择 terminal&lt;/p>
&lt;p>&lt;strong>显示内存指示器&lt;/strong>&lt;/p>
&lt;p>Settings for New Projects（Ctrl+Alt+S）→ Appearance &amp;amp; Behavior → Appearance，定位到 Window Options 一栏，勾选 Show memory indicator。&lt;/p>
&lt;p>&lt;strong>取消自动打开项目&lt;/strong>&lt;/p>
&lt;p>Settings for New Projects（Ctrl+Alt+S）→ Appearance &amp;amp; Behavior → System Settings，定位到 Startup/Shutdown 一栏，取消勾选 Reopen last project on startup。&lt;/p>
&lt;p>&lt;strong>取消自动保存&lt;/strong>&lt;/p>
&lt;p>关闭自动保存功能&lt;/p>
&lt;p>Settings for New Projects（Ctrl+Alt+S）→ Appearance &amp;amp; Behavior，定位到 Synchronization 一栏，取消勾选以下三项：&lt;/p>
&lt;ul>
&lt;li>Save files on frame deactivation&lt;/li>
&lt;li>Save files automatically if application is idle for [15] sec&lt;/li>
&lt;li>Use &amp;quot;safe write&amp;quot; (save changes to a temporary file first)&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>打开修改文件后的星号提示&lt;/strong>&lt;/p>
&lt;p>Settings for New Projects（Ctrl+Alt+S）→ Editor → General → Editor Tabs，定位到 Appearance 一栏，勾选 Mark modified (*)。&lt;/p>
&lt;p>&lt;strong>关闭自动更新检查&lt;/strong>&lt;/p>
&lt;p>Settings for New Projects（Ctrl+Alt+S）→ System Settings → Updates，取消勾选 Automatically check updates for [Stable Releases]。&lt;/p>
&lt;p>&lt;strong>启用软换行&lt;/strong>&lt;/p>
&lt;p>Settings for New Projects（Ctrl+Alt+S）→ Editor → General，定位到 Soft Wraps 一栏，勾选 Use soft wraps in editor。&lt;/p>
&lt;p>Settings for New Projects（Ctrl+Alt+S）→ Editor → General → Console，勾选 Use soft wraps in console。&lt;/p>
&lt;p>&lt;strong>修改编译器字体&lt;/strong>&lt;/p>
&lt;p>Settings for New Projects（Ctrl+Alt+S）→ Editor → Font，Font 选择为 Fira Code，Size 设置为 12。&lt;/p>
&lt;p>&lt;strong>设置文件换行符&lt;/strong>&lt;/p>
&lt;p>Settings for New Projects（Ctrl+Alt+S）→ Editor → Code Style，定位到 General 标签，Line separator 选择为 Unix and OS X (\n)。&lt;/p>
&lt;p>&lt;strong>设置工程和文件 UTF-8 编码&lt;/strong>&lt;/p>
&lt;p>Settings for New Projects（Ctrl+Alt+S）→ Editor → File Encodings，Global Encoding 选择为 UTF-8，Project Encoding 为 UTF-8。&lt;/p>
&lt;p>定位到 Properties Files (*.properties) 一栏，Default encoding for properties files 选择为 UTF-8，但不要勾选 Transparent native-to-ascii conversion。&lt;/p>
&lt;p>定位到 BOM for new UTF-8 files 一栏，Create UTF-8 files 选择为 with NO BOM。&lt;/p>
&lt;p>&lt;strong>设置控制台 UTF-8 编码&lt;/strong>&lt;/p>
&lt;p>在 D:\Program Files\JetBrains\WebStorm 2018.3.5\bin[webstorm|webstorm64].exe.vmoptions 文件末尾添加 -Dfile.encoding=UTF-8。&lt;/p>
&lt;p>&lt;strong>版本控制文件发生改变时上级目录也会有相应提示&lt;/strong>&lt;/p>
&lt;p>Settings for New Projects（Ctrl+Alt+S）→ Version Control，勾选 Show directories with changed descendants。&lt;/p>
&lt;p>&lt;strong>配置 GitHub 账户&lt;/strong>&lt;/p>
&lt;p>Settings for New Projects（Ctrl+Alt+S）→ Version Control → GitHub，点击 Add account (Alt+Insert)，在弹出的 Login In to Github 中分别填写 GitHub 账户名和密码，然后点击 Log In。最后勾选 Clone git repositories using ssh。&lt;/p>
&lt;p>&lt;strong>配置 Git&lt;/strong>&lt;/p>
&lt;p>Settings for New Projects（Ctrl+Alt+S）→ Version Control → Git，Path to Git executable 选择 D:\Program Files\Git\bin\git.exe。&lt;/p>
&lt;h2 id="快捷键">快捷键&lt;/h2>
&lt;p>以下所展示的快捷键是默认时的选择，即 Settings for New Projects（Ctrl+Alt+S）→ Keymap 中，选择的是 Default。&lt;/p>
&lt;h3 id="编辑代码">编辑代码&lt;/h3>
&lt;ul>
&lt;li>同步磁盘文件：Ctrl+Alt+Y&lt;/li>
&lt;li>快速生成通用方法：Alt+Insert&lt;/li>
&lt;li>注释和取消注释：Ctrl+/ 和 Ctrl+Shift+/&lt;/li>
&lt;li>快速修复问题：Alt+Enter&lt;/li>
&lt;/ul>
&lt;h3 id="阅读代码">阅读代码&lt;/h3>
&lt;ul>
&lt;li>隐藏所有工具窗口：Ctrl+Shift+F12&lt;/li>
&lt;li>显示/隐藏工程目录窗口：Alt+1&lt;/li>
&lt;li>移动窗口分割线：Ctrl+Shift+左箭头 或 Ctrl+Shift+左箭头&lt;/li>
&lt;li>在工程目录中定位当前文件的位置：Alt+F1&lt;/li>
&lt;li>显示说明文档：Ctrl+Q&lt;/li>
&lt;li>折叠代码块：Ctrl+Shift+.&lt;/li>
&lt;li>显示折叠后的代码块：Ctrl++&lt;/li>
&lt;li>查看代码的定义：Ctrl+Shift+I&lt;/li>
&lt;li>退出：Esc&lt;/li>
&lt;li>导航至下一高亮处：F3&lt;/li>
&lt;li>导航至上一高亮处：Shift+F3&lt;/li>
&lt;li>取消高亮：Esc&lt;/li>
&lt;li>跳至代码声明处：Ctrl+B 或 Ctrl+鼠标左键&lt;/li>
&lt;li>跳至代码实现处：Ctrl+Alt+B 或 Ctrl+Alt+鼠标左键&lt;/li>
&lt;li>跳至父类代码：Ctrl+U&lt;/li>
&lt;li>导航文件中的各成员：Ctrl+F12&lt;/li>
&lt;li>打开 UML 类图：Ctrl+Alt+U 或 Ctrl+Alt+Shift+U&lt;/li>
&lt;/ul>
&lt;h3 id="打开文件">打开文件&lt;/h3>
&lt;ul>
&lt;li>根据 Classes 打开文件：Ctrl+N&lt;/li>
&lt;li>根据文件名打开所有文件或定位目录：Ctrl+Shift+N&lt;/li>
&lt;li>根据 Symbols 打开所有文件：Ctrl+Shift+Alt+N&lt;/li>
&lt;/ul>
&lt;h3 id="打开配置">打开配置&lt;/h3>
&lt;ul>
&lt;li>打开配置：Ctrl+Alt+S&lt;/li>
&lt;li>搜索所有可用的操作（Actions）：Ctrl+Shift+A&lt;/li>
&lt;/ul></content><category scheme="http://blog.wss.cool/categories/ide/" term="ide" label="ide"/><category scheme="http://blog.wss.cool/categories/webstorm/" term="WebStorm" label="WebStorm"/><category scheme="http://blog.wss.cool/tags/webstorm/" term="webstorm" label="webstorm"/></entry><entry><title type="text">笔记</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E7%AC%94%E8%AE%B0/"/><id>http://blog.wss.cool/posts/%E7%AC%94%E8%AE%B0/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-08-12T10:59:42+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">mobx的observable变成非observ的变量 以@observable声明的……</summary><content type="html">&lt;h2 id="mobx的observable变成非observ的变量">mobx的observable变成非observ的变量&lt;/h2>
&lt;p>以@observable声明的变量，可以会变成普通的对象，而失去响应能力，可能是应为直接复制的操作导致的。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="kd">@observable&lt;/span>
&lt;span class="kr">private&lt;/span> &lt;span class="nx">rowData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span> &lt;span class="c1">// 这样rowData是不是observable的？
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="kd">@observable&lt;/span>
&lt;span class="kr">private&lt;/span> &lt;span class="nx">rowData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">observable&lt;/span>&lt;span class="p">([]);&lt;/span> &lt;span class="c1">// 需要这样赋值才行吗？
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>indicatorMap需要使用observable.ref声明才能监听到。用observable声明并用replace替换的话就不能监听到了.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">reaction&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">indicatorMap&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nx">indicatorMap&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">),&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="8月13日review">8月13日review&lt;/h2>
&lt;ol>
&lt;li>cellRendererFramework改成cellRender&lt;/li>
&lt;/ol>
&lt;p>改了cellRender以后不显示了。&lt;/p>
&lt;ol start="2">
&lt;li>没有AgSelect这个组件&lt;/li>
&lt;/ol>
&lt;p>MetadataHelper.resolveFullTitle()&lt;/p>
&lt;h2 id="列表中实现编码列跳转到编辑">列表中实现编码列跳转到编辑&lt;/h2>
&lt;h2 id="实现新建页面保存后刷新列表">实现新建页面保存后刷新列表&lt;/h2>
&lt;ol>
&lt;li>在定义路由时，将props传给presenter
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="p">..&lt;/span>&lt;span class="nx">renderBizForm&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">entityName&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">EN_Customer&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">title&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;客户&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// hashPrefix: &amp;#39;/customer/form&amp;#39;,
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">createPresenter&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">queryParams&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{})&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">CustomerFormPresenter&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">importCustomerForm&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">CustomerFormPresenter&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="p">...&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">}),&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>easyBizForm在constructor中将props赋值给_options，其中包含 passParams ，跳转到create界面时，会存一个onSuccess在路由中，通过passParams姐可以拿到这个onSuccess了。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="错误提示信息">错误提示信息&lt;/h2>
&lt;p>什么情况会出现唯一性错误？&lt;/p>
&lt;p>哪些错误需要解析？&lt;/p>
&lt;p>哪些错误是没有具体error信息，只有message的？&lt;/p>
&lt;h2 id="单元测试覆盖率">单元测试覆盖率&lt;/h2>
&lt;p>jest apps/link/src/main/screens/projects/budget --coverage&lt;/p>
&lt;p>jest src/main/screens/projects/budget --coverage&lt;/p>
&lt;h2 id="refer是怎么渲染出来的怎么才能变成多选">refer是怎么渲染出来的，怎么才能变成多选？&lt;/h2>
&lt;p>在编制方案中，使用了MSTFormLayout和MSTFormElement来实现project的refer。MSTFormLayout中有DataField，它根据field.type确定project是refer，然后使用了ReferField组件又Refer组件。&lt;/p>
&lt;p>这个组件里根据metadata取到entity对应的参照方案。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">referConfig&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">metadata&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getReferConfig&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">entityName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">referName&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>参照方案内包含了是否为多选的配置 &lt;code>referConfig.multi&lt;/code> 。&lt;/p>
&lt;p>还可以通过参数，透传到Refer组件。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tsx" data-lang="tsx">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">MSTFormElement&lt;/span> &lt;span class="nx">path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;project&amp;#34;&lt;/span> &lt;span class="nx">isMulti&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>遇到问题：需要将project的初始值改为数组&lt;/strong>
在formCreated生命周期中，进行赋值操作&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">form&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;project&amp;#39;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[];&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="最佳实践1">最佳实践1&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">projectEligibles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">forEach&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">item&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">index&lt;/span>&lt;span class="p">)=&amp;gt;{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">presenterApi&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getEntityCRUD&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">deleteRowByRealIndex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;projectEligibles&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">index&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="nx">newProjectItems&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">forEach&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">item&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">presenterApi&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getEntityCRUD&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">appendRow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;projectEligibles&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getProjectAttr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Project&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;项目&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">item&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/%E5%85%B6%E4%BB%96/" term="其他" label="其他"/></entry><entry><title type="text">Go基础三：方法和接口</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/learn-go-3.html"/><id>http://blog.wss.cool/learn-go-3.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-07-06T12:27:59+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">方法 定义 Go中没有类，不过可以为结构体类型定义方法。方法就是一类带有特殊「接收者」参……</summary><content type="html">&lt;h2 id="方法">方法&lt;/h2>
&lt;ol>
&lt;li>定义&lt;/li>
&lt;/ol>
&lt;p>Go中没有类，不过可以为结构体类型定义方法。方法就是一类带有特殊「接收者」参数的函数。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">type&lt;/span> &lt;span class="nx">Vertex&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">Y&lt;/span> &lt;span class="kt">float64&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">v&lt;/span> &lt;span class="nx">Vertex&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Abs&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="kt">float64&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sqrt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">X&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">X&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Y&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Y&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">v&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">Vertex&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Abs&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>方法接收者，在func与方法名之间。这里是&lt;code>(v Vertex)&lt;/code>。相当于为&lt;code>Vertex&lt;/code>类型定义了方法&lt;code>Abs&lt;/code>&lt;/p>
&lt;ol start="2">
&lt;li>非结构体类型的方法&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">type&lt;/span> &lt;span class="nx">MyFloat&lt;/span> &lt;span class="kt">float64&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span> &lt;span class="nx">MyFloat&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Abs&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="kt">float64&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">f&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">float64&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">float64&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">f&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">MyFloat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Sqrt2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Abs&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接收者的类型定义和方法声明必须在同一包内；不能为内建类型声明方法。&lt;/p>
&lt;ol start="3">
&lt;li>指针接收者&lt;/li>
&lt;/ol>
&lt;p>前面定义的方法，是「值接收者」&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">v&lt;/span> &lt;span class="nx">Vertex&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Abs&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="kt">float64&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span> &lt;span class="nx">MyFloat&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Abs&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="kt">float64&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>还有一种「指针接收者」，多了一个「*」星号&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">v&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Vertex&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Scale&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span> &lt;span class="kt">float64&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">X&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">X&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">f&lt;/span>
&lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Y&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Y&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">f&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>「指针接收者」可以修改指针，「值接收者」则不能修改。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">type&lt;/span> &lt;span class="nx">Vertex&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">Y&lt;/span> &lt;span class="kt">float64&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">v&lt;/span> &lt;span class="nx">Vertex&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Abs&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="kt">float64&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">X&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Y&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 可以对v进行修改。如果去掉「*」则不会修改。
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">v&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Vertex&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Scale&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span> &lt;span class="kt">float64&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">X&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">X&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">f&lt;/span>
&lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Y&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Y&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">f&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">v&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">Vertex&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Scale&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Abs&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>指针与函数
函数定义的参数如果是指针，那么传的参数就要求是指针，如果传值就会报错。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="nf">ScaleFunc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Vertex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">f&lt;/span> &lt;span class="kt">float64&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">X&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">X&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">f&lt;/span>
&lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Y&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Y&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">f&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">v&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">Vertex&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nf">ScaleFunc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 编译错误！
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nf">ScaleFunc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// OK
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="5">
&lt;li>方法与指针重定向
以指针为接收者的方法被调用时，接收者既能为值又能为指针：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">var&lt;/span> &lt;span class="nx">v&lt;/span> &lt;span class="nx">Vertex&lt;/span>
&lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Scale&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// OK
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">p&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">v&lt;/span>
&lt;span class="nx">p&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Scale&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// OK
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>反过来，接受一个值作为参数的函数必须接受一个指定类型的值&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">var&lt;/span> &lt;span class="nx">v&lt;/span> &lt;span class="nx">Vertex&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">AbsFunc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1">// OK
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">AbsFunc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1">// 编译错误！
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>而以值为接收者的方法被调用时，接收者既能为值又能为指针。&lt;/p>
&lt;p>使用指针接收者能避免在调用时复制值，尤其是大型构造体，会更加高效。&lt;/p>
&lt;p>一般不混用两者。&lt;/p>
&lt;h2 id="接口">接口&lt;/h2>
&lt;ol>
&lt;li>接口类型是由一组方法签名定义的结合。&lt;/li>
&lt;/ol>
&lt;p>接口类型的变量可以保存任意实现了这些方法的值。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="c1">// 定义接口
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">Abser&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">Abs&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="kt">float64&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 定义结构体，并实现接口
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">MyFloat&lt;/span> &lt;span class="kt">float64&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span> &lt;span class="nx">MyFloat&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Abs&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="kt">float64&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">f&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">float64&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">float64&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 定义结构体，并实现结构
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">Vertex&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">Y&lt;/span> &lt;span class="kt">float64&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 指针的方法
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">v&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Vertex&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Abs&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="kt">float64&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sqrt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">X&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">X&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Y&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Y&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="nx">Abser&lt;/span>
&lt;span class="nx">f&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">MyFloat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Sqrt2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">v&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">Vertex&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">a&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">f&lt;/span> &lt;span class="c1">// a MyFloat 实现了 Abser
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">v&lt;/span> &lt;span class="c1">// a *Vertex 实现了 Abser
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="c1">// 下面一行，v 是一个 Vertex（而不是 *Vertex）
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 所以没有实现 Abser。
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">v&lt;/span>
&lt;span class="o">&amp;gt;=&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Abs&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>接口与隐式实现&lt;/li>
&lt;/ol>
&lt;p>类型通过实现接口的所有方法实现接口，无需专门的声明。&lt;/p>
&lt;p>隐式接口从接口的实现中解藕了定义，这样接口的实现可以出现在任何包中，无需提前准备。&lt;/p>
&lt;ol start="3">
&lt;li>接口值&lt;/li>
&lt;/ol>
&lt;p>接口也是值。它们可以像其它值一样传递。接口值可以用作函数的参数或返回值。凡是这个接口的类型都可以使用这个方法或作为返回值。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">type&lt;/span> &lt;span class="nx">I&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">M&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">describe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span> &lt;span class="nx">I&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;(%v, %T)\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="nx">I&lt;/span>
&lt;span class="nx">i&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">T&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="s">&amp;#34;Hello&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nf">describe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">M&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="nx">i&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nf">F&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Pi&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">describe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">M&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/golang/" term="golang" label="golang"/></entry><entry><title type="text">Go基础二：流程控制语句</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/learn-go-2.html"/><id>http://blog.wss.cool/learn-go-2.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-07-06T12:27:59+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">循环 Go只有一种循环语句：for 1 2 3 4 5 6 7 func main() { sum := 0 for i := 0; i &amp;lt; 10; i++ { sum += i }……</summary><content type="html">&lt;h2 id="循环">循环&lt;/h2>
&lt;p>Go只有一种循环语句：for&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">sum&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">sum&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="nx">i&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">sum&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/golang/" term="golang" label="golang"/></entry><entry><title type="text">链表</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E9%93%BE%E8%A1%A8.html"/><id>http://blog.wss.cool/%E9%93%BE%E8%A1%A8.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-06-30T09:27:18+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">数组 数组的缺点：数组中添加或删除元素需要将其他元素向前或向后移动， 除了对数据的随机访……</summary><content type="html">&lt;h2 id="数组">数组&lt;/h2>
&lt;p>数组的缺点：数组中添加或删除元素需要将其他元素向前或向后移动，&lt;/p>
&lt;p>除了对数据的随机访问，链表几乎可以用在任何可以使用一维数组的情况中。&lt;/p>
&lt;h2 id="链表">链表&lt;/h2>
&lt;p>链表是由一组“节点”组成的集合。每个节点都使用一个对象的引用指向它的后继。指向另一个节点的引用叫做“链”。数组元素靠它们的位置进行引用，链表元素则是靠互相之间的关系进行引用。&lt;/p>
&lt;h2 id="链表对象">链表对象&lt;/h2>
&lt;p>节点类：元素内容和后继的引用&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">function&lt;/span> &lt;span class="nx">Node&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">element&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">element&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">element&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>链表类：表投和一些操作方法&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">function&lt;/span> &lt;span class="nx">LinkedList&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">head&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Node&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;head&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">find&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">find&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">insert&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">insert&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">remove&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">remove&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">display&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">display&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="插入元素">插入元素&lt;/h2>
&lt;p>向一个已知&lt;/p>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>数据结构与算法JavaScript描述.[美]麦克米伦.[译者]王群锋，杜欢.人民邮电出版社.2014-08&lt;/li>
&lt;/ol></content><category scheme="http://blog.wss.cool/categories/%E7%AE%97%E6%B3%95/" term="算法" label="算法"/><category scheme="http://blog.wss.cool/tags/%E7%AE%97%E6%B3%95/" term="算法" label="算法"/><category scheme="http://blog.wss.cool/tags/%E9%93%BE%E8%A1%A8/" term="链表" label="链表"/></entry><entry><title type="text">Go基础一：包、变量和函数</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/learn-go-1.html"/><id>http://blog.wss.cool/learn-go-1.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-06-29T10:06:01+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">包 每个Go程序都由包构成，程序从main方法开始执行。 通过下面这段代码来学习「包」相……</summary><content type="html">&lt;h2 id="包">包&lt;/h2>
&lt;p>每个Go程序都由包构成，程序从main方法开始执行。&lt;/p>
&lt;p>通过下面这段代码来学习「包」相关的几个知识点。
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">#&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="err">#&lt;/span>
&lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;math/rand&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;math&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;My favorite number is&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rand&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Intn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="err">#&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="err">#&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">pi&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">#&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="err">#&lt;/span>
&lt;span class="p">}&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/p>
&lt;ul>
&lt;li>&lt;span class="shortcodes_number">1&lt;/span>程序导入了&lt;code>fmt&lt;/code> &lt;code>math/rand&lt;/code>两个包。&lt;/li>
&lt;li>&lt;span class="shortcodes_number">1&lt;/span>可以用圆括号进行“分组”导入，也可以分别导入。
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kn">import&lt;/span> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="s">&amp;#34;math&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>&lt;span class="shortcodes_number">2&lt;/span>程序中以路径中的最后一段为包名。&lt;/li>
&lt;li>&lt;span class="shortcodes_number">3&lt;/span>以大写字母开头的变量是导出的，此处用小写的&lt;code>math.pi&lt;/code>就不会导出，会报错，需要改完大写的&lt;code>math.Pi&lt;/code>才能正常运行。&lt;/li>
&lt;/ul>
&lt;h2 id="函数">函数&lt;/h2>
&lt;ol>
&lt;li>函数可以没有参数或接收多个参数&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="nf">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">x&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">y&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">x&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">y&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>多个相同的类型可用省略写法&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="nf">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">y&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">x&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">y&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>可返回任意数量的返回值&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="nf">swap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">y&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">x&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>返回值可以被命名，它们被视为定义在函数的顶部&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="nf">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">sum&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">y&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">x&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">sum&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">4&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">9&lt;/span>
&lt;span class="nx">y&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">sum&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nx">x&lt;/span>
&lt;span class="k">return&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>无参数的 return 返回已命名的返回值&lt;/li>
&lt;li>无参数的 return 应该仅在这样短小的函数中使用，否则会影响可读性&lt;/li>
&lt;/ul>
&lt;h2 id="变量">变量&lt;/h2>
&lt;ol>
&lt;li>var 用于声明变量列表，类型在最后。可出现在包和函数级别&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">python&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">java&lt;/span> &lt;span class="kt">bool&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">python&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">java&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>声明可以包含初始值，每个变量对应一个。有初始值的话，可以省略类型。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">var&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">j&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">java&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">python&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;no!&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>在..函数中..，且..类型明确..，则可以使用..简洁赋值..语句&lt;code>:=&lt;/code>代替&lt;code>var&lt;/code>。在函数外，每个语句都必须以关键字开始（var，func等），因此&lt;code>:=&lt;/code>不能在函数外使用。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">var&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">j&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;span class="nx">k&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">3&lt;/span>
&lt;span class="nx">c&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">python&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">java&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;no!&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>基本类型&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kt">bool&lt;/span>
&lt;span class="kt">string&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="kt">int8&lt;/span> &lt;span class="kt">int16&lt;/span> &lt;span class="kt">int32&lt;/span> &lt;span class="kt">int64&lt;/span>
&lt;span class="kt">uint&lt;/span> &lt;span class="kt">uint8&lt;/span> &lt;span class="kt">uint16&lt;/span> &lt;span class="kt">uint32&lt;/span> &lt;span class="kt">uint64&lt;/span> &lt;span class="kt">uintptr&lt;/span>
&lt;span class="kt">byte&lt;/span> &lt;span class="c1">// uint8 的别名
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="kt">rune&lt;/span> &lt;span class="c1">// int32 的别名
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 表示一个 Unicode 码点
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="kt">float32&lt;/span> &lt;span class="kt">float64&lt;/span>
&lt;span class="kt">complex64&lt;/span> &lt;span class="kt">complex128&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>int&lt;/code>, &lt;code>uint&lt;/code> 和 &lt;code>uintptr&lt;/code> 在 32 位系统上通常为 32 位宽，在 64 位系统上则为 64 位宽。 当你需要一个整数值时应使用 &lt;code>int&lt;/code> 类型，除非你有特殊的理由使用固定大小或无符号的整数类型。&lt;/p>
&lt;ol start="5">
&lt;li>没有明确初始值的变量声明会被赋值为它们的「零值」。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">var&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="c1">// 数值类型为 0
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">f&lt;/span> &lt;span class="kt">float64&lt;/span> &lt;span class="c1">// 数值类型为 0
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">b&lt;/span> &lt;span class="kt">bool&lt;/span> &lt;span class="c1">// 布尔类型为 false
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">s&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="c1">// 字符串为 &amp;#34;&amp;#34;（空字符串）
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="6">
&lt;li>类型转换：表达式 T(v) 将值 v 转换为类型 T&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">var&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">42&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">f&lt;/span> &lt;span class="kt">float64&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">float64&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">u&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">uint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="7">
&lt;li>类型推断：声明变量但未指定类型时，类型由右值推导得出。
&lt;ul>
&lt;li>当右值声明了类型时，新变量的类型与其相同&lt;/li>
&lt;li>当右值包含未指定类型的数值常量时，由其精度决定类型&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="nx">i&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">42&lt;/span> &lt;span class="c1">// int
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">f&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mf">3.142&lt;/span> &lt;span class="c1">// float64
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">g&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mf">0.867&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="m">0.5i&lt;/span> &lt;span class="c1">// complex128
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;g is of type %T\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">g&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="8">
&lt;li>常量使用 const 声明，语法与声明变量类似。常量不能用 := 语法声明&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">const&lt;/span> &lt;span class="nx">World&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;世界&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="9">
&lt;li>数值常量：高精度的&lt;strong>值&lt;/strong>，未指定类型的常量由上下文决定其类型&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">const&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="c1">// 将 1 左移 100 位来创建一个非常大的数字
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 即这个数的二进制是 1 后面跟着 100 个 0
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">Big&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">100&lt;/span>
&lt;span class="c1">// 再往右移 99 位，即 Small = 1 &amp;lt;&amp;lt; 1，或者说 Small = 2
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">Small&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">Big&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="mi">99&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">needInt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">x&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">x&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">10&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">needFloat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">x&lt;/span> &lt;span class="kt">float64&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">float64&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">x&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.1&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">needInt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">Small&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1">// Small可以作为int
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">needFloat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">Small&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1">// Small可以作为float64
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">needFloat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">Big&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/golang/" term="golang" label="golang"/></entry><entry><title type="text">React-生命周期</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/react-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html"/><id>http://blog.wss.cool/react-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-06-19T09:41:43+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">React生命周期</summary><content type="html">&lt;h2 id="挂载">挂载&lt;/h2>
&lt;ul>
&lt;li>constructor&lt;/li>
&lt;li>getDerviedStateFromProps&lt;/li>
&lt;li>render&lt;/li>
&lt;li>didMount&lt;/li>
&lt;/ul>
&lt;p>willMount已过时&lt;/p>
&lt;h2 id="更新">更新&lt;/h2>
&lt;ul>
&lt;li>getDerviedStateFromProps&lt;/li>
&lt;li>shouldComponentUpdate(nextProps, nextState)&lt;/li>
&lt;li>render&lt;/li>
&lt;li>getSnapshotBeforeUpdate(prevProps, prevState)&lt;/li>
&lt;li>componentDidUpdate(prevProps, prevState, snapshot)&lt;/li>
&lt;/ul>
&lt;p>willUpdate和willReceiveProps已过时&lt;/p>
&lt;p>getSnapshotBeforeUpdate可以在更新前，从DOM中获取一些信息，比如滚动位置。&lt;/p>
&lt;h2 id="卸载">卸载&lt;/h2>
&lt;ul>
&lt;li>willUnmount&lt;/li>
&lt;/ul>
&lt;h2 id="异常">异常&lt;/h2>
&lt;ul>
&lt;li>getDerviedStateFromError&lt;/li>
&lt;li>didCatch&lt;/li>
&lt;/ul>
&lt;h2 id="setstate">setState&lt;/h2>
&lt;p>setState在合成事件或者生命周期中调用时，会将修改放入队列，在协调和更新之后进行更新state&lt;/p></content><category scheme="http://blog.wss.cool/categories/react/" term="React" label="React"/></entry><entry><title type="text">TLS握手过程</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E5%AD%A6%E4%B9%A0tls.html"/><id>http://blog.wss.cool/%E5%AD%A6%E4%B9%A0tls.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-06-16T14:41:03+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">TLS的握手</summary><content type="html">&lt;h2 id="什么是tls">什么是TLS&lt;/h2>
&lt;p>TLS是IETF对SSL进行标准化时，将其改名为Transport Layer Security(传输层安全)。严格说，SSL与TLS指代的协议的版本号不同，TLS1.0是SSL3.0的升级版。&lt;/p>
&lt;h2 id="握手">握手&lt;/h2>
&lt;p>TLS的通信是通过对称加密进行的，也就是client与server使用同一个密钥进行加密和解密，那么这个密钥怎么从加密方传给解密方呢？如果直接从网络上传输，它就可能会被攻击者获取到，这样加密也就失去了意义。也就是说，发送密钥有被窃听的危险，但是不发送的话，接收方又不能解密。&lt;/p>
&lt;p>所以为了安全的将密钥发送给接收方&lt;/p>
&lt;p>首先会进行TCP的握手，即一次往返。然后开始TLS的握手。&lt;/p>
&lt;p>四个阶段：&lt;/p>
&lt;ol>
&lt;li>client hello&lt;/li>
&lt;li>server hello&lt;/li>
&lt;li>client finish&lt;/li>
&lt;li>server finish&lt;/li>
&lt;/ol>
&lt;p>主要做了两件事：确定协议版本和加密套件、生成加密密钥。TLS的握手主要由3个阶段来完成这两件事。&lt;/p>
&lt;p>第一件事比较简单，只需要client告诉server自己支持的协议的版本和支持的加密套件，然后server选择并通知client。就可以啦。这两个操作分别在握手的第一第二阶段完成。&lt;/p>
&lt;p>第二件事就没那么简单来。协议规定，生成一个加密密钥需要三个随机数，其中前两个随机数分别在第一阶段和第二阶段，由client和server分别生成并告诉对方。第三个随机数的交换要稍微复杂一点。&lt;/p>
&lt;ul>
&lt;li>首先client在第二阶段得到来server的证书，证书中包含来server的公钥。&lt;/li>
&lt;li>然后client会使用这个公钥对第三个随机数进行加密，然后将随机数的密文传给server。&lt;/li>
&lt;li>最后，server将密文解密，得到了第三个随机数。&lt;/li>
&lt;/ul>
&lt;p>这样，client和server两端就都有了这三个随机数，然后它们使用相同的算法生成一个密钥，用这个密钥来对数据进行对称加密，在将密文在网络中传输。&lt;/p>
&lt;p>为什么第三个随机数要这么麻烦呢？&lt;/p>
&lt;p>首先，client和server都会发送和接收数据，所以两边都要进行加密和解密。加密算法主要就两类：对称和非对称。非对称的性能差，所以就选择性能好的对称算法。而对称算法的密钥需要两端都知道才可以，因此使用非对称加密将密钥从一边发送给另一边。又为了保证随机性，就用三个随机数来生成密钥。&lt;/p>
&lt;p>&lt;strong>下面具体说一下这四个阶段都做了什么。&lt;/strong>&lt;/p>
&lt;p>第一步，client需要告诉server自己支持的版本号和加密套件，还要生成随机数2，用于计算加密密钥。client把这三个信息告诉来server。&lt;/p>
&lt;p>第二步，server在拿到这些信息后，它会选择一个版本号和一个加密套件。然后跟第一步一样，生成随机数2，也是用于计算加密密钥。在加上自己的证书，将这四项数据发回给client。&lt;/p>
&lt;p>第三步，client首先验证证书的有效性，若有效从中取出server的公钥。生成随机数3，使用公钥对其进行加密，并发送给server密文，并告诉server之后的消息开始加密了。还会将前面的握手信息的摘要进行加密后传给server，server收到后将其解密，用于验证协商的密钥的一致性。&lt;/p>
&lt;p>第四步，&lt;/p>
&lt;h3 id="client-hello">client hello&lt;/h3>
&lt;p>client告诉server：&lt;/p>
&lt;ol>
&lt;li>协议版本号&lt;/li>
&lt;li>随机数1&lt;/li>
&lt;li>支持的加密套件&lt;/li>
&lt;/ol>
&lt;h3 id="server-hello">server hello&lt;/h3>
&lt;p>server根据收到的信息&lt;/p>
&lt;ol>
&lt;li>确认版本号&lt;/li>
&lt;li>随机数2&lt;/li>
&lt;li>选择加密套件&lt;/li>
&lt;li>server证书&lt;/li>
&lt;/ol>
&lt;h3 id="client回应">client回应&lt;/h3>
&lt;p>首先验证证书，如果验证通过：&lt;/p>
&lt;ol>
&lt;li>从证书内取出server公钥&lt;/li>
&lt;li>随机数3，使用公钥加密&lt;/li>
&lt;li>client握手结束&lt;/li>
&lt;/ol>
&lt;h3 id="server回应">server回应&lt;/h3>
&lt;ol>
&lt;li>server握手结束&lt;/li>
&lt;/ol>
&lt;h2 id="完成握手">完成握手&lt;/h2>
&lt;p>两边都有了三个随机数，使用相同的加密算法，生成一个对称密钥。此后两边的应用数据都通过这个密钥进行加密。&lt;/p>
&lt;h2 id="对称加密于非对称加密">对称加密于非对称加密&lt;/h2>
&lt;p>非对称加密算法最常用的是RSA算法，使用公钥和私钥进行加密和解密。缺点是速度慢，优点是安全性高。&lt;/p>
&lt;p>对称加密算法，加密和解密使用同一个密钥。优点是速度快。&lt;/p>
&lt;p>&lt;img src="https://hugo-1256216240.cos.ap-chengdu.myqcloud.com/20200617170240_3ad7348e955aff44fda2574262f18834.png" alt="发送对称加密的密钥.png" title="发送对称加密的密钥">&lt;sup id="fnref:1">&lt;a href="http://blog.wss.cool/%E5%AD%A6%E4%B9%A0tls.html#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;h2 id="参考">参考&lt;/h2>
&lt;p>&lt;a href="https://www.jianshu.com/p/7158568e4867">https://www.jianshu.com/p/7158568e4867&lt;/a>&lt;/p>
&lt;p>图解HTTP&lt;/p>
&lt;p>Web性能权威指南&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>上野宣.&lt;a href="https://m.douban.com/book/subject/25863515/">图解HTTP&lt;/a>.于均良.北京:人民邮电出版社,2014.5 &lt;a href="http://blog.wss.cool/%E5%AD%A6%E4%B9%A0tls.html#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></content><category scheme="http://blog.wss.cool/categories/%E7%BD%91%E7%BB%9C/" term="网络" label="网络"/></entry><entry><title type="text">计算贝塞尔曲线</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E8%AE%A1%E7%AE%97%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF.html"/><id>http://blog.wss.cool/%E8%AE%A1%E7%AE%97%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-06-12T12:18:44+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">使用JavaScript计算贝塞尔曲线，将计算过程发布为npm包，在canvas中画出曲线。</summary><content type="html">&lt;h2 id="为什么做这个事">为什么做这个事&lt;/h2>
&lt;p>今天去面试，工作是开发一个3D内容的编辑器，面试官问了我一个问题&lt;/p>
&lt;blockquote>
&lt;p>做一个动画使一个元素从一个位置移动到另一个位置，移动的过程的速度是可配置的。怎么实现这种配置&lt;/p>
&lt;/blockquote>
&lt;p>我的回答是用一个曲线模拟速度，曲线有JS代码计算。曲线上有拐点，可以控制各个段落的斜率。&lt;/p>
&lt;p>回到家后，我想到chrome在调试css的transition时，chrome会提供跟我们一个界面来调贝塞尔曲线，它就跟面试官问的问题中的那个东西。所以我就想着做一个这东西出来，进行开源。也是作为练习。而且我还打算做一个开源编辑器，没准以后也会用到。&lt;/p>
&lt;h2 id="开始做">开始做&lt;/h2>
&lt;p>贝塞尔曲线应该有一个计算公式，我将公式转换成JS代码就可以了。于是查了&lt;a href="https://zh.wikipedia.org/wiki/%E8%B2%9D%E8%8C%B2%E6%9B%B2%E7%B7%9A#%E7%A8%8B%E5%BC%8F%E7%AF%84%E4%BE%8B">维基百科&lt;/a>。&lt;/p>
&lt;p>知道了多项式公式：
&lt;img src="http://blog.wss.cool/images/bezier/%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF.png" alt="多项式公式" title="贝塞尔曲线多项式公式">&lt;/p>
&lt;p>其中有个括号n,i，不知道是什么，查了一下，它是「组合」：
&lt;img src="http://blog.wss.cool/images/bezier/%E7%BB%84%E5%90%88.png" alt="组合" title="组合">&lt;/p>
&lt;p>有了这两个公式，代码就不困难了。&lt;/p>
&lt;p>写好代码后把计算这部分做成了一个npm包，发布到了npm仓库，代码放在了github&lt;sup id="fnref:1">&lt;a href="http://blog.wss.cool/%E8%AE%A1%E7%AE%97%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF.html#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;pre>&lt;code>npm install @wangshushuo/bezierjs
&lt;/code>&lt;/pre>&lt;h2 id="绘制canvas">绘制canvas&lt;/h2>
&lt;p>canvas的api我不熟，多亏了MDN的&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes">canvas文档&lt;/a>，需要用到画圆、写字、画线条、填充颜色等API。&lt;/p>
&lt;p>下面是做出来的效果，代码在Github&lt;sup id="fnref:2">&lt;a href="http://blog.wss.cool/%E8%AE%A1%E7%AE%97%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF.html#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;/p>
&lt;iframe src="https://wss.cool/react-bezier/" style="height:400px;width:400px;">&lt;/iframe>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>做出来以后决定很有成就感，收获了这些：&lt;/p>
&lt;ul>
&lt;li>了解到了如何计算贝塞尔曲线和组合&lt;/li>
&lt;li>熟悉了一波canvas的api&lt;/li>
&lt;li>第一次发布了npm包&lt;/li>
&lt;li>第一次在代码中使用了TypeScript的枚举&lt;/li>
&lt;/ul>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>地址：&lt;a href="https://github.com/wangshushuo/bezierjs">https://github.com/wangshushuo/bezierjs&lt;/a> &lt;a href="http://blog.wss.cool/%E8%AE%A1%E7%AE%97%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF.html#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>绘制canvas的仓库地址：&lt;a href="https://github.com/wangshushuo/react-bezier">https://github.com/wangshushuo/react-bezier&lt;/a> &lt;a href="http://blog.wss.cool/%E8%AE%A1%E7%AE%97%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF.html#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/></entry><entry><title type="text">枚举的应用</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E6%9E%9A%E4%B8%BE%E7%9A%84%E5%BA%94%E7%94%A8.html"/><id>http://blog.wss.cool/%E6%9E%9A%E4%B8%BE%E7%9A%84%E5%BA%94%E7%94%A8.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-06-11T23:41:48+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">TypeScript的枚举怎么用？</summary><content type="html">&lt;p>展示TypeScript中的枚举(enum)的一种实际用例。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="kr">class&lt;/span> &lt;span class="nx">P&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">x&lt;/span>: &lt;span class="kt">number&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">y&lt;/span>: &lt;span class="kt">number&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">x&lt;/span>: &lt;span class="kt">number&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">y&lt;/span>: &lt;span class="kt">number&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">x&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">y&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">enum&lt;/span> &lt;span class="nx">key&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;x&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;y&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">p0&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">P&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">dosomething&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>: &lt;span class="kt">key&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">p0&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">dosomething&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;x&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">dosomething&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;y&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="http://blog.wss.cool/categories/typescript/" term="typescript" label="typescript"/></entry><entry><title type="text">设置jar包使用内存</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E8%AE%BE%E7%BD%AEjar%E5%8C%85%E4%BD%BF%E7%94%A8%E5%86%85%E5%AD%98.html"/><id>http://blog.wss.cool/%E8%AE%BE%E7%BD%AEjar%E5%8C%85%E4%BD%BF%E7%94%A8%E5%86%85%E5%AD%98.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-05-28T07:56:46+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">设置（限制）java的jar包使用的内存上限</summary><content type="html">&lt;p>下面的命令中包含了几个 &lt;code>jvm option&lt;/code> 限制运行jar包使用的内存在72M。&lt;/p>
&lt;pre>&lt;code>java -XX:+UseSerialGC -Xss512k -XX:MaxRAM=72m -jar image-0.0.4-SNAPSHOT.jar
&lt;/code>&lt;/pre>&lt;p>如果不加这3个option的话，会使用大概300-400M内存。&lt;/p>
&lt;p>根据这个答案&lt;sup id="fnref:1">&lt;a href="http://blog.wss.cool/%E8%AE%BE%E7%BD%AEjar%E5%8C%85%E4%BD%BF%E7%94%A8%E5%86%85%E5%AD%98.html#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>进行的设置：&lt;/p>
&lt;p>With &lt;code>-XX:+UseSerialGC&lt;/code> 这将与分配堆内存的线程而不是专用GC线程内联地执行垃圾回收。&lt;/p>
&lt;p>With &lt;code>-Xss512k&lt;/code> 这会将每个线程的堆栈内存限制为512KB，而不是默认的1MB。&lt;/p>
&lt;p>With &lt;code>-XX:MaxRAM=72m&lt;/code> 这会将JVM对堆和非堆托管内存的计算限制在此值的范围内。&lt;/p>
&lt;p>除了上述JVM选项之外，您还可以在 &lt;code>application.properties&lt;/code> 文件中使用以下属性：&lt;/p>
&lt;p>&lt;code>server.tomcat.max-threads = 1&lt;/code> 这会将HTTP请求处理程序线程数限制为1（默认值为200）&lt;/p>
&lt;p>这是一个使用上述限制并使用 &lt;code>docker -m 72m&lt;/code> 参数运行非常简单的 &lt;code>Spring Boot&lt;/code> 应用程序的 &lt;code>docker stats&lt;/code> 示例。如果我降低的值低于此值，我将无法启动应用程序。&lt;/p>
&lt;pre>&lt;code>83ccc9b2156d: Mem Usage: 70.36MiB / 72MiB | Mem Percentage: 97.72%
&lt;/code>&lt;/pre>&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>CCob.&lt;a href="https://stackoverflow.com/a/52993285/6021280">stackoverflow Answers&lt;/a>.2018年10月25日 &lt;a href="http://blog.wss.cool/%E8%AE%BE%E7%BD%AEjar%E5%8C%85%E4%BD%BF%E7%94%A8%E5%86%85%E5%AD%98.html#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></content><category scheme="http://blog.wss.cool/categories/java/" term="java" label="java"/></entry><entry><title type="text">学习TCP</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E5%AD%A6%E4%B9%A0tcp.html"/><id>http://blog.wss.cool/%E5%AD%A6%E4%B9%A0tcp.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-05-27T13:30:38+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">了解TCP是什么，及一些基本概念</summary><content type="html">&lt;h2 id="三次握手">三次握手&lt;/h2>
&lt;ol>
&lt;li>SYN：client 随机生成起始分组序列号 x ，并发送SYN分组，还有其他TCP表示和选项&lt;/li>
&lt;li>SYN ACK：server 将 x+1 ，生成随机序列号 y&lt;/li>
&lt;li>ACK：client 将 x + 1，y + 1，发送ACK分组，完成握手。此时可以发起请求，比如 Http Get 。&lt;/li>
&lt;/ol>
&lt;h2 id="慢启动">慢启动&lt;/h2>
&lt;p>完成了三次握手，client发送了http/get请求，server处理完请求开始发送响应数据，新TCP链接传输的最大值取rwnd和cwnd的最小值，也就是4个TCP段。client收到4个TCP段后分别发送ACK确认，也就是4个ACK确认。server收到4个ACK，每收到一个ACK，慢启动算法会让服务器cwnd递增一个TCP段，此时cwnd就增加到8个TCP段。这就是慢启动和指数增长。&lt;/p>
&lt;dl>
&lt;dt>rwnd&lt;/dt>
&lt;dd>缩放窗口&lt;/dd>
&lt;dt>cwnd&lt;/dt>
&lt;dd>拥塞窗口&lt;/dd>
&lt;dt>TCP段&lt;/dt>
&lt;dd>一个TCP数据包。负载1460字节 + TCP头信息20字节 + IP头信息20字节 + 以太网头信息22字节 = 以太网数据包1522字节&lt;/dd>
&lt;dt>4个TCP段&lt;/dt>
&lt;dd>协议规定的服务器默认cwnd值，新版协议是10个。&lt;/dd>
&lt;/dl>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>阮一峰.&lt;a href="http://www.ruanyifeng.com/blog/2017/06/tcp-protocol.html">TCP 协议简介&lt;/a>.[2017年6月8日]&lt;/li>
&lt;li>Ilya Grigorik.Web性能权威指南.李松峰译.北京:人民邮电出版社，2014&lt;/li>
&lt;/ol></content><category scheme="http://blog.wss.cool/categories/%E7%BD%91%E7%BB%9C/" term="网络" label="网络"/></entry><entry><title type="text">组件化</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E7%BB%84%E4%BB%B6%E5%8C%96.html"/><id>http://blog.wss.cool/%E7%BB%84%E4%BB%B6%E5%8C%96.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-05-26T18:27:38+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">aaa</summary><content type="html">&lt;dl>
&lt;dt>减少重复代码&lt;/dt>
&lt;dd>即便没有复杂的逻辑，只是重复的UI元素，也可以封装成组件，以便重复使用，减少重复代码。&lt;/dd>
&lt;dt>封装逻辑&lt;/dt>
&lt;dd>相关的函数、变量和DOM元素封装成一个组件，降低复杂度。需要的话，暴露出参数用于复用。&lt;/dd>
&lt;dt>复用&lt;/dt>
&lt;dd>功能逻辑可以是通用的，比如背景图、颜色、文字等可能变化，也可以重复使用一个组件在不同的地方传不同的参数。&lt;/dd>
&lt;/dl></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/></entry><entry><title type="text">深浅拷贝</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E6%B7%B1%E6%B5%85%E6%8B%B7%E8%B4%9D.html"/><id>http://blog.wss.cool/%E6%B7%B1%E6%B5%85%E6%8B%B7%E8%B4%9D.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-05-25T18:34:27+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">什么是拷贝，什么是深浅拷贝 在 JavaScript 中，变量中保存的是对象的引用。比如像下面这样的操作 1 2……</summary><content type="html">&lt;h2 id="什么是拷贝什么是深浅拷贝">什么是拷贝，什么是深浅拷贝&lt;/h2>
&lt;p>在 JavaScript 中，变量中保存的是对象的引用。比如像下面这样的操作&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">var&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">对象1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">a&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>a和b都在引用对象1，如果对对象1进行修改，则a和b两个变量都会受到影响，有时我们不希望出现这种情况，就要对对象进行拷贝操作来切换引用。比如&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">var&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">对象1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">拷贝&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>那么如何实现拷贝呢？&lt;/p>
&lt;p>我们知道对象是由多个key和value组成的，所以拷贝就是创建一个新的对象，将旧对象的key和value拷贝到新对象中，让新旧对象的key和value完全一样。比如像下面这样&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nb">Object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">keys&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">对象1&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">forEach&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">新对象&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">对象1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这样的操作需要注意value的类型，分为基本类型和引用类型&lt;sup id="fnref:1">&lt;a href="http://blog.wss.cool/%E6%B7%B1%E6%B5%85%E6%8B%B7%E8%B4%9D.html#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>，如果所有的value都是基本类型，但是如果value是引用类型就会出现新旧对象中都引用了一个对象的情况，也就是上文提到的a和b变量的问题。..如果想完全切断引用，就要对引用类型的value在进行一次拷贝..。对于是否需要完全切断引用就有了两种拷贝方式，需要完全切断引用的就是「深拷贝」，不需要的就是「浅拷贝」。&lt;/p>
&lt;p>简单概括一下。&lt;/p>
&lt;p>「浅拷贝」是只对对象的key和value进行一次遍历拷贝，不管内部的引用。&lt;/p>
&lt;p>「深拷贝」要将对象内部的引用完全切断，对对象进行递归地拷贝。&lt;/p>
&lt;h2 id="如何实现深拷贝">如何实现深拷贝&lt;/h2>
&lt;p>先看一种实现方式&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="ln"> 1&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">clone&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">旧对象&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 2&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">新对象&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{};&lt;/span>
&lt;span class="ln"> 3&lt;/span> &lt;span class="nb">Object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">keys&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">旧对象&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">forEach&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">旧对象&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">is基本类型&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="nx">新对象&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">旧对象&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="hl">&lt;span class="ln"> 8&lt;/span> &lt;span class="nx">新对象&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">clone&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 递归
&lt;/span>&lt;/span>&lt;span class="ln"> 9&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="p">})&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">新对象&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">12&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;p>这种方法用的是递归，即当value不是基本类型时就对它进行拷贝。该方法有一个明显的问题，当出现循环引用时，就进入了一个死循环。&lt;/p>
&lt;p>我们知道，函数的调用会形成一个「执行栈」，函数执行过程中如果又调用了函数就像该函数压入栈顶并执行，前一个函数就暂停了等待新函数执行完。&lt;/p>
&lt;p>递归就是当前对象还没有拷贝完，就开始了下一次拷贝，就是在「执行栈」又压入了一次函数调用，而循环引用会导致不停滴往执行栈顶添加，对后执行栈超过限制大小，而中断。&lt;/p>
&lt;p>为了避免爆栈问题，可以让一次拷贝进行完之后再开始下一次拷贝。就是把遇到的对象放在一个地方（数组1），当遇到对象时把它保存起来，完成一次拷贝后去检查看还有没有需要拷贝的对象。&lt;/p>
&lt;p>这样虽然解决了爆栈，但是仍是一个死循环，因为会不停地向那个地方添加对象。所以需要一种方法来判断已经拷贝过的对象。&lt;/p>
&lt;p>我们再创建一个数组2，用来保存拷贝过的对象，当遇到新的对象时，先去数组内查找，就不向数组1添加了，也就阻止了死循环。&lt;/p>
&lt;p>下面的代码是对上面分析的过程的实现&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="c1">// value 参数为原对象
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">cloneLoop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">oldObject&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">uniqueList&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span> &lt;span class="c1">// 用来去重
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 新的空对象
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">root&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{};&lt;/span>
&lt;span class="c1">// 存储子对象的数组
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">children&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nx">parent&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">root&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">key&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">undefined&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">value&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">oldObject&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">];&lt;/span>
&lt;span class="c1">// 如果children内有子对象，则将其copy
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">children&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 深度优先，如果使用shift()则是广度有限。
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">node&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">children&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">pop&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">parent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parent&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">childObject&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">childObject&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">// 当key是undefined时，parent是{}，也就是刚开始
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 当key不是undefined时，就是已经复制到子对象了，这时key肯定时有值的，
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 需要把key对应的value初始化为空对象，后面的循环把子对象的 key 和 value 复制到空对象上。
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">let&lt;/span> &lt;span class="nx">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">parent&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">typeof&lt;/span> &lt;span class="nx">key&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="s1">&amp;#39;undefined&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">parent&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{};&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 当循环引用时，childObject会与拷贝过的对象相等，就可以把它直接赋值到新对象上。完成一次拷贝。
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">let&lt;/span> &lt;span class="nx">uniqueData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">uniqueList&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">childObject&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">uniqueData&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">parent&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">uniqueData&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">target&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 中断本次循环
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="c1">// 数据不存在
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 保存源数据，在拷贝数据中对应的引用
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">uniqueList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">source&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">childObject&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">target&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="c1">// 遍历子对象
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">k&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nx">childObject&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hasOwnProperty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 如果value时对象，将子对象放入「子对象数组」中，待下一次while读取遍历
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">typeof&lt;/span> &lt;span class="nx">childObject&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;object&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 下一次循环
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">children&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">parent&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">key&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">k&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">childObject&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">childObject&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">],&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">res&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">childObject&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">root&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">arr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">item&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nx">arr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">source&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">item&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>总结一下要点：&lt;/p>
&lt;ol>
&lt;li>使用一个数组存储copy过程中遇到的对象，以破解爆栈的问题。&lt;/li>
&lt;li>使用另一个数组存储copy过的对象，以破解循环引用的问题。&lt;/li>
&lt;/ol>
&lt;p>对于拷贝一个对象的过程lodash使用的是「结构化克隆算法」&lt;sup id="fnref:2">&lt;a href="http://blog.wss.cool/%E6%B7%B1%E6%B5%85%E6%8B%B7%E8%B4%9D.html#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>，普通对象直接复制key和value，数组等其他对象使用相应的复制方法。&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>Nicholas C.Zakas；JavaScript高级程序设计(第3版)；4.1 基本类型与引用类型的值 &lt;a href="http://blog.wss.cool/%E6%B7%B1%E6%B5%85%E6%8B%B7%E8%B4%9D.html#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>MDN web docs；&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/API/DOM/The_structured_clone_algorithm">结构化克隆算法&lt;/a>。&lt;br>
HTML Living Standard；&lt;a href="https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal">结构化克隆算法&lt;/a>，&lt;a href="https://whatwg-cn.github.io/html/#structuredserializeinternal">中文翻译&lt;/a> &lt;a href="http://blog.wss.cool/%E6%B7%B1%E6%B5%85%E6%8B%B7%E8%B4%9D.html#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></content><category scheme="http://blog.wss.cool/categories/%E7%AE%97%E6%B3%95/" term="算法" label="算法"/></entry><entry><title type="text">JavaScript变量类型</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/javascript%E5%8F%98%E9%87%8F%E7%B1%BB%E5%9E%8B.html"/><id>http://blog.wss.cool/javascript%E5%8F%98%E9%87%8F%E7%B1%BB%E5%9E%8B.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-05-25T18:23:09+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">变量类型的值分为基本类型和引用类型。 基本类型有五种：String、Number、Bo……</summary><content type="html">&lt;p>变量类型的值分为基本类型和引用类型。&lt;/p>
&lt;p>基本类型有五种：String、Number、Boolean、Undefined和Null。&lt;/p>
&lt;p>引用类型是对象。对象中又有宿主对象和原生对象的区别。&lt;/p>
&lt;p>宿主对象是环境提供的对象。比如DOM对象：window、document；BOM对象：history、location、navigator等。&lt;/p>
&lt;p>原生对象是JavaScript语言提供的，比如Math、Array、Date、RegExp等，还有ES6的Set、Map等。&lt;/p></content><category scheme="http://blog.wss.cool/categories/javascript/" term="JavaScript" label="JavaScript"/><category scheme="http://blog.wss.cool/tags/javascript%E5%9F%BA%E7%A1%80/" term="JavaScript基础" label="JavaScript基础"/></entry><entry><title type="text">Mysql增删改查</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/mysql%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5.html"/><id>http://blog.wss.cool/mysql%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-05-25T17:47:39+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">create 1 2 INSERT INTO tasks(subject,start_date,end_date,description) VALUES(&amp;#39;Learn MySQL INSERT&amp;#39;,&amp;#39;2017-07-21&amp;#39;,&amp;#39;2017-07-22&amp;#39;,&amp;#39;Start learning..&amp;#39;); read 左右链接 1 2 3 4 5 6 7 SELECT plugin_of_user.id, plugin_of_user.user_plugin_name, plugin_info.name, plugin_info.avatar, plugin_info.link, plugin_info.type FROM plugin_of_user RIGHT JOIN plugin_info ON plugin_of_user.plugin_id=plugin_info.id WHERE plugin_of_user.user_id = ? update 1……</summary><content type="html">&lt;h2 id="create">create&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">INSERT&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="n">tasks&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">subject&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">start_date&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">end_date&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">description&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">VALUES&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Learn MySQL INSERT&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;2017-07-21&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;2017-07-22&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;Start learning..&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="read-左右链接">read 左右链接&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">SELECT&lt;/span>
&lt;span class="n">plugin_of_user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">plugin_of_user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">user_plugin_name&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">plugin_info&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">plugin_info&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">avatar&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">plugin_info&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">link&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">plugin_info&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">type&lt;/span>
&lt;span class="k">FROM&lt;/span> &lt;span class="n">plugin_of_user&lt;/span>
&lt;span class="k">RIGHT&lt;/span> &lt;span class="k">JOIN&lt;/span> &lt;span class="n">plugin_info&lt;/span>
&lt;span class="k">ON&lt;/span> &lt;span class="n">plugin_of_user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">plugin_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">plugin_info&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">id&lt;/span>
&lt;span class="k">WHERE&lt;/span> &lt;span class="n">plugin_of_user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">user_id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">?&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="update">update&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">UPDATE&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">LOW_PRIORITY&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="k">IGNORE&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">table_name&lt;/span>
&lt;span class="k">SET&lt;/span>
&lt;span class="n">column_name1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">expr1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">column_name2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">expr2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">...&lt;/span>
&lt;span class="k">WHERE&lt;/span>
&lt;span class="n">condition&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="无则添加有则修改">无则添加，有则修改&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">insert&lt;/span> &lt;span class="k">into&lt;/span> &lt;span class="n">student&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nb">number&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">values&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="mi">45&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err">‘张三’&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">ON&lt;/span> &lt;span class="n">DUPLICATE&lt;/span> &lt;span class="k">KEY&lt;/span> &lt;span class="k">UPDATE&lt;/span>
&lt;span class="nb">number&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">46&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">‘李四’&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="delete">delete&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">DELETE&lt;/span> &lt;span class="k">FROM&lt;/span> &lt;span class="k">table_name&lt;/span>
&lt;span class="k">WHERE&lt;/span> &lt;span class="n">condition&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/mysql/" term="mysql" label="mysql"/><category scheme="http://blog.wss.cool/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/" term="数据库" label="数据库"/><category scheme="http://blog.wss.cool/tags/mysql/" term="mysql" label="mysql"/></entry><entry><title type="text">Mysql表结构</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/mysql%E8%A1%A8%E7%BB%93%E6%9E%84.html"/><id>http://blog.wss.cool/mysql%E8%A1%A8%E7%BB%93%E6%9E%84.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-05-25T17:46:51+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">修改表结构 查看列：desc 表名; 修改表名：alter table t_book rename to bbb; 添加列：alter table 表……</summary><content type="html">&lt;h3 id="修改表结构">修改表结构&lt;/h3>
&lt;ol>
&lt;li>查看列：&lt;code>desc 表名;&lt;/code>&lt;/li>
&lt;li>修改表名：&lt;code>alter table t_book rename to bbb;&lt;/code>&lt;/li>
&lt;li>添加列：&lt;code>alter table 表名 add column 列名 varchar(30);&lt;/code>&lt;/li>
&lt;li>删除列：&lt;code>alter table 表名 drop column 列名;&lt;/code>&lt;/li>
&lt;li>修改列名MySQL： &lt;code>alter table bbb change nnnnn hh int;&lt;/code>&lt;/li>
&lt;li>修改列名SQLServer：&lt;code>exec sp_rename't_student.name','nn','column';&lt;/code>&lt;/li>
&lt;li>修改列名Oracle：&lt;code>lter table bbb rename column nnnnn to hh int;&lt;/code>&lt;/li>
&lt;li>修改列属性：&lt;code>alter table t_book modify name varchar(22);&lt;/code>&lt;/li>
&lt;/ol>
&lt;h3 id="唯一性约束">唯一性约束&lt;/h3>
&lt;h4 id="建表时加上唯一性约束">建表时加上唯一性约束：&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">CREATE&lt;/span> &lt;span class="k">TABLE&lt;/span> &lt;span class="o">`&lt;/span>&lt;span class="n">t_user&lt;/span>&lt;span class="o">`&lt;/span> &lt;span class="p">(&lt;/span>
    &lt;span class="o">`&lt;/span>&lt;span class="n">Id&lt;/span>&lt;span class="o">`&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">NOT&lt;/span> &lt;span class="k">NULL&lt;/span> &lt;span class="n">AUTO_INCREMENT&lt;/span>&lt;span class="p">,&lt;/span> 
    &lt;span class="o">`&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="o">`&lt;/span> &lt;span class="nb">varchar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">18&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">NOT&lt;/span> &lt;span class="k">NULL&lt;/span> &lt;span class="k">unique&lt;/span>&lt;span class="p">,&lt;/span> 
    &lt;span class="o">`&lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="o">`&lt;/span> &lt;span class="nb">varchar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">18&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">NOT&lt;/span> &lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span> 
    &lt;span class="k">PRIMARY&lt;/span> &lt;span class="k">KEY&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">Id&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">)&lt;/span> 
&lt;span class="p">)&lt;/span> &lt;span class="n">ENGINE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">InnoDB&lt;/span> &lt;span class="n">AUTO_INCREMENT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1018&lt;/span> &lt;span class="k">DEFAULT&lt;/span> &lt;span class="n">CHARSET&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">gbk&lt;/span>&lt;span class="p">;&lt;/span> 
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="给已经建好的表加上唯一性约束">给已经建好的表加上唯一性约束：&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">ALTER&lt;/span> &lt;span class="k">TABLE&lt;/span> &lt;span class="o">`&lt;/span>&lt;span class="n">t_user&lt;/span>&lt;span class="o">`&lt;/span> &lt;span class="k">ADD&lt;/span> &lt;span class="k">unique&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>或者：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">create&lt;/span> &lt;span class="k">unique&lt;/span> &lt;span class="k">index&lt;/span> &lt;span class="n">UserNameIndex&lt;/span> &lt;span class="k">on&lt;/span> &lt;span class="s1">&amp;#39;t_user&amp;#39;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;username&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="索引">索引&lt;/h3>
&lt;h4 id="mysql索引类型">mysql索引类型&lt;/h4>
&lt;ul>
&lt;li>primary：唯一索引，不允许为null。&lt;/li>
&lt;li>key：普通非唯一索引。&lt;/li>
&lt;li>unique：表示唯一的，不允许重复的索引，可以为null。&lt;/li>
&lt;li>fulltext: 表示全文搜索的索引。 FULLTEXT用于搜索很长一篇文章的时候，效果最好。用在比较短的文本，如果就一两行字的，普通的INDEX 也可以。&lt;/li>
&lt;li>spatial：空间索引。&lt;/li>
&lt;/ul></content><category scheme="http://blog.wss.cool/categories/mysql/" term="mysql" label="mysql"/><category scheme="http://blog.wss.cool/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/" term="数据库" label="数据库"/><category scheme="http://blog.wss.cool/tags/mysql/" term="mysql" label="mysql"/></entry><entry><title type="text">Mysql数据类型</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/mysql%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html"/><id>http://blog.wss.cool/mysql%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-05-25T17:46:03+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">varchar varchar(666)，其中参数666为字节数。 varchar是可变长度的字符串……</summary><content type="html">&lt;h3 id="varchar">varchar&lt;/h3>
&lt;p>&lt;code>varchar(666)&lt;/code>，其中参数&lt;code>666&lt;/code>为字节数。&lt;/p>
&lt;p>&lt;code>varchar&lt;/code>是可变长度的字符串，大小为&lt;code>0-65535&lt;/code>字节。对应的字符串长度会受到字符集影响，若使用&lt;code>utf-8&lt;/code>存储汉字，一个汉字字符对应&lt;code>3&lt;/code>个字节。&lt;/p>
&lt;p>&lt;code>varchar&lt;/code>还需要存储数据长度，当小于等于&lt;code>255&lt;/code>个字节时，使用&lt;code>1&lt;/code>个字节存储长度。大于&lt;code>255&lt;/code>长度时，使用&lt;code>2&lt;/code>个字节存储长度。&lt;/p>
&lt;p>比如&lt;code>varchar(666)&lt;/code>，使用&lt;code>2&lt;/code>个字节存储长度，剩下的&lt;code>664&lt;/code>个字节存储实际内容，&lt;/p>
&lt;h3 id="text">text&lt;/h3>
&lt;p>TEXT数据不存储在数据库服务器的内存中，因此，每当查询TEXT数据时，MySQL都必须从磁盘读取它，这与CHAR和VARCHAR相比要慢得多。
![mysql文档][image1]&lt;/p>
&lt;blockquote>
&lt;p>mysql的性能只有在上千万条纪律的时候才需要考虑。
——潘老师&lt;/p>
&lt;/blockquote>
&lt;h3 id="datetime">DATETIME&lt;/h3>
&lt;p>将js的Date对象传进去，会直接保存，查出来返回到前端页面时，可以这样使用&lt;code>new Date(props.time)&lt;/code>转换成Date对象。&lt;/p>
&lt;h3 id="没有布尔值使用tinyint">没有布尔值，使用tinyint&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">CREATE&lt;/span> &lt;span class="k">TABLE&lt;/span> &lt;span class="k">IF&lt;/span> &lt;span class="k">NOT&lt;/span> &lt;span class="k">EXISTS&lt;/span> &lt;span class="o">`&lt;/span>&lt;span class="n">ed_class_price_user&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="o">`&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">`&lt;/span> &lt;span class="nb">INT&lt;/span> &lt;span class="n">UNSIGNED&lt;/span> &lt;span class="n">AUTO_INCREMENT&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="o">`&lt;/span>&lt;span class="n">user_name&lt;/span>&lt;span class="o">`&lt;/span> &lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">200&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">NOT&lt;/span> &lt;span class="k">NULL&lt;/span> &lt;span class="k">unique&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="o">`&lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="o">`&lt;/span> &lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">200&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">NOT&lt;/span> &lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="o">`&lt;/span>&lt;span class="n">disable&lt;/span>&lt;span class="o">`&lt;/span> &lt;span class="n">TINYINT&lt;/span> &lt;span class="k">DEFAULT&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="k">PRIMARY&lt;/span> &lt;span class="k">KEY&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="o">`&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">`&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>&lt;span class="n">ENGINE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">InnoDB&lt;/span> &lt;span class="k">DEFAULT&lt;/span> &lt;span class="n">CHARSET&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">utf8&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/mysql/" term="mysql" label="mysql"/><category scheme="http://blog.wss.cool/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/" term="数据库" label="数据库"/><category scheme="http://blog.wss.cool/tags/mysql/" term="mysql" label="mysql"/></entry><entry><title type="text">Git记住密码</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/git%E8%AE%B0%E4%BD%8F%E5%AF%86%E7%A0%81.html"/><id>http://blog.wss.cool/git%E8%AE%B0%E4%BD%8F%E5%AF%86%E7%A0%81.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-05-25T17:34:13+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">如果操作远程仓库时每次都要输入账号密码，可以通过设置让git记住密码</summary><content type="html">&lt;p>一、配置本地仓库&lt;/p>
&lt;pre>&lt;code>git config user.name &amp;quot;your_name&amp;quot;
git config user.email XXXX@gmail.com
&lt;/code>&lt;/pre>&lt;p>二、记住密码&lt;/p>
&lt;pre>&lt;code>// 当前仓库
git config credential.helper store
// 全局仓库
git config --global credential.helper store
&lt;/code>&lt;/pre>&lt;p>push 代码 这一步输入的用户名密码会被记住,
下次再push代码时就不用输入用户名密码, 这一步会在用户目录下生成文件.git-credential记录用户名密码的信息。&lt;/p>
&lt;blockquote>
&lt;p>创建 &lt;code>.git-credential&lt;/code> 文件 并写入用户信息：用户名和密码&lt;/p>
&lt;/blockquote></content><category scheme="http://blog.wss.cool/categories/git/" term="git" label="git"/></entry><entry><title type="text">Git设置代理</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/git%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86.html"/><id>http://blog.wss.cool/git%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-05-25T17:32:50+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">设置git的代理</summary><content type="html">&lt;p>全局设置&lt;/p>
&lt;pre>&lt;code>git config --global http.proxy 'socks5://127.0.0.1:1080'
git config --global https.proxy 'socks5://127.0.0.1:1080'
&lt;/code>&lt;/pre>&lt;p>全局取消&lt;/p>
&lt;pre>&lt;code>git config --global --unset http.proxy
git config --global --unset https.proxy
&lt;/code>&lt;/pre>&lt;p>只对github.com&lt;/p>
&lt;pre>&lt;code>git config --global http.https://github.com.proxy socks5://127.0.0.1:1080
&lt;/code>&lt;/pre>&lt;p>取消代理&lt;/p>
&lt;pre>&lt;code>git config --global --unset http.https://github.com.proxy
&lt;/code>&lt;/pre></content><category scheme="http://blog.wss.cool/categories/git/" term="git" label="git"/></entry><entry><title type="text">Git分支操作</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/git%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C.html"/><id>http://blog.wss.cool/git%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-05-25T17:30:46+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">常用的Git分支操作</summary><content type="html">&lt;h2 id="分支操作">分支操作&lt;/h2>
&lt;h3 id="删除本地的所有分支除了master">删除本地的所有分支，除了master&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git branch &lt;span class="p">|&lt;/span> grep -v &lt;span class="s2">&amp;#34;master&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> xargs git branch -d
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="刷新本地的远程分支列表">刷新本地的远程分支列表&lt;/h3>
&lt;p>远程已经被删除的分支，在本地使用&lt;code>git branch -a&lt;/code>命令是依然可以看到。所以需要刷新一下。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git remote prune origin
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这条命令是删除与&lt;name>关联的陈旧引用&lt;/p>
&lt;p>或者&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git fetch -p
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这条命令是在获取之前，删除远程不再存在的任何远程跟踪引用。&lt;/p>
&lt;h3 id="切换分支branch">切换分支(branch)&lt;/h3>
&lt;p>分支分为本地和远程两种，使用 &lt;code>git branch&lt;/code> 查看分支，发现只有 &lt;code>master&lt;/code> 也就是本地分支。&lt;br>
查看远程分支可以使用 &lt;code>git branch -a&lt;/code> 可以看到所有分支，包括远端的分支，使用远程分支名字 &lt;code>remotes/origin/15-stable&lt;/code> 进行切换。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="c1"># 远程分支列表&lt;/span>
git branch -r
&lt;span class="c1"># 所有分支列表（包括远程）&lt;/span>
git branch -a
&lt;span class="c1"># 分支列表&lt;/span>
git branch
&lt;span class="c1"># 创建并切换到dev分支,&lt;/span>
git checkout -b dev
&lt;span class="c1"># 上面的命令，等于下面的两条命令&lt;/span>
&lt;span class="c1"># 创建分支&lt;/span>
git branch dev
&lt;span class="c1"># 切换分支&lt;/span>
git checkout dev
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="删除远程分支">删除远程分支&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git push origin -d &lt;span class="o">[&lt;/span>远程分支名&lt;span class="o">]&lt;/span>
git push origin :&lt;span class="o">[&lt;/span>远程分支名&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>git push origin :experimental&lt;br>
Find a ref that matches experimental in the origin repository (e.g. refs/heads/experimental), and delete it.&lt;/p>
&lt;/blockquote>
&lt;h3 id="获取当前分支名">获取当前分支名&lt;/h3>
&lt;pre>&lt;code>git symbolic-ref --short -q HEAD
&lt;/code>&lt;/pre>&lt;h3 id="获取当前分支从哪个分支签出">获取当前分支从哪个分支签出&lt;/h3>
&lt;blockquote>
&lt;p>基于哪个分支拉的分支&lt;/p>
&lt;/blockquote>
&lt;p>下面的两个命令都可以获取到“父分支”，来自——&lt;a href="https://stackoverflow.com/questions/3161204/how-to-find-the-nearest-parent-of-a-git-branch">How to find the nearest parent of a Git branch?&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git show-branch &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>&lt;span class="p">|&lt;/span> sed &lt;span class="s2">&amp;#34;s/].*//&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>&lt;span class="p">|&lt;/span> grep &lt;span class="s2">&amp;#34;\*&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>&lt;span class="p">|&lt;/span> grep -v &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>git rev-parse --abbrev-ref HEAD&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>&lt;span class="p">|&lt;/span> head -n1 &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>&lt;span class="p">|&lt;/span> sed &lt;span class="s2">&amp;#34;s/^.*\[//&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git show-branch &lt;span class="p">|&lt;/span> grep &lt;span class="s1">&amp;#39;*&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> grep -v &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>git rev-parse --abbrev-ref HEAD&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> head -n1 &lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;s/.*\[\(.*\)\].*/\1/&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;s/[\^~].*//&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="推送当前分支到远端">推送当前分支到远端&lt;/h3>
&lt;p>如果你还没有推到原点，那么&lt;code>git push -u origin HEAD&lt;/code>可以在本地分支中设置上游跟踪信息。&lt;/p>
&lt;h3 id="推送当前分支到远端会在远端新建当前分支名的新分支">推送当前分支到远端，会在远端新建当前分支名的新分支&lt;/h3>
&lt;pre>&lt;code>git push -u origin HEAD
&lt;/code>&lt;/pre>&lt;h3 id="分支合并">分支合并&lt;/h3>
&lt;p>建议合并时保留目标分支的commit信息。即使用：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git merge --no-ff &lt;span class="o">[&lt;/span>branch name&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;p>当合并错了以后怎么撤销合并呢，使用：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git reset --hard &lt;span class="o">[&lt;/span>merge的版本号&lt;span class="o">]&lt;/span> &lt;span class="c1">#版本号使用 git log 查，这种方法只针对合并以后对当前分支没有过其他操作，有的话比较复杂&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;p>合并远程分支：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="c1"># 如果本地没有远程分支：&lt;/span>
git checkout -b develop origin/develop &lt;span class="c1"># 本地新建develop分支并拉取&lt;/span>
&lt;span class="c1"># 如果本地已有远程分支：&lt;/span>
git checkout develop
git pull origin develop &lt;span class="c1">#拉取远程代码&lt;/span>
&lt;span class="c1"># 方法二：&lt;/span>
git fetch origin dev:temp &lt;span class="c1">#拉取远程dev分支，创建本地temp分支&lt;/span>
git diff temp
git merge temp &lt;span class="c1"># 合并&lt;/span>
git branch -d temp &lt;span class="c1">#删除&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/git/" term="git" label="git"/></entry><entry><title type="text">如何准备面试</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E5%A6%82%E4%BD%95%E5%87%86%E5%A4%87%E9%9D%A2%E8%AF%95.html"/><id>http://blog.wss.cool/%E5%A6%82%E4%BD%95%E5%87%86%E5%A4%87%E9%9D%A2%E8%AF%95.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-05-04T00:29:30+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">我现在想换个工作，所以要准备面试，但是如何准备还没有完全想好。这里记录一下我想到的面……</summary><content type="html">&lt;p>我现在想换个工作，所以要准备面试，但是如何准备还没有完全想好。这里记录一下我想到的面试可能包含的内容。&lt;/p>
&lt;p>面试应该分几个部分。首先是「基础知识点」的考察，这一步是必须的，来验验这个人是能否完成基本的编码工作，这步表现的可以的话应该能拿最低薪水。然后会「聊项目」，这步需要了解在项目中承担了哪些工作，在团队协作中扮演什么角色&lt;sup id="fnref:1">&lt;a href="http://blog.wss.cool/%E5%A6%82%E4%BD%95%E5%87%86%E5%A4%87%E9%9D%A2%E8%AF%95.html#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;sup id="fnref:2">&lt;a href="http://blog.wss.cool/%E5%A6%82%E4%BD%95%E5%87%86%E5%A4%87%E9%9D%A2%E8%AF%95.html#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>，如果发现你的能力比较工资会多一些。最后是些人事相关的「非技术问题」，比如期望薪资、福利待遇、为什么离职等等。这几部分又该如何准备呢？&lt;/p>
&lt;h2 id="基础知识">基础知识&lt;/h2>
&lt;p>基础知识可以分为几个部分：语言、框架/库、算法。这些网上都有很多资料，需要筛选出高质量的内容。&lt;/p>
&lt;p>我打算现在 Github 上找到那个&lt;a href="https://github.com/h5bp/Front-end-Developer-Interview-Questions">最著名的前端面试题库&lt;/a>，写一个博客记录我的回答。基础搞定以后要复习 React/Vue 原理，主要是「虚拟DOM」「Diff算法」「异步渲染」「Hook原理」，还有一些常用的 API 。另外有些浏览器相关的，比如重绘、缓存、CORS等。准备算法我要继续看《算法》这本书，掌握几个常用常考的算法。&lt;/p>
&lt;p>这个过程中遇到的所有知识，把不会的记录到博客中，会的也要重新整理博客。这些博客像「错题本」一样用来巩固知识。&lt;/p>
&lt;h2 id="聊项目">聊项目&lt;/h2>
&lt;p>这里需要仔细回想你在团队协作中扮演的角色。只是现实功能的话，就要对相关的技术熟一些。如果做了些代码设计工作，可能需要聊一下思路，遇到的问题等等。如果除了完成功能开发外还有其他贡献。比如发现A问题，你开发了B工具解决它，提高了工作效率/代码质量。发现了C问题，重新设计了D代码，将C问题重构/优化。或者为团队/公司解决了什么难题、帮助同事解决了什么问题。&lt;/p>
&lt;p>这些工作都能体现你能力的高低，要「仔细」地想出来，并组织语言准备讲给面试官听。&lt;/p>
&lt;p>拿我来说。我开发过工具提高工作效率，规范 Git 的使用方式。为项目补充文档，优化旧代码降低复杂度，设计组件优化代码，设计新的架构替换旧架构降低复杂度。帮助同事设计组件。为团队解决若干技术难题。制定并代码规范提高代码可读性，降低复杂度。&lt;/p>
&lt;h2 id="非技术问题">非技术问题&lt;/h2>
&lt;p>最重要的是薪资，如果前面聊的顺利，这里可以多说一点，因为公司一般都会还价。其他福利也很重要，有没有年终奖/项目奖金，会写在合同里吗，公积金交多少。&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>角色大概可以分为「初中高级」。承担的工作如果都是「实现xx功能」之类的，大概是初级的水平；如果功能、模块、组件这些能自己设计，大概能算中级水平；再高级点的工作，指导别人工作，搞一些工具、组件、方法提高工作效率，解决难题，这就算是高级了。&lt;br>
&lt;a href="https://twitter.com/haoel/status/1253910100668022784?s=20">https://twitter.com/haoel/status/1253910100668022784?s=20&lt;/a> &lt;a href="http://blog.wss.cool/%E5%A6%82%E4%BD%95%E5%87%86%E5%A4%87%E9%9D%A2%E8%AF%95.html#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>初级：在给出指导和具体实施细节后，能独立按时按量（数量和质量）完成工作。&lt;br>
中级：不用指导和具体实施细节，能独立的按时按量（数量和质量）完成工作。&lt;br>
高级：解难题（能解决业务或技术难题），传帮带（能指导培养初中级人员），标准化（能沉淀出可复制或可复用的方法论或工作方式，提高生产效率） &lt;a href="http://blog.wss.cool/%E5%A6%82%E4%BD%95%E5%87%86%E5%A4%87%E9%9D%A2%E8%AF%95.html#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></content><category scheme="http://blog.wss.cool/categories/%E8%A1%8C%E4%B8%9A%E6%88%90%E9%95%BF/" term="行业成长" label="行业成长"/></entry><entry><title type="text">做正确的事</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E5%81%9A%E6%AD%A3%E7%A1%AE%E7%9A%84%E4%BA%8B.html"/><id>http://blog.wss.cool/%E5%81%9A%E6%AD%A3%E7%A1%AE%E7%9A%84%E4%BA%8B.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-04-27T08:41:25+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">正确事就是能让自己在行业内成长的事</summary><content type="html">&lt;p>作为程序员，在工作和业余时间都会有很多新的技术和不知道的知识点。在它们中找到有价值的、值得投入时间的事很重要。它们是能让自己在行业内成长的事，这里就简称为「正确的事」，这会影响到自己的成长速度。影响到自己在未来一年、三年、五年的能力和价值。&lt;/p>
&lt;p>想要筛选出「正确的事」就要有一个判断标准，这个标准就是自己的目标。比如我想多赚钱，这就意味着去更好的公司，或者更高的职位。这些都要依托于好的技术和能力，那么我的目标就是拥有好的技术和能力，而我作为一个前端且喜欢 React ，市场上也有很多这样的工作机会，我只需要专注与 React 和其他通用技能的锻炼，其他技术对我来说就不重要。所以对于我来说，「正确的事」就是能为我提高「前端基础」「React技术栈」「软件行业通用技能」的事。&lt;/p>
&lt;p>有了目标和判断标准和自己正在做的事的了解以后，就可以对要做的事进行判断了。在工作中选哪些「正确的事」，业余时间也投入到「正确的事」，其他事尽量不做，如果工作中非做不可，可以考虑换个公司。因为把有限的时间投入到「不正确的事」会影响自己的成长速度。&lt;/p>
&lt;hr>
&lt;p>再具体一点我认为能让自己在行业内成长的事有哪些。&lt;/p>
&lt;ul>
&lt;li>React原理、Redux原理，常用的JavaScript、CSS。这些属于专业基础知识。&lt;/li>
&lt;li>前端组件化的设计，代码的组织和管理复杂度、代码规范、git的使用和规范。这些是为了让代码长期可维护，易于扩展和管理，少出bug，不给公司拖后腿。&lt;/li>
&lt;li>nginx、linux的简单使用，可以简单的发布项目。&lt;/li>
&lt;li>还有前后端通用的重要基础知识：代码大全（构建代码的技术）、算法，tcp/ip、fetch规范、oauth2规范之类。&lt;/li>
&lt;/ul></content><category scheme="http://blog.wss.cool/categories/%E8%A1%8C%E4%B8%9A%E6%88%90%E9%95%BF/" term="行业成长" label="行业成长"/></entry><entry><title type="text">AccessToken认证</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/access-token-for-get.html"/><id>http://blog.wss.cool/access-token-for-get.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-04-22T23:11:20+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">使用 access token 为认证方式操作 gitlab、github 等远程 git 仓库，代替 ssh 公钥和用户名密码。</summary><content type="html">&lt;h2 id="用途">用途&lt;/h2>
&lt;p>当我们操作远程 Git 仓库时，需要进行身份认证，一般有三种方式：&lt;/p>
&lt;dl>
&lt;dt>1.账号密码&lt;/dt>
&lt;dd>每次输入账号密码，或由工具记住并帮忙自动填写&lt;/dd>
&lt;dt>2.&lt;code>ssh&lt;/code>&lt;/dt>
&lt;dd>将本机的一个公钥设置到 &lt;code>gitlab&lt;/code> 账户内&lt;/dd>
&lt;dt>3.&lt;code>access token&lt;/code>&lt;/dt>
&lt;dd>在链接中加入 &lt;code>token&lt;/code>&lt;/dd>
&lt;/dl>
&lt;p>认证后进行 pull 或 push 等操作。下面说一下怎么在 gitlab 中使用 &lt;code>access token&lt;/code> 进行认证。&lt;/p>
&lt;h2 id="使用方法">使用方法📝&lt;/h2>
&lt;ol>
&lt;li>点击「头像」，找到 「Setting」，再找到 ..AccessTokens..&lt;/li>
&lt;li>填写 &amp;quot;name&amp;quot; ，选择 &lt;code>read_repository&lt;/code> &lt;code>write_repository&lt;/code>&lt;/li>
&lt;li>点按钮「Create」 ，在页面上方 &lt;em>Your New Personal Access Token&lt;/em> 处生成了一个一次性的字符串，将它复制保存起来，刷新页面后它就消失，如果搞丢了只能再生成。&lt;/li>
&lt;li>这是一个使用 &lt;code>access token&lt;/code> 的一般形势的链接：&lt;code>http://oauth2:access-token@host.com/user/repo.git&lt;/code> ，将其中的 &lt;code>access-token&lt;/code> 换成刚刚生成的那个。&lt;/li>
&lt;li>使用这个上面的链接去 &lt;code>clone&lt;/code> 项目：&lt;code>git clone http://oauth2:access-token@host.com/user/repo.git&lt;/code> 或者替换原来的 &lt;code>remote url&lt;/code> ：
&lt;pre>&lt;code>git remote origin set-url http://oauth2:access-token@host.com/user/repo.git
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>完成后 &lt;code>push&lt;/code> &lt;code>pull&lt;/code> &lt;code>fetch&lt;/code> 操作都会使用这个链接&lt;/li>
&lt;/ol></content><category scheme="http://blog.wss.cool/categories/git/" term="git" label="git"/><category scheme="http://blog.wss.cool/tags/api/" term="api" label="api"/></entry><entry><title type="text">可编辑元素</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/dom/%E5%8F%AF%E7%BC%96%E8%BE%91%E5%85%83%E7%B4%A0/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/dom/%E5%8F%AF%E7%BC%96%E8%BE%91%E5%85%83%E7%B4%A0/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-04-22T22:48:25+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">可编辑元素 1 2 3 4 &amp;lt;!-- vue --&amp;gt; &amp;lt;p class=&amp;#34;content&amp;#34; v-text=&amp;#34;item.title&amp;#34; @keydown=&amp;#34;onEnter&amp;#34; @dblclick=&amp;#34;turnOnEditable&amp;#34; @blur=&amp;#34;(e)=&amp;gt;{titleBlur(e, index)}&amp;#34;&amp;gt; {{item.title}} &amp;lt;/p&amp;gt; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21……</summary><content type="html">&lt;h2 id="可编辑元素">可编辑元素&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="c">&amp;lt;!-- vue --&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;content&amp;#34;&lt;/span> &lt;span class="na">v-text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;item.title&amp;#34;&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="na">keydown&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;onEnter&amp;#34;&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="na">dblclick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;turnOnEditable&amp;#34;&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="na">blur&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;(e)=&amp;gt;{titleBlur(e, index)}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
{{item.title}}
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="c1">// js
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">methods&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 修改标题，回车时失去焦点
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">onEnter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">keyCode&lt;/span>&lt;span class="o">===&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="nx">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">target&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">blur&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="c1">// 失去焦点时，保存内容，并将元素修改为不可编辑
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">titleBlur&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">index&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">target&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">innerText&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onTitleChange&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="nx">title&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="nx">title&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="p">});&lt;/span>
&lt;span class="nx">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">target&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setAttribute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;contenteditable&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="c1">// 双击元素时，将其变为可编辑状态，并获取焦点。
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">turnOnEditable&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="nx">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">target&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setAttribute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;contenteditable&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">target&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">focus&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">range&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getSelection&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="c1">//创建range
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">range&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">selectAllChildren&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">target&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="c1">//range 选择obj下所有子内容
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">range&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">collapseToEnd&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="c1">// 光标放到最后
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>html部分是基于vue的，不过也很容易用其他方式实现。这里实现的是双击元素后，将其变为可编辑模式，就是设置contenteditable属性，这个属性直接写在标签中也是可以的。
失去焦点时，将contenteditable属性置为false。
回车时，失去焦点，会触发blur事件。其中还有个操作光标的事件，因为可能出现focus后，光标在开始位置的问题。&lt;/p>
&lt;p>MDN介绍&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/HTML/Content_Editable">Content_Editable&lt;/a>&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="http://blog.wss.cool/categories/dom/" term="DOM" label="DOM"/></entry><entry><title type="text">常用DOM操作</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E5%B8%B8%E7%94%A8dom%E6%93%8D%E4%BD%9C.html"/><id>http://blog.wss.cool/%E5%B8%B8%E7%94%A8dom%E6%93%8D%E4%BD%9C.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-04-22T19:20:48+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">上传图片时，怎么拿到图片的src地址？ input选中图片以后，只是得到了file对象……</summary><content type="html">&lt;h2 id="上传图片时怎么拿到图片的src地址">上传图片时，怎么拿到图片的src地址？&lt;/h2>
&lt;p>input选中图片以后，只是得到了file对象，如果想在img中显示该图片的话，并不知道src，所以想得到src还需要额外的操作。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kd">function&lt;/span> &lt;span class="nx">getObjectURL&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">file&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createObjectURL&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">undefined&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="c1">// basic
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createObjectURL&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">file&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">URL&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">undefined&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="c1">// mozilla(firefox)
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">URL&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createObjectURL&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">file&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">webkitURL&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">undefined&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="c1">// webkit or chrome
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">webkitURL&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createObjectURL&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">file&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">url&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="js操作样式class">JS操作样式class&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;c&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toggle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">remove&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;c&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;c&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// false 因为&amp;#34;c&amp;#34;上面remove掉了
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">classList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toString&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">className&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="原生获取真是宽高">原生获取真是宽高&lt;/h2>
&lt;p>不知道为什么用#${divID}会报错，只能用div[]选择器了，id=后面要用单引号。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">textElement&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">querySelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`div[id=&amp;#39;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">divID&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">&amp;#39;] .ckeditor`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">width&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">textElement&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">offsetWidth&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">height&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">textElement&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">offsetHeight&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="promise-asyncawait-获取图片原始尺寸">promise async/await 获取图片原始尺寸&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="nx">async&lt;/span> &lt;span class="nx">funciton&lt;/span> &lt;span class="nx">getImageInfo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">image_res_url&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Promise&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">width&lt;/span>: &lt;span class="kt">number&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">height&lt;/span>: &lt;span class="kt">number&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">image&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Image&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">src&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">image_res_url&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">promise&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Promise&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">width&lt;/span>: &lt;span class="kt">number&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">height&lt;/span>: &lt;span class="kt">number&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">resolve&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">reject&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">resolve&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="nx">width&lt;/span>: &lt;span class="kt">image.naturalWidth&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">height&lt;/span>: &lt;span class="kt">image.naturalHeight&lt;/span>&lt;span class="p">});&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">promise&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="js复制到剪切板chrome-66-支持">JS复制到剪切板(chrome 66+ 支持)&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">navigator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clipboard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">writeText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;888&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Async: Copying to clipboard was successful!&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Async: Could not copy text: &amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="处理粘贴事件paste">处理粘贴事件(paste)&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">xxxElement&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;paste&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">preventDefault&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clipboardData&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clipboardData&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getData&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clipboardData&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;text/plain&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clipboardData&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clipboardData&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getData&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clipboardData&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Text&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">execCommand&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;insertHTML&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">text&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="获取dataset">获取dataset&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">target&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dataset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="mouseevent">mouseEvent&lt;/h2>
&lt;p>click事件实际上也是一个mouseEvent事件。mouseEvent中有一个属性&lt;code>path&lt;/code>，它可以看到触发事件的路径，从触发了事件的元素开始，以及他的所有父元素，一直到document然后是window。&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="http://blog.wss.cool/categories/dom/" term="DOM" label="DOM"/></entry><entry><title type="text">熵与代码</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%BF%83%E5%BE%97/%E7%86%B5%E4%B8%8E%E4%BB%A3%E7%A0%81/"/><id>http://blog.wss.cool/posts/%E5%BF%83%E5%BE%97/%E7%86%B5%E4%B8%8E%E4%BB%A3%E7%A0%81/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-04-22T10:29:53+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">熵：宇宙的终极规则--读书笔记📒。如果不施加外力，事物永远向着更混乱的状态发展。</summary><content type="html">&lt;p>看了阮一峰的博客&lt;a href="http://www.ruanyifeng.com/blog/2017/04/entropy.html">《熵：宇宙的终极规则》&lt;/a>，略做记录📝。&lt;/p>
&lt;h2 id="熵是什么">熵是什么？&lt;/h2>
&lt;p>科学家们发现，能量转换总是伴随这损耗，且无法避免。损耗掉的这部分能量就叫做熵。后来总结成来热力学第二定律：能量转换总是产生熵。&lt;/p>
&lt;blockquote>
&lt;p>比如电能转化机械能不能完全转化，比如设计的代码转化为实际的代码总会产生bug。&lt;/p>
&lt;/blockquote>
&lt;p>这里说的损耗是说能量转换成来预期外的状态，而不是凭空消失来。转化越多，新的状态就越多，状态多就是可能性多，表示混乱。换一种说法：能量转换就会让系统的混乱度增加，熵就是系统的混乱度。&lt;/p>
&lt;p>可以总结出一个道理。如果不施加外力影响，事物永远向着更混乱的状态发展。&lt;/p>
&lt;h2 id="熵与代码">熵与代码&lt;/h2>
&lt;p>如果把熵引入到软件开发中。从需求转换为程序设计，再从程序设计转换成代码，这都想到与能量转换，就会产生熵，这里的熵就是bug，或者复杂度，或者阅读难度。&lt;/p>
&lt;p>软件行业中已经有了一些手段来治理这些熵。写代码要有规范，要有review执行规范。要有测试流程，发现并治理bug。如果放松来对熵的警惕，熵会在系统中越来越多，系统越来越混乱，最后会破坏系统。也就是代码越来越混乱，变得难以维护和扩展，最后系统无法使用。&lt;/p>
&lt;p>所以，由于热力学第二定律，写代码有bug是一件很正常的事。为了治理熵来让系统长治久安，采取“规范、review和测试”等治理熵的外力也是很必要的。&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/" term="读书笔记" label="读书笔记"/></entry><entry><title type="text">获取滚动高度</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/javascript/%E8%8E%B7%E5%8F%96%E6%BB%9A%E5%8A%A8%E9%AB%98%E5%BA%A6/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/javascript/%E8%8E%B7%E5%8F%96%E6%BB%9A%E5%8A%A8%E9%AB%98%E5%BA%A6/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-04-18T01:45:53+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">获取滚动高度 1 2 3 4 5 6 7 8 9 10 11 function getPageScrollY() { let yScroll; if (self.pageYOffset) { yScroll = self.pageYOffset; } else if (document.documentElement &amp;amp;&amp;amp; document.documentElement.scrollTop) { // Explorer 6 Strict yScroll = document.documentElement.scrollTop;……</summary><content type="html">&lt;h2 id="获取滚动高度">获取滚动高度&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">function&lt;/span> &lt;span class="nx">getPageScrollY&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">yScroll&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">pageYOffset&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">yScroll&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">pageYOffset&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">documentElement&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">documentElement&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">scrollTop&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="c1">// Explorer 6 Strict
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">yScroll&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">documentElement&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">scrollTop&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="c1">// all other Explorers
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">yScroll&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">scrollTop&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">yScroll&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>也可以window.scrollY&lt;/p></content><category scheme="http://blog.wss.cool/categories/javascript/" term="JavaScript" label="JavaScript"/><category scheme="http://blog.wss.cool/tags/api/" term="api" label="api"/></entry><entry><title type="text">Git报错</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%B7%A5%E5%85%B7/git/git%E6%8A%A5%E9%94%99/"/><id>http://blog.wss.cool/posts/%E5%B7%A5%E5%85%B7/git/git%E6%8A%A5%E9%94%99/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-04-18T01:43:23+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Perission denied 在切换分支时，不能切换，报了这个错。 可能是因为 vuecli 的进程在控制着某个文件。将 vuecli 的命……</summary><content type="html">&lt;h2 id="perission-denied">Perission denied&lt;/h2>
&lt;p>在切换分支时，不能切换，报了这个错。&lt;/p>
&lt;p>可能是因为 vuecli 的进程在控制着某个文件。将 vuecli 的命令行关了就可以解决问题了。&lt;/p></content><category scheme="http://blog.wss.cool/categories/git/" term="git" label="git"/></entry><entry><title type="text">Npm与yarn</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/npm%E4%B8%8Eyarn/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/npm%E4%B8%8Eyarn/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-04-18T01:31:26+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">设置npm和yarn使用淘宝仓库，设置sass/electron快速下载地址。</summary><content type="html">&lt;h2 id="yarn">yarn&lt;/h2>
&lt;h3 id="淘宝的镜像">淘宝的镜像&lt;/h3>
&lt;pre>&lt;code>yarn config set registry https://registry.npm.taobao.org --global
yarn config set disturl https://npm.taobao.org/dist --global
// 额外设置一些常用的库
yarn config set electron_mirror https://npm.taobao.org/mirrors/electron/ -g
yarn config set sass_binary_site https://npm.taobao.org/mirrors/node-sass/ -g
yarn config set phantomjs_cdnurl https://npm.taobao.org/mirrors/phantomjs/ -g
yarn config set chromedriver_cdnurl https://cdn.npm.taobao.org/dist/chromedriver -g
yarn config set operadriver_cdnurl https://cdn.npm.taobao.org/dist/operadriver -g
yarn config set fse_binary_host_mirror https://npm.taobao.org/mirrors/fsevents -g
&lt;/code>&lt;/pre>&lt;h2 id="npm">npm&lt;/h2>
&lt;pre>&lt;code>npm config set registry https://registry.npm.taobao.org
npm config set disturl https://npm.taobao.org/dist
npm config set electron_mirror https://npm.taobao.org/mirrors/electron/
npm config set sass_binary_site https://npm.taobao.org/mirrors/node-sass/
npm config set phantomjs_cdnurl https://npm.taobao.org/mirrors/phantomjs/
&lt;/code>&lt;/pre>&lt;h3 id="npm设置代理">npm设置代理&lt;/h3>
&lt;pre>&lt;code>npm config set proxy http://127.0.0.1:1080
&lt;/code>&lt;/pre></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="http://blog.wss.cool/tags/api/" term="api" label="api"/></entry><entry><title type="text">应该知道的</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%BF%83%E5%BE%97/%E5%BA%94%E8%AF%A5%E7%9F%A5%E9%81%93%E7%9A%84/"/><id>http://blog.wss.cool/posts/%E5%BF%83%E5%BE%97/%E5%BA%94%E8%AF%A5%E7%9F%A5%E9%81%93%E7%9A%84/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-04-18T01:28:32+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Bad architecture causes more problems than bad code. You will spend more time thinking than coding. The best programmers are always building things. There’s always a better way. Code reviews by your peers will make all……</summary><content type="html">&lt;ul>
&lt;li>Bad architecture causes more problems than bad code.&lt;/li>
&lt;li>You will spend more time thinking than coding.&lt;/li>
&lt;li>The best programmers are always building things.&lt;/li>
&lt;li>There’s always a better way.&lt;/li>
&lt;li>Code reviews by your peers will make all of you better.&lt;/li>
&lt;li>Fewer features for better code is always the right answer in the end.&lt;/li>
&lt;li>Don’t reinvent the wheel, library code is there to help.&lt;/li>
&lt;li>If it’s not tested, it doesn’t work.&lt;/li>
&lt;li>Code that’s hard to understand is hard to maintain.&lt;/li>
&lt;li>Code that’s hard to maintain is next to useless.&lt;/li>
&lt;li>Always know how your business makes money, that determines who gets paid what.&lt;/li>
&lt;li>If you want to feel important as a software developer, work at a tech company.&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>你将花费更多的时间思考而不是编码。&lt;/li>
&lt;li>不良的体系结构比不良的代码引起更多的问题。&lt;/li>
&lt;li>最好的程序员总是在构建东西。&lt;/li>
&lt;li>总会有更好的方法。&lt;/li>
&lt;li>同行的代码审查将使所有人变得更好。&lt;/li>
&lt;li>最终，正确的答案就是更少的功能来获得更好的代码。&lt;/li>
&lt;li>如果未测试，它将无法正常工作。&lt;/li>
&lt;li>不要重新发明轮子，库代码可以为您提供帮助。&lt;/li>
&lt;li>难以理解的代码难以维护。&lt;/li>
&lt;li>难以维护的代码几乎是无用的。&lt;/li>
&lt;li>始终知道您的企业是如何赚钱的，这决定了谁能得到酬劳。&lt;/li>
&lt;li>如果您想以软件开发人员的身份感到重要，请在技术公司工作。&lt;/li>
&lt;/ol></content><category scheme="http://blog.wss.cool/categories/%E8%A1%8C%E4%B8%9A%E6%88%90%E9%95%BF/" term="行业成长" label="行业成长"/></entry><entry><title type="text">nginx转发自定义header</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E6%9C%8D%E5%8A%A1%E5%99%A8/nginx%E5%AF%BC%E8%87%B4%E7%9A%84bug/"/><id>http://blog.wss.cool/posts/%E6%9C%8D%E5%8A%A1%E5%99%A8/nginx%E5%AF%BC%E8%87%B4%E7%9A%84bug/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-04-18T01:24:25+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">nginx forwards custom headers</summary><content type="html">&lt;h2 id="什么情况下出现了bug">什么情况下出现了bug？&lt;/h2>
&lt;p>后端代码使用 spring boot 实现了一个 github oauth2 认证登录的 client 。将代码附属到服务器以后，请求经过 nginx 反向代理，java程序报错。&lt;/p>
&lt;h2 id="表现">表现&lt;/h2>
&lt;p>报错&lt;/p>
&lt;pre>&lt;code>Authentication request failed: org.springframework.security.oauth2.core.OAuth2AuthenticationException: [invalid_redirect_uri_parameter]
&lt;/code>&lt;/pre>&lt;h2 id="原因">原因&lt;/h2>
&lt;p>是nginx的导致的，可能是 nginx 转发请求的时候不会带着3个自定义header&lt;/p>
&lt;h2 id="解决方法">解决方法&lt;/h2>
&lt;p>修改 nginx 配置和 spring boot 的 tomcat 配置，处理3个 header 。&lt;/p>
&lt;p>nginx配置&lt;/p>
&lt;pre>&lt;code>proxy_set_header HOST $host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;
&lt;/code>&lt;/pre>&lt;p>application.yml&lt;/p>
&lt;pre>&lt;code>server:
tomcat:
remote-ip-header: &amp;quot;X-Forwarded-For&amp;quot;
protocol-header: &amp;quot;X-Forwarded-Proto&amp;quot;
protocol-header-https-value: &amp;quot;https&amp;quot;
&lt;/code>&lt;/pre></content><category scheme="http://blog.wss.cool/categories/nginx/" term="nginx" label="nginx"/><category scheme="http://blog.wss.cool/tags/bug/" term="bug" label="bug"/><category scheme="http://blog.wss.cool/tags/http-header/" term="http header" label="http header"/></entry><entry><title type="text">JavaScript</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/javascript/javascript/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/javascript/javascript/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-04-04T02:13:49+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">避免高频率调用 1 2 3 4 5 6 function throttle(method, context) { if (method.tId) clearTimeout(method.tId); method.tId = setTimeout(function () { method.call(context); }, 200); } ES6新语法--扩展运算符……</summary><content type="html">&lt;h2 id="避免高频率调用">避免高频率调用&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">function&lt;/span> &lt;span class="nx">throttle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">method&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">method&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">tId&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nx">clearTimeout&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">method&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">tId&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">method&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">tId&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">setTimeout&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">method&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">context&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="mi">200&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="es6新语法--扩展运算符三个点">ES6新语法--扩展运算符（三个点）&lt;/h2>
&lt;h3 id="第二个参数以及之后的任意多个参数都会被放到values数组中">第二个参数以及之后的任意多个参数都会被放到values数组中&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">function&lt;/span> &lt;span class="nx">a&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">arr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...&lt;/span>&lt;span class="nx">values&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">arr&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">values&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">a&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// [&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;]
&lt;/span>&lt;span class="c1">// [1, 2, 3]
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="合并数组">合并数组&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="c1">// ES5 的合并数组
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">arr1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">concat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">arr2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">arr3&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// ES6 的合并数组
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">[...&lt;/span>&lt;span class="nx">arr1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...&lt;/span>&lt;span class="nx">arr2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...&lt;/span>&lt;span class="nx">arr3&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="与解构赋值结合">与解构赋值结合&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">111&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">222&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">333&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">444&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="c1">// ES5
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">list&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nx">rest&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">list&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">slice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">//a 111
&lt;/span>&lt;span class="c1">//b [111,222,333,444]
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="c1">// ES6
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...&lt;/span>&lt;span class="nx">rest&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">list&lt;/span>
&lt;span class="c1">//a 111
&lt;/span>&lt;span class="c1">//b [111,222,333,444]
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="js正则">js正则&lt;/h2>
&lt;p>制表符tab \t&lt;br>
换行符 \r&lt;br>
汉字 \S&lt;br>
任意 .&lt;br>
小写字母 [a-z]&lt;/p>
&lt;h2 id="数组排序">数组排序&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">var&lt;/span> &lt;span class="nx">numbers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="nx">numbers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="数组的every方法">数组的every方法&lt;/h2>
&lt;p>every方法可以中断循环&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">contentList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">every&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">content&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">index&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">element&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">content&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">contentList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">splice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="事件">事件&lt;/h2>
&lt;pre>&lt;code>// 取消默认行为：
e.preventDefault()
// 停止冒泡：
e.stopPropagation();
&lt;/code>&lt;/pre>&lt;h2 id="将promise改装成await">将promise改装成await&lt;/h2>
&lt;p>将一个element UI库的confirm改装成await：这个confirm方法原来返回的是promise，resolve在try中return，reject在catch中return。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="kr">public&lt;/span> &lt;span class="nx">async&lt;/span> &lt;span class="nx">confirm_async&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">title&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">vue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$confirm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">title&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">undefined&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>调用confirm_async方法：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="kr">const&lt;/span> &lt;span class="nx">isConfirm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ed_showConfirm_async&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;xx&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;xx&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">isConfirm&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="kc">undefined&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这两个语句所在方法或函数，必须是一个async的函数或方法。这样就不需要把后续的操作都写在一个then方法中了。&lt;/p>
&lt;h2 id="array-reduce数组的reduce方法">Array reduce，数组的reduce方法&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nb">Object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">keys&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">obj&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">reduce&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">memo&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">hooks&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">indexOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">memo&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">obj&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">memo&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="p">{});&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="严格模式">严格模式&lt;/h2>
&lt;pre>&lt;code>&amp;quot;use strict&amp;quot;;
&lt;/code>&lt;/pre>&lt;ol>
&lt;li>禁止this关键字指向全局对象&lt;/li>
&lt;/ol></content><category scheme="http://blog.wss.cool/categories/javascript/" term="JavaScript" label="JavaScript"/><category scheme="http://blog.wss.cool/tags/api/" term="api" label="api"/></entry><entry><title type="text">开平方</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/square-root-dichotomy-and-newton-iteration.html"/><id>http://blog.wss.cool/square-root-dichotomy-and-newton-iteration.html</id><updated>2020-04-03T11:36:01+08:00</updated><published>2020-04-03T11:36:01+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">使用二分法或牛顿迭代法计算开平方</summary><content type="html">&lt;p>计算开平方可以用二分查找来计算。
如：求根号10&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="c1">// 用二分查找，精度0.0001
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">二分开根号&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">start&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">x&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">count&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">start&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">end&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nx">start&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">sq&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mid&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">mid&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">Math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">sq&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nx">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">mid&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">count&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">sq&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nx">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">start&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mid&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">sq&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nx">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mid&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">mid&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">count&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">count&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">二分开根号&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// 3.1622695922851562 18次循环
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="c1">// 用牛顿迭代，精度0.0001
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">牛顿开根号&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// n_ = (n+a/n)/2;
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">n_&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="nx">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">Math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nx">n_&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">n_&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">n_&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="nx">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">count&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">count&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">牛顿开根号&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// 3.162277660168379 6次循环
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="牛顿迭代法适用条件">牛顿迭代法适用条件&lt;/h1>
&lt;p>求函数f(x)=0的解α。&lt;br>
必须满足如下条件才能用牛顿迭代法求方程的近似解。&lt;br>
函数的导数不为0；x属于区间[α−r, α+r]；x0为α的近似值，即r&amp;gt;=|a-x0|;&lt;br>
函数在[α−r, α+r]内二阶导数连续；&lt;br>
x0足够接近根 α。&lt;/p>
&lt;p>&lt;a href="https://zh.wikipedia.org/wiki/%E7%89%9B%E9%A1%BF%E6%B3%95">牛顿法的维基百科&lt;/a>&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E7%AE%97%E6%B3%95/" term="算法" label="算法"/></entry><entry><title type="text">MySQL</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/mysql.html"/><id>http://blog.wss.cool/mysql.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-04-02T22:24:03+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">安装MySQL 1 2 sudo apt-get –y install mysql-server mysql-client sudo apt-get install mysql-server mysql-client 服务器环境为腾讯云Ubuntu 16.04.1 LTS，使……</summary><content type="html">&lt;h2 id="安装mysql">安装MySQL&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">sudo apt-get –y install mysql-server mysql-client
sudo apt-get install mysql-server mysql-client
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>服务器环境为腾讯云Ubuntu 16.04.1 LTS，使用上面的命令安装mysql服务端与客户端。安装完成后会出现一个设置密码的界面，输入两次密码即完成了安装，然后使用 &lt;code>netstat -anp&lt;/code> 命令，会发现 &lt;code>3306&lt;/code> 端口正在被监听，即说明安装成功且已运行。&lt;/p>
&lt;h2 id="检查mysql是否启动">检查MySQL是否启动&lt;/h2>
&lt;p>&lt;code>ps -ef | grep mysqld&lt;/code>
会看到类似结果说明正在运行：&lt;/p>
&lt;pre>&lt;code>mysql 519 1 0 17:44 ? 00:00:00 /usr/sbin/mysqld
&lt;/code>&lt;/pre>&lt;h2 id="开关mysql">开关MySQL&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="c1"># 开启&lt;/span>
sudo /etc/init.d/mysql start
&lt;span class="c1"># 关闭命令:&lt;/span>
sudo /etc/init.d/mysql stop
&lt;span class="c1"># 重启&lt;/span>
sudo /etc/init.d/mysql restart
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="命令行中连接数据库">命令行中连接数据库：&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="n">mysql&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">u&lt;/span> &lt;span class="n">root&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">p&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="退出数据库">退出数据库：&lt;/h2>
&lt;pre>&lt;code>exit
&lt;/code>&lt;/pre>&lt;h2 id="建库删库">建库/删库&lt;/h2>
&lt;p>CREATE DATABASE &lt;code>yys&lt;/code> DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
DROP DATABASE &lt;code>yys&lt;/code>;&lt;/p>
&lt;h2 id="建表">建表&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">CREATE&lt;/span> &lt;span class="k">TABLE&lt;/span> &lt;span class="k">IF&lt;/span> &lt;span class="k">NOT&lt;/span> &lt;span class="k">EXISTS&lt;/span> &lt;span class="o">`&lt;/span>&lt;span class="n">yuhun&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="o">`&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">`&lt;/span> &lt;span class="nb">INT&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="o">`&lt;/span>&lt;span class="k">position&lt;/span>&lt;span class="o">`&lt;/span> &lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">400&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="o">`&lt;/span>&lt;span class="k">type&lt;/span>&lt;span class="o">`&lt;/span> &lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">400&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="o">`&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="o">`&lt;/span> &lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">400&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">COMMENT&lt;/span> &lt;span class="s1">&amp;#39;表注释&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="o">`&lt;/span>&lt;span class="n">bs&lt;/span>&lt;span class="o">`&lt;/span> &lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">400&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">COMMENT&lt;/span> &lt;span class="s1">&amp;#39;爆伤&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="o">`&lt;/span>&lt;span class="n">bj&lt;/span>&lt;span class="o">`&lt;/span> &lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">400&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">COMMENT&lt;/span> &lt;span class="s1">&amp;#39;表注释&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="k">PRIMARY&lt;/span> &lt;span class="k">KEY&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="o">`&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">`&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>&lt;span class="n">ENGINE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">InnoDB&lt;/span> &lt;span class="k">DEFAULT&lt;/span> &lt;span class="n">CHARSET&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">utf8&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="增删改查">增删改查&lt;/h2>
&lt;h3 id="where">where&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">SELECT&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="k">FROM&lt;/span> &lt;span class="n">Customers&lt;/span>
&lt;span class="k">WHERE&lt;/span> &lt;span class="n">CustomerID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Operator&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>=&lt;/td>
&lt;td>Equal&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;lt;&amp;gt;&lt;/td>
&lt;td>Not equal. Note: In some versions of SQL this operator may be written as !=&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;gt;&lt;/td>
&lt;td>Greater than&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;lt;&lt;/td>
&lt;td>Less than&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;gt;=&lt;/td>
&lt;td>Greater than or equal&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;lt;=&lt;/td>
&lt;td>Less than or equal&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>BETWEEN&lt;/td>
&lt;td>Between an inclusive range&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>LIKE&lt;/td>
&lt;td>Search for a pattern&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IN&lt;/td>
&lt;td>To specify multiple possible values for a column&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="update">update&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">UPDATE&lt;/span> &lt;span class="k">table_name&lt;/span>
&lt;span class="k">SET&lt;/span> &lt;span class="n">column1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">value1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">column2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">value2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...&lt;/span>
&lt;span class="k">WHERE&lt;/span> &lt;span class="n">condition&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="delete">delete&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">DELETE&lt;/span> &lt;span class="k">FROM&lt;/span> &lt;span class="k">table_name&lt;/span>
&lt;span class="k">WHERE&lt;/span> &lt;span class="n">condition&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="insert">insert&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">INSERT&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="k">table_name&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">column1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">column2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">column3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...)&lt;/span>
&lt;span class="k">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">value1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">value2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">value3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>use demo
select zhuanye from runoob_tbl where id=1;
insert into pe (id,name) values (1,'前');&lt;/p>
&lt;h2 id="导入">导入&lt;/h2>
&lt;p>先将数据处理成一定格式，比如将excel中的数据复制到文档中，这些数据每一行的字段间是被制表符\t分隔，行与行指间被换行符\r\n分隔。&lt;br>
如果excel中的数据不是很复杂，没有复杂的文本，没有换行之类的字符，就可以直接保存，然后将保存的文件导入数据库。如果文本比较复杂，比如招公务员的岗位的excel的文本中就有很多换行符，这时需要自己处理一下，是整个文本以特定的字符代替\t\r\n来分隔文本，因为导入数据的时候，mysql会考\t\n之类的字符来划分数据。比如：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">load&lt;/span> &lt;span class="k">data&lt;/span> &lt;span class="k">local&lt;/span> &lt;span class="n">infile&lt;/span> &lt;span class="s2">&amp;#34;~/yuhun.txt&amp;#34;&lt;/span> &lt;span class="k">into&lt;/span> &lt;span class="k">table&lt;/span> &lt;span class="n">yuhun&lt;/span> &lt;span class="nb">CHARACTER&lt;/span> &lt;span class="k">SET&lt;/span> &lt;span class="n">UTF8&lt;/span> &lt;span class="n">fields&lt;/span> &lt;span class="n">terminated&lt;/span> &lt;span class="k">by&lt;/span> &lt;span class="s2">&amp;#34;\t&amp;#34;&lt;/span> &lt;span class="n">lines&lt;/span> &lt;span class="n">terminated&lt;/span> &lt;span class="k">by&lt;/span> &lt;span class="s2">&amp;#34;\n&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我将真正换行的地方替换成了&amp;amp;符号。&lt;br>
向服务器上传文件
scp /Users/wangshushuo/Desktop/yuhun.txt &lt;a href="mailto:ubuntu@58.87.109.73">ubuntu@58.87.109.73&lt;/a>:~/yuhun.txt&lt;/p>
&lt;p>&lt;a href="https://dev.mysql.com/doc/refman/8.0/en/load-data.html">导入官方语法如下&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">LOAD&lt;/span> &lt;span class="k">DATA&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">LOW_PRIORITY&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">CONCURRENT&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="k">LOCAL&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">INFILE&lt;/span> &lt;span class="s1">&amp;#39;file_name&amp;#39;&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="k">REPLACE&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="k">IGNORE&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">INTO&lt;/span> &lt;span class="k">TABLE&lt;/span> &lt;span class="n">tbl_name&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">PARTITION&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">partition_name&lt;/span> &lt;span class="p">[,&lt;/span> &lt;span class="n">partition_name&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">...)]&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nb">CHARACTER&lt;/span> &lt;span class="k">SET&lt;/span> &lt;span class="n">charset_name&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="err">{&lt;/span>&lt;span class="n">FIELDS&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">COLUMNS&lt;/span>&lt;span class="err">}&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">TERMINATED&lt;/span> &lt;span class="k">BY&lt;/span> &lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">[[&lt;/span>&lt;span class="n">OPTIONALLY&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">ENCLOSED&lt;/span> &lt;span class="k">BY&lt;/span> &lt;span class="s1">&amp;#39;char&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">ESCAPED&lt;/span> &lt;span class="k">BY&lt;/span> &lt;span class="s1">&amp;#39;char&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">LINES&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">STARTING&lt;/span> &lt;span class="k">BY&lt;/span> &lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">TERMINATED&lt;/span> &lt;span class="k">BY&lt;/span> &lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="k">IGNORE&lt;/span> &lt;span class="nb">number&lt;/span> &lt;span class="err">{&lt;/span>&lt;span class="n">LINES&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="k">ROWS&lt;/span>&lt;span class="err">}&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">[(&lt;/span>&lt;span class="n">col_name_or_user_var&lt;/span>
&lt;span class="p">[,&lt;/span> &lt;span class="n">col_name_or_user_var&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">...)]&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="k">SET&lt;/span> &lt;span class="n">col_name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">{&lt;/span>&lt;span class="n">expr&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="k">DEFAULT&lt;/span>&lt;span class="err">}&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">[,&lt;/span> &lt;span class="n">col_name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">{&lt;/span>&lt;span class="n">expr&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="k">DEFAULT&lt;/span>&lt;span class="err">}&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">...]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>一个例子：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">LOAD&lt;/span> &lt;span class="k">DATA&lt;/span> &lt;span class="n">INFILE&lt;/span> &lt;span class="s1">&amp;#39;file&amp;#39;&lt;/span>
&lt;span class="k">IGNORE&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="k">TABLE&lt;/span> &lt;span class="k">table&lt;/span>
&lt;span class="nb">CHARACTER&lt;/span> &lt;span class="k">SET&lt;/span> &lt;span class="n">UTF8&lt;/span>
&lt;span class="n">FIELDS&lt;/span> &lt;span class="n">TERMINATED&lt;/span> &lt;span class="k">BY&lt;/span> &lt;span class="s1">&amp;#39;;&amp;#39;&lt;/span>
&lt;span class="n">OPTIONALLY&lt;/span> &lt;span class="n">ENCLOSED&lt;/span> &lt;span class="k">BY&lt;/span> &lt;span class="s1">&amp;#39;&amp;#34;&amp;#39;&lt;/span>
&lt;span class="n">LINES&lt;/span> &lt;span class="n">TERMINATED&lt;/span> &lt;span class="k">BY&lt;/span> &lt;span class="s1">&amp;#39;\n&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="远程连接新建一个帐号帐号名不能为root">远程连接新建一个帐号（帐号名不能为root）&lt;/h2>
&lt;p>如：添加一个用户名为db_user，密码为db_pass，授权为% （%表示所有外围IP能连接）对db_name数据库所有权限，命令如下&lt;/p>
&lt;pre>&lt;code>/# mysql -uroot -p
MySQL [(none)]&amp;gt; grant all privileges on db_name.* to db_user@’%’ identified by ‘db_pass’; #授权语句，特别注意有分号
MySQL [(none)]&amp;gt; flush privileges;
MySQL [(none)]&amp;gt; exit; #退出数据库控制台，特别注意有分号
&lt;/code>&lt;/pre>&lt;h2 id="表结构">表结构&lt;/h2>
&lt;h2 id="表连接">表连接&lt;/h2>
&lt;p>使用了连接语句以后，这两张表就被拼成了一张表。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">SELECT&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="k">FROM&lt;/span> &lt;span class="n">A&lt;/span>
&lt;span class="k">INNER&lt;/span> &lt;span class="k">JOIN&lt;/span> &lt;span class="n">B&lt;/span> &lt;span class="k">ON&lt;/span> &lt;span class="n">A&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">book_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">book_id&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>四种连接会像下图一样拼装2个表，空白的地方会被填充null&lt;/p>
&lt;p>&lt;img src="http://blog.wss.cool/images/mysql-1.jpg" alt="表连接1">&lt;/p>
&lt;p>然后where等语句就可以像操作一张表一样了。&lt;/p>
&lt;h2 id="实践">实践&lt;/h2>
&lt;p>评论回帖表&lt;/p>
&lt;p>轮子哥 vczh
专业造轮子，拉黑抢前排。gaclib.net
75 人赞同了该回答
CommentID: GUID (primary key)
UnderWhichAnswer: GUID (index + foreign key)
ReplyWhichComment: GUID (nullable + foreign key)
Author: GUID (foreign key)
Time: datetime (ascend)
Content: string&lt;/p>
&lt;h2 id="性能测试">性能测试&lt;/h2>
&lt;p>mysqlslap是mysql自带的测试工具&lt;/p>
&lt;p>下面为测试一条sql的效率&lt;/p>
&lt;pre>&lt;code>mysqlslap --create-schema mind -q &amp;quot;select * from test1&amp;quot; --number-of-queries=100 -uroot -p123456
&lt;/code>&lt;/pre>&lt;p>其中&lt;code>--create-schema&lt;/code>后为数据库名，&lt;code>-q&lt;/code>后为sql语句，&lt;code>--number-of-queries&lt;/code>为重复次数。&lt;/p>
&lt;h2 id="工具">工具&lt;/h2>
&lt;h3 id="phpmyadmin">phpmyadmin&lt;/h3>
&lt;p>通过docker使用：拉镜像，然后运行，然后访问本地的&lt;a href="http://localhost:8080">localhost:8080&lt;/a>&lt;/p>
&lt;pre>&lt;code>docker pull phpmyadmin/phpmyadmin
docker run --name myphpadmin -d -e PMA_ARBITRARY=1 -p 8080:80 phpmyadmin/phpmyadmin
&lt;/code>&lt;/pre>&lt;h4 id="连本地的mysqlubuntu">连本地的mysql(ubuntu)&lt;/h4>
&lt;p>将&lt;code>/etc/mysql/mysql.conf.d/mysql.cnf&lt;/code>中的&lt;code>bind-address=127.0.0.1&lt;/code>改成&lt;code>bind-address=0.0.0.0&lt;/code>，使可以远程访问。&lt;/p>
&lt;p>然后使用本机ip访问(192.168.&lt;em>.&lt;/em>)，登录的主机地址也是前面那个ip&lt;/p>
&lt;h2 id="资料">资料&lt;/h2>
&lt;p>&lt;a href="https://www.yiibai.com/mysql/update-data.html">易百教程MySQL&lt;/a>
&lt;a href="https://www.kancloud.cn/thinkphp/mysql-design-optimalize/39325">Mysql设计与优化专题&lt;/a>&lt;/p></content><category scheme="http://blog.wss.cool/categories/mysql/" term="mysql" label="mysql"/><category scheme="http://blog.wss.cool/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/" term="数据库" label="数据库"/><category scheme="http://blog.wss.cool/tags/mysql/" term="mysql" label="mysql"/></entry><entry><title type="text">重构旧项目-1</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E9%87%8D%E6%9E%84%E6%97%A7%E9%A1%B9%E7%9B%AE-1.html"/><id>http://blog.wss.cool/%E9%87%8D%E6%9E%84%E6%97%A7%E9%A1%B9%E7%9B%AE-1.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-04-02T15:17:52+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">尝试优化一个旧项目的代码，将一个大文件中的部分代码封装为组件。可以降低复杂度，改善阅读代码的难度。</summary><content type="html">&lt;h2 id="背景">背景&lt;/h2>
&lt;p>这个项目有点老旧&lt;/p>
&lt;pre>&lt;code>&amp;quot;dva&amp;quot;: &amp;quot;2.1.0&amp;quot;,
&amp;quot;react&amp;quot;: &amp;quot;^16.2.0&amp;quot;,
&lt;/code>&lt;/pre>&lt;p>我打算用最新的 react 和 @reduxjs/toolkit 开始重构，旧的依赖只能使用 connect 方式来获取 store ，使用 useSelector 和 useDispatch 很方便也很易读。&lt;code>@reduxjs/toolkit&lt;/code>提供的immer和actionCreater也很好用。&lt;/p>
&lt;p>新版本的 react-redux 才提供了 useSelector 和 useDispatch ，但是新版本会导致 dva 出错。无奈放弃了新版本，还是用旧版本的 connect 。还好这不影响对代码进行组件化。&lt;/p>
&lt;p>首先重构的是一个643行的组件，它的render方法有580行。&lt;/p>
&lt;h2 id="重复代码">重复代码&lt;/h2>
&lt;p>很容易的发现了一大段重复代码&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">numbers_wrapper&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">number_item&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">number&lt;/span>&lt;span class="p">}&amp;gt;{&lt;/span>&lt;span class="nx">detail&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">properties&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">member_count&lt;/span>&lt;span class="p">}&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">text&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>&lt;span class="nx">班级总人数&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">number_item&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">number&lt;/span>&lt;span class="p">}&amp;gt;{&lt;/span>&lt;span class="nx">detail&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">properties&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">male_count&lt;/span>&lt;span class="p">}&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">text&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>&lt;span class="nx">男生人数&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">number_item&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">number&lt;/span>&lt;span class="p">}&amp;gt;{&lt;/span>&lt;span class="nx">detail&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">properties&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">female_count&lt;/span>&lt;span class="p">}&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">text&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>&lt;span class="nx">女生人数&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">number_item&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">number&lt;/span>&lt;span class="p">}&amp;gt;{&lt;/span>&lt;span class="nx">detail&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">properties&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">group_count&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">detail&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">properties&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">group_count&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">userDetail&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">detail&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)}&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">text&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>&lt;span class="nx">分组数&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">number_item&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">number&lt;/span>&lt;span class="p">}&amp;gt;{(&lt;/span>&lt;span class="nx">detail&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">properties&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">user_lecture_count&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">detail&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">properties&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">user_lecture_count&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">userDetail&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">detail&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)}&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">text&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>&lt;span class="nx">授课次数&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以将他们组织成2个组件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kd">function&lt;/span> &lt;span class="nx">NumberWithLabel&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">label&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">count&lt;/span> &lt;span class="p">})&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">number_item&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">number&lt;/span>&lt;span class="p">}&amp;gt;{&lt;/span>&lt;span class="nx">count&lt;/span>&lt;span class="p">}&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">text&lt;/span>&lt;span class="p">}&amp;gt;{&lt;/span>&lt;span class="nx">label&lt;/span>&lt;span class="p">}&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">numbers_wrapper&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">NumberWithLabel&lt;/span> &lt;span class="na">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;班级总人数&amp;#34;&lt;/span> &lt;span class="na">count&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">member_count&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">NumberWithLabel&lt;/span> &lt;span class="na">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;男生人数&amp;#34;&lt;/span> &lt;span class="na">count&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">male_count&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">NumberWithLabel&lt;/span> &lt;span class="na">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;女生人数&amp;#34;&lt;/span> &lt;span class="na">count&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">female_count&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">NumberWithLabel&lt;/span> &lt;span class="na">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;分组数&amp;#34;&lt;/span> &lt;span class="na">count&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">group_count&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">group_count&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">userId&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)}&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">NumberWithLabel&lt;/span> &lt;span class="na">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;授课次数&amp;#34;&lt;/span> &lt;span class="na">count&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{(&lt;/span>&lt;span class="nx">user_lecture_count&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">user_lecture_count&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">userId&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)}&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>数据使用 connect 获取，这样代码看起来简单读了。&lt;/p>
&lt;h2 id="封装组件">封装组件&lt;/h2>
&lt;p>然后发现了一大段代码可以封装成一个独立的组件。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">card_body&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nx">groupList&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">groupList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">map&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">group&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">index&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">group_item&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">key&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">onDrop&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">handleStudentDrop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">group&lt;/span>&lt;span class="p">)}&lt;/span> &lt;span class="na">onDragOver&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">handleStudentDragOver&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">group_item_header&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">group_item_info&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nx">group&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">i&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">trophy_icon&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">group_item_btns&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Radio&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">group_student_list_radio&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">checked&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">group&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">curGroup&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="na">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">selectCurGroup&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">group&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">)}&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">styles&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">group_student_list&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nx">group&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">members&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">group&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">members&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{{&lt;/span>
&lt;span class="nx">textAlign&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s1">&amp;#39;center&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">fontSize&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">14&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">color&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s1">&amp;#39;#666&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">}}&amp;gt;&lt;/span>&lt;span class="nx">该小组没有学生&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="nx">group&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">members&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">map&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">stu&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&amp;lt;&lt;/span>&lt;span class="nt">StudentItem&lt;/span>
&lt;span class="na">isDrage&lt;/span>
&lt;span class="na">key&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">stu&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">stu&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">group&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">group&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">gender&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">stu&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">gender&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">headimg_res_url&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">stu&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">headimg_res_url&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">stu&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">groupStuStyle&lt;/span>
&lt;span class="na">onDragStart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">handleDragStart&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">stu&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">group&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">)}&lt;/span>
&lt;span class="na">onSetLeader&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">e&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">handleSetLeader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">stu&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">group&lt;/span>&lt;span class="p">)}&lt;/span>
&lt;span class="na">onSetHeader&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">e&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">handleSetHeader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">stu&lt;/span>&lt;span class="p">)}&lt;/span>
&lt;span class="p">/&amp;gt;))&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">))&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>还有它相关的方法都是像下面👇这样的 dispatch ，大概有五六个。它们都写在 render 函数内，占用了很大的篇幅，对阅读代码有很大的影响。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">handleDragStart&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">stu&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">org_id&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">dispatch&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;classDetail/updateState&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">payload&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">onDragStudent&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">...&lt;/span>&lt;span class="nx">stu&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">org_id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:!!&lt;/span>&lt;span class="nx">org_id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我将这个 &lt;code>dispatch&lt;/code> 中的 &lt;code>action&lt;/code> 放到一个 &lt;code>action_creater.js&lt;/code> 文件中，将组建放在 &lt;code>GroupItem.jsx&lt;/code> 文件中。这可以让次要的信息不占用篇幅，主要的信息就会一目了然了。
这段代码就变成了2个组件和1个 &lt;code>action creater&lt;/code> 文件。相关的代码封装在一起，再也不用为了看一个函数而滚动300行代码或者要用搜索才能找到了。&lt;/p>
&lt;blockquote>
&lt;p>这3个文件目前都只有40-50行。&lt;/p>
&lt;/blockquote>
&lt;p>原来643行的文件，现在是490行，优化掉了150行（23%）的代码。使代码有了更好的封装，改善了阅读/维护难度。&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E6%8A%98%E8%85%BE/" term="折腾" label="折腾"/></entry><entry><title type="text">vim</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/vim.html"/><id>http://blog.wss.cool/vim.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-04-01T21:27:14+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">vim常用操作，替换、缩紧等</summary><content type="html">&lt;h2 id="替换">替换&lt;/h2>
&lt;div class="shortcodes_withTitle" title="buiiuiuiu">abbnbnbn&lt;/div>
&lt;pre>&lt;code>:[range]s/search/replace/optioins &lt;span class="shortcodes_number">1&lt;/span>
:%s/aa/bb/g &lt;span class="shortcodes_number">2&lt;/span>
:%s/aa/bb/gc &lt;span class="shortcodes_number">3&lt;/span>
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>&lt;span class="shortcodes_number">1&lt;/span> range表示搜索的范围， &lt;code>:8,10 s/&lt;/code> 表示第8-10行，&lt;code>:%s/&lt;/code> 表示全文。&lt;/li>
&lt;li>&lt;span class="shortcodes_number">2&lt;/span> &lt;code>g&lt;/code> 是一个option(global)，表示要替换所有匹配项，不加它的话只会替换第一个匹配项。&lt;/li>
&lt;li>&lt;span class="shortcodes_number">3&lt;/span> &lt;code>c&lt;/code> 是一个option(confirm)，表示替换前需要确认。&lt;/li>
&lt;/ul>
&lt;h3 id="confirm">confirm&lt;/h3>
&lt;p>加了confirm选项后，替换时会出现这样的提示，需要你回复。&lt;/p>
&lt;pre>&lt;code>replace with foo (y/n/a/q/l/^E/^Y)?
&lt;/code>&lt;/pre>&lt;table>
&lt;thead>
&lt;tr>
&lt;th align="center">回复&lt;/th>
&lt;th align="left">作用&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td align="center">y&lt;/td>
&lt;td align="left">yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center">n&lt;/td>
&lt;td align="left">no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center">a&lt;/td>
&lt;td align="left">go ahead，替换所有&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center">q&lt;/td>
&lt;td align="left">quit 取消、退出操作&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center">l&lt;/td>
&lt;td align="left">替换当前这个，然后退出操作&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center">^E/^Y&lt;/td>
&lt;td align="left">scroll the text using Ctrl-e and Ctrl-y&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="配置">配置&lt;/h2>
&lt;pre>&lt;code>set nocompatible
set number
set relativenumber
set cursorline
set wrap
set laststatus=2
set ruler
syntax on
set showmode
set showcmd
set shiftwidth=4
set tabstop=2
set expandtab
set softtabstop=2
&lt;/code>&lt;/pre>&lt;p>依次：不兼容vi，显示行号，行号是相对当前行的，光标所在的当前行高亮，换行，显示状态栏，状态栏中显示光标的位置，语法高亮开启，模式，指令，&lt;code>&amp;gt;&amp;gt;&amp;lt;&amp;lt;==&lt;/code> 操作的空格数，tab键的空格数，缩紧使用空格，tab等于几个空格&lt;/p>
&lt;h2 id="缩紧">缩紧&lt;/h2>
&lt;p>在文本上按下&amp;gt;&amp;gt;（增加一级缩进）、&amp;lt;&amp;lt;（取消一级缩进）或者==（取消全部缩进）时，每一级的字符数。&lt;/p>
&lt;h2 id="reference">reference&lt;/h2>
&lt;ul>
&lt;li>搜索与替换：&lt;a href="https://www.linux.com/training-tutorials/vim-tips-basics-search-and-replace/">https://www.linux.com/training-tutorials/vim-tips-basics-search-and-replace/&lt;/a>&lt;/li>
&lt;li>配置：&lt;a href="http://vim.spf13.com/">http://vim.spf13.com/&lt;/a>&lt;/li>
&lt;li>攻略1：&lt;a href="https://github.com/vim-china/hello-vim">https://github.com/vim-china/hello-vim&lt;/a>&lt;/li>
&lt;li>攻略2：&lt;a href="https://github.com/oldratlee/vim-practice">https://github.com/oldratlee/vim-practice&lt;/a>&lt;/li>
&lt;li>攻略3：&lt;a href="https://github.com/wsdjeg/vim-galore-zh_cn">https://github.com/wsdjeg/vim-galore-zh_cn&lt;/a>&lt;/li>
&lt;li>阮一峰：&lt;a href="https://www.ruanyifeng.com/blog/2018/09/vimrc.html">https://www.ruanyifeng.com/blog/2018/09/vimrc.html&lt;/a>&lt;/li>
&lt;/ul></content><category scheme="http://blog.wss.cool/categories/ide/" term="ide" label="ide"/></entry><entry><title type="text">ReactRouter的哲学</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/reactrouter-philosophy.html"/><id>http://blog.wss.cool/reactrouter-philosophy.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-03-31T13:11:28+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">机翻文档，新版的react-router是动态路由，它与传统的静态路由在使用上有很大的不同</summary><content type="html">&lt;h2 id="哲学">哲学&lt;/h2>
&lt;p>本指南的目的是解释使用React Router时的心智模型。 我们将其称为“动态路由”，这与您可能更熟悉的“静态路由”完全不同。&lt;/p>
&lt;h3 id="静态路由">静态路由&lt;/h3>
&lt;p>如果您使用过Rails，Express，Ember，Angular等，那么您已经使用了静态路由。 在这些框架中，您可以在进行任何渲染之前将路由声明为应用程序初始化的一部分。 React Router pre-v4也是静态的（大多数情况下）。&lt;br>
请注意在应用侦听之前如何声明路由。 我们使用的客户端路由器是类似的。 在Angular中，您可以预先声明您的路由，然后在渲染之前将它们导入顶级AppModule.&lt;br>
Ember有一个传统的routes.js文件，构建会读取并导入到应用程序中。 同样，这会在您的应用呈现之前发生。&lt;br>
尽管API不同，但它们都共享“静态路由”模型。 React Router也使用“静态路由”直到v4。要成功使用React Router，您需要忘记这一切！：o&lt;/p>
&lt;h3 id="背景故事">背景故事&lt;/h3>
&lt;p>坦率地说，我们对我们在React Router的v2版本中方向感到非常沮丧。 我们（Michael和Ryan）觉得受到API的限制，认识到我们重新实现了React（生命周期等）的部分，而且它与React给我们创作UI的心理模型不符。我们走过走廊在研讨会讨论如何应对之前的酒店。我们互相问道：“如果我们使用我们在工作室教授的模式构建路由器会是什么样子？”开发只需要几个小时，我们就有了一个概念验证，我们知道它是未来 我们想要路由。 我们最终得到的API并不是React的“外部”，这是一个由React的其余部分组成或自然落实到位的API。 我们认为你会喜欢它。&lt;/p>
&lt;h3 id="动态路由">动态路由&lt;/h3>
&lt;p>当我们说动态路由时，我们指的是在您的应用呈现时发生的路由，而不是在正在运行的应用之外的配置或约定中。 这意味着几乎所有东西都是React Router中的一个组件。 以下是对API的60秒回顾，了解它的工作原理：首先，为自己定位的环境抓住自己的路由器组件，并将其呈现在应用的顶部。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">BrowserRouter&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-router-dom&amp;#39;&lt;/span>
&lt;span class="nx">ReactDOM&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">render&lt;/span>&lt;span class="p">((&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">BrowserRouter&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">App&lt;/span>&lt;span class="o">/&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/BrowserRouter&amp;gt;&lt;/span>
&lt;span class="p">),&lt;/span> &lt;span class="nx">el&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接下来，抓取链接组件以链接到新位置：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">App&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">nav&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">Link&lt;/span> &lt;span class="nx">to&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/dashboard&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="nx">Dashboard&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/Link&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/nav&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/div&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>最后，当用户访问/仪表板时渲染Route来显示一些UI。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">App&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">nav&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">Link&lt;/span> &lt;span class="nx">to&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/dashboard&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="nx">Dashboard&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/Link&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/nav&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">Route&lt;/span> &lt;span class="nx">path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/dashboard&amp;#34;&lt;/span> &lt;span class="nx">component&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">Dashboard&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/div&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/div&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Route将呈现&lt;code>&amp;lt;Dashboard {... props} /&amp;gt;&lt;/code>，其中&lt;code>props&lt;/code>是一些特定于路由器的东西，看起来像&lt;code>{match，location，history}&lt;/code>。 如果用户不在&lt;code>/dashboard&lt;/code>，则Route将呈现为null。 这就是它的全部内容。&lt;/p>
&lt;h3 id="嵌套路由">嵌套路由&lt;/h3>
&lt;p>很多路由器都有一些“嵌套路由”的概念。如果您在v4之前使用过React Router的版本，那么您也会知道它也是如此！当您从静态路由配置移动到动态渲染路由时，如何“嵌套路由”？那么，你如何潜逃一个div？&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">App&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">BrowserRouter&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="cm">/* here&amp;#39;s a div */&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="cm">/* here&amp;#39;s a Route */&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">Route&lt;/span> &lt;span class="nx">path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/tacos&amp;#34;&lt;/span> &lt;span class="nx">component&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">Tacos&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/div&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/BrowserRouter&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="c1">// when the url matches `/tacos` this component renders
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">Tacos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">({&lt;/span> &lt;span class="nx">match&lt;/span> &lt;span class="p">})&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="c1">// here&amp;#39;s a nested div
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="cm">/* here&amp;#39;s a nested Route,
&lt;/span>&lt;span class="cm"> match.url helps us make a relative path */&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">Route&lt;/span>
&lt;span class="nx">path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">match&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">url&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;/carnitas&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">component&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">Carnitas&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="o">/&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/div&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>看看路由器没有“嵌套”API？ 路由只是一个组件，就像div一样。 因此，为了筑巢路线或div，你只需......做它。让我变得更加棘手。&lt;/p>
&lt;h3 id="响应路线">响应路线&lt;/h3>
&lt;p>考虑用户导航到&lt;code>/invoices&lt;/code>。 您的应用适用于不同的屏幕尺寸，它们具有较窄的视口，因此您只需向其显示发票列表和发票仪表板的链接。他们可以从那里更深入地导航。&lt;br>
在大屏幕上，&lt;code>/invoices&lt;/code>不是有效的路线，但在小屏幕上它是！ 为了让事情变得更有趣，请考虑一个拥有巨型手机的人。 他们可以纵向查看/发票，然后将手机旋转到横向。 突然间，我们有足够的空间来显示主 - 细节用户界面，所以你应该立即重定向！&lt;/p>
&lt;pre>&lt;code>
&lt;/code>&lt;/pre>&lt;p>当用户将手机从纵向旋转到横向时，此代码会自动将其重定向到仪表板。 该组有效路由根据用户手中的移动设备的动态特性而改变。
这只是一个例子。 还有很多其他我们可以讨论的内容，但我们总结一下这个建议：为了让你的直觉与React Router的一致，考虑组件，而不是静态路由。 考虑如何使用React的声明可组合性来解决问题，因为几乎每个“React Router问题”都可能是“React问题”。&lt;/p></content><category scheme="http://blog.wss.cool/categories/react/" term="React" label="React"/><category scheme="http://blog.wss.cool/tags/knowledge/" term="knowledge" label="knowledge"/></entry><entry><title type="text">渐变色</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/css/linear-gradient/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/css/linear-gradient/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-03-31T08:41:24+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">先说草图布局 现在工作的公司设计的页面似乎从来不考虑体验。比如说加载数据的loadin……</summary><content type="html">&lt;h2 id="先说草图布局">先说草图布局&lt;/h2>
&lt;p>现在工作的公司设计的页面似乎从来不考虑体验。比如说加载数据的loading界面，目前我发现B站、知乎等很多的APP、网页都在用下面图片这种效果。就是在没有拿到数据前，页面用条条框框的图形来代表内容和数据。&lt;/p>
&lt;p>&lt;img src="http://blog.wss.cool/images/linear-gradient-1.jpg" alt="草图布局" title="草图布局">&lt;/p>
&lt;p>这个效果其实好像还没有一个正式的名字，“草图布局”这个名字是从&lt;a href="http://weibo.ws/lJAtrc">阮一峰的微博&lt;/a>看来的，我认为挺恰当的就这么叫吧。下图来自他的微博，微博里还有demo可以参考。&lt;/p>
&lt;p>这个demo的实现原始是，在&lt;code>background-image&lt;/code>中使用各种&lt;code>gradient&lt;/code>来画圆形、矩形，使用&lt;code>background-size&lt;/code>控制各个图形的尺寸，主要是宽度。再使用&lt;code>background-position&lt;/code>控制各个图形的位置来布局。这里就用到的渐变色，只不过用来画了非渐变的图形。&lt;/p>
&lt;p>demo中有一个高亮的动画效果，是使用一个有旋转了100度的&lt;code>linear-gradient&lt;/code>加一个位置动画的效果实现的。
&lt;img src="http://blog.wss.cool/images/linear-gradient-3.gif" alt="草图布局" title="渐变色1">&lt;/p>
&lt;p>我在我的项目中实现这个效果时遇到了问题——怎么确定这个渐变色的起始位置。比如下图这一条红线。
&lt;img src="http://blog.wss.cool/images/linear-gradient-4.gif" alt="草图布局" title="渐变色2">&lt;/p>
&lt;p>它的效果由这段代码实现的：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">background-image&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">linear-gradient&lt;/span>&lt;span class="o">(&lt;/span>
&lt;span class="nt">120deg&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="nt">transparent&lt;/span> &lt;span class="nt">308px&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="nt">red&lt;/span> &lt;span class="nt">323px&lt;/span> &lt;span class="o">,&lt;/span>
&lt;span class="nt">transparent&lt;/span> &lt;span class="nt">338px&lt;/span>
&lt;span class="o">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>linear-gradient的第一个参数是角度，其他3个参数表示某个位置及颜色，位置之间就是渐变色。想要一个图中这样从右上角开始的斜线，其中的&lt;code>308&lt;/code>、&lt;code>323&lt;/code>、&lt;code>338&lt;/code>是怎么算的呢？下面研究一下计算方式。&lt;/p>
&lt;h2 id="渐变色的方向与位置">渐变色的方向与位置&lt;/h2>
&lt;p>计算方法是不大直观的，而且需要先了解几个概念：渐变线、起始点和终点。&lt;/p>
&lt;p>&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/linear-gradient">摘抄MDZ文档&lt;/a>&lt;/p>
&lt;p>&lt;img src="http://blog.wss.cool/images/linear-gradient-2.png" alt="渐变色" title="渐变线、起始点和终点">&lt;/p>
&lt;dl>
&lt;dt>渐变线&lt;/dt>
&lt;dd>由包含渐变图形的容器的中心点和一个角度来定义的。渐变线上的颜色值是由不同的点来定义，包括起始点，终点，以及两者之间的可选的中间点（中间点可以有多个）&lt;/dd>
&lt;dt>起始点&lt;/dt>
&lt;dd>是渐变线上代表起始颜色值的点。起始点由渐变线和过容器顶点的垂直线之间的交叉点来定义。（垂直线跟渐变线在同一象限内）&lt;/dd>
&lt;dt>终点&lt;/dt>
&lt;dd>是渐变线上代表最终颜色值的点。终点也是由渐变线和从最近的顶点发出的垂直线之间的交叉点定义的，然而从起始点的对称点来定义终点是更容易理解的一种方式，因为终点是起点关于容器的中心点的反射点。&lt;/dd>
&lt;/dl>
&lt;p>由这些概念可以知道渐变色是从起始点开始沿着渐变线的方向绘制，渐变色的交界会垂直与渐变线。也就是说我们想做的红线是垂直于渐变线的。那么我们看下图
&lt;img src="http://blog.wss.cool/images/linear-gradient-5.gif" alt="渐变色"> &lt;br>
已知红线与上边成60度角（自己定义的），所以渐变线应该是120deg，过点B做120deg渐变线的垂直线，相交于点C，点A点C的线段A的长度就是红色的起始位置，如果上边长度为375，由勾股定理可知线段A长度为309，所以红线的起始位置就是309px，（我的代码里取了308px没什么区别）&lt;br>
由此可以写出上面的代码来实现红线。（其实就是顶点到红线的距离）&lt;br>
所以当我们想实现一个有角度的渐变色的时候，就可以用类似的方法来计算颜色的起始位置。&lt;/p>
&lt;p>如果渐变方向是平行与上下边或者左右边，可以这样写：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">background-image&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">linear-gradient&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">to&lt;/span> &lt;span class="nt">bottom&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="nt">red&lt;/span> &lt;span class="nt">25px&lt;/span> &lt;span class="o">,&lt;/span>&lt;span class="nt">blue&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="nt">background-image&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">linear-gradient&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">to&lt;/span> &lt;span class="nt">right&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">red&lt;/span> &lt;span class="nt">25px&lt;/span> &lt;span class="o">,&lt;/span>&lt;span class="nt">blue&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>另外下面代码的效果是一样的。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">background-image&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">linear-gradient&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">red&lt;/span> &lt;span class="nt">25px&lt;/span> &lt;span class="o">,&lt;/span>&lt;span class="nt">blue&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="nt">background-image&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">linear-gradient&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">180deg&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">red&lt;/span> &lt;span class="nt">25px&lt;/span> &lt;span class="o">,&lt;/span>&lt;span class="nt">blue&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>另外，第二个颜色后面的数值便是渐变结束的位置，如果小雨前面颜色的位置就不会有渐变效果，利用这点可以用来实现草图布局。&lt;/p>
&lt;p>例子：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">body&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">empty&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">empty&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">margin&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">auto&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">702&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background-image&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="nb">linear-gradient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="kt">deg&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="kc">transparent&lt;/span> &lt;span class="mi">600&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">rgba&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">255&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">255&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="mi">630&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="p">,&lt;/span>&lt;span class="kc">transparent&lt;/span> &lt;span class="mi">660&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nb">linear-gradient&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="kc">lightgray&lt;/span> &lt;span class="mi">150&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">transparent&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">),&lt;/span>
&lt;span class="nb">linear-gradient&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="kc">lightgray&lt;/span> &lt;span class="mi">150&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">transparent&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">),&lt;/span>
&lt;span class="nb">linear-gradient&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="kc">lightgray&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">transparent&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">),&lt;/span>
&lt;span class="nb">linear-gradient&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="kc">lightgray&lt;/span> &lt;span class="mi">88&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">transparent&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="k">background-size&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c">/* highlight */&lt;/span>
&lt;span class="mi">336&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">150&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="mi">336&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">150&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="mi">570&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="mi">720&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">88&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background-position&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="mi">-700&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="mi">0&lt;/span> &lt;span class="mi">24&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="mi">387&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">24&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="mi">0&lt;/span> &lt;span class="mi">230&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="mi">0&lt;/span> &lt;span class="mi">284&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background-repeat&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">no-repeat&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">animation&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">shine&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">s&lt;/span> &lt;span class="kc">infinite&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">@&lt;/span>&lt;span class="k">keyframes&lt;/span> &lt;span class="nt">shine&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">to&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">background-position&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="mi">160&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="mi">0&lt;/span> &lt;span class="mi">24&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="mi">387&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">24&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="mi">0&lt;/span> &lt;span class="mi">230&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="mi">0&lt;/span> &lt;span class="mi">284&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="http://blog.wss.cool/categories/css/" term="CSS" label="CSS"/></entry><entry><title type="text">SSH</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/ssh.html"/><id>http://blog.wss.cool/ssh.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-03-31T08:37:31+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">在自己的电脑上生成公钥、密钥。公钥放在远程服务器上，密钥在自己电脑里不用管。连接远程服务器时就不用输入密码了。</summary><content type="html">&lt;p>在自己的电脑上生成公钥、密钥。公钥放在远程服务器上，密钥在自己电脑里不用管。连接远程服务器时就不用输入密码了。&lt;/p>
&lt;h2 id="安装">安装&lt;/h2>
&lt;p>新装的系统可能没有ssh服务，需要自己安装&lt;/p>
&lt;pre>&lt;code>sudo apt-get install openssh-server
&lt;/code>&lt;/pre>&lt;h2 id="配置">配置&lt;/h2>
&lt;p>新安装的 &lt;code>ssh server&lt;/code> 需要一点配置：开启密码登录，开启公钥登录。&lt;/p>
&lt;ol>
&lt;li>编辑配置文件
&lt;pre>&lt;code>sudo vim /etc/ssh/sshd_config
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>开启密码登录、公钥登录
&lt;pre>&lt;code>PasswordAuthentication yes
PubkeyAuthentication yes
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>重启 &lt;code>ssh server&lt;/code>
&lt;pre>&lt;code>service ssh reload &lt;span class="shortcodes_tag">退出vim重启ssh&lt;/span>
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ol>
&lt;h2 id="生成key">生成key&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">ssh-keygen -t rsa
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="复制公钥">复制公钥&lt;/h2>
&lt;p>将本机的公钥copy到远程机器&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">ssh-copy-id username@remote_host_B
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后输入密码。&lt;/p>
&lt;blockquote>
&lt;p>该命令会把本机的公钥复制到远程机器的 .ssh/authorized_keys 文件中。&lt;/p>
&lt;/blockquote>
&lt;h2 id="登陆服务器">登陆服务器&lt;/h2>
&lt;p>配置好公钥以后就可以使用如下命令登录了。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">ssh username@hostname
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="配置别名">配置别名&lt;/h2>
&lt;p>每次都使用 &lt;code>ssh username@hostname&lt;/code> 登录会有点麻烦，可以通过配置将命令简化。比如下面的配置，可以将登录的命令简化为 &lt;code>ssh azu&lt;/code> 。配置文件为 &lt;code>~/.ssh/config&lt;/code> 。&lt;/p>
&lt;pre>&lt;code>Host azu
HostName 192.168.1.5
User azu
IdentityFile /homt/xx/.ssh/id_rsa
&lt;/code>&lt;/pre>&lt;h2 id="alias命令">alias命令&lt;/h2>
&lt;p>在终端中定义缩写的命令，比如：&lt;/p>
&lt;pre>&lt;code>alias totx='ssh username@hostname'
&lt;/code>&lt;/pre>&lt;p>这样就可以使用&lt;code>totx&lt;/code>命令直接登陆远程服务器了，但是alias命令会在重启终端时&lt;/p>
&lt;h2 id="永久保留alias命令">永久保留alias命令&lt;/h2>
&lt;p>每次登陆时.bash_profile文件是会自动执行，此过程会调用.bashrc，将alias命令写入.bashrc文件就可以将alias命令永久生效了。（如果没有此文件就创建一个）&lt;/p>
&lt;h2 id="报错">报错&lt;/h2>
&lt;pre>&lt;code>WARNING: UNPROTECTED PRIVATE KEY FILE!
Permissions 0644 '' are too open.
...
&lt;/code>&lt;/pre>&lt;p>我装了window是10和ubuntu双系统，将windows的一个公钥文件复制到ubuntu后，使用ssh的config配置了它。在使用ssh登录时，就报了这个错。&lt;/p>
&lt;p>是文件权限的问题，改成只读的权限即可解决。&lt;/p>
&lt;pre>&lt;code>chmod 400 ～/.ssh/id_rsa
&lt;/code>&lt;/pre>&lt;h2 id="指定私钥证书登录">指定私钥(证书)登录&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">ssh name@6.6.6.6 -i ./identity_file.pem
scp -i ./identity_file.pem file_a name@1.1.1.1:~/
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="配置密钥文件">配置密钥文件&lt;/h2>
&lt;p>通常使用ssh生成的秘钥文件名是“id_rsa”，通常这一对公钥私钥也是够用的。如果有第二份秘钥的话（腾讯云生成的），需要一个&amp;quot;config&amp;quot;文件。
该文件存放在&amp;quot;.ssh&amp;quot;目录下（不需要后缀扩展名），内容为：&lt;/p>
&lt;pre>&lt;code>Host 128.128.666.666
IdentityFile C:\Users\anrui\.ssh\pc_pc
&lt;/code>&lt;/pre></content><category scheme="http://blog.wss.cool/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/" term="服务器" label="服务器"/></entry><entry><title type="text">跨域CORS</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E8%B7%A8%E5%9F%9Fcors.html"/><id>http://blog.wss.cool/%E8%B7%A8%E5%9F%9Fcors.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-03-31T08:33:05+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">什么是跨域问题 在网页中使用AJAX时，AJAX请求的URL与网页的URL相比较，如果……</summary><content type="html">&lt;h2 id="什么是跨域问题">什么是跨域问题&lt;/h2>
&lt;p>在网页中使用AJAX时，AJAX请求的URL与网页的URL相比较，如果是属于同一个域名才可以正常访问，如果不属于一个域名就会出现跨域问题。所以，怎么判断两个URL是不是属于同一个域名呢？&lt;/p>
&lt;p>比如一个网页的URL是&amp;quot;https://segmentfault.com/a/1190000011145364?aaa=666&amp;quot;，可以把它拆分开：&lt;br>
origin: &amp;quot;https://segmentfault.com&amp;quot;&lt;br>
pathname: &amp;quot;/a/1190000011145364&amp;quot;&lt;br>
search: &amp;quot;?aaa=666&amp;quot;&lt;/p>
&lt;p>只有当两个URL的origin完全相同时，才不会出现跨域问题。所以以下origin都会出现跨域问题：&lt;br>
子域名：https://abc.segmentfault.com&lt;br>
不同协议：http://segmentfault.com&lt;br>
不同端口：https://segmentfault.com:8080&lt;br>
IP地址：https://192.168.4.12&lt;/p>
&lt;p>当出现跨域问题时，AJAX请求返回后浏览器控制台会报错，AJAX的回调拿不到返回值。&lt;/p>
&lt;h2 id="两种常用的解决方法jsonp和cors">两种常用的解决方法：JSONP和CORS&lt;/h2>
&lt;h3 id="jsonp">JSONP&lt;/h3>
&lt;p>原理是利用浏览器允许跨域引用JavaScript资源。&lt;br>
发送请求时，通过URL告诉服务器函数名，如：&lt;code>http://some.com?callback=handle&lt;/code>.&lt;br>
服务器的通常是函数调用的形式，如：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="nx">handle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>页面中需要先准备好函数&lt;code>handle&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kd">function&lt;/span> &lt;span class="nx">handle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="cors">CORS&lt;/h3>
&lt;p>这个方案好像不需要在JS代码中的额外操作。另外，默认情况下，Cookie不包括在CORS请求之中，如果需要请求中带着cookie，设置withCredentials参数即可。&lt;/p>
&lt;p>使用 fetch 进行请求时，可在参数中加 &lt;code>mode : 'no-cors'&lt;/code>，使浏览器不发送 option 请求，直接发起网络请求。但是请求的 header 只能是 CORS-safelisted 列表中的。其他 header 浏览器不会发送。比如 &lt;code>Authorization&lt;/code>
&lt;code>no-cors&lt;/code> 对 header 有影响，&lt;/p>
&lt;h2 id="参照">参照&lt;/h2>
&lt;p>&lt;a href="https://fetch.spec.whatwg.org/#cors-safelisted-response-header-name">https://fetch.spec.whatwg.org/#cors-safelisted-response-header-name&lt;/a>
&lt;a href="https://stackoverflow.com/questions/44606244/using-fetch-api-with-mode-no-cors-can-t-set-request-headers">https://stackoverflow.com/questions/44606244/using-fetch-api-with-mode-no-cors-can-t-set-request-headers&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://fetch.spec.whatwg.org/#http-access-control-allow-headers">https://fetch.spec.whatwg.org/#http-access-control-allow-headers&lt;/a>
&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Expose-Headers">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Expose-Headers&lt;/a>
&lt;a href="https://stackoverflow.com/questions/43871637/no-access-control-allow-origin-header-is-present-on-the-requested-resource-whe">https://stackoverflow.com/questions/43871637/no-access-control-allow-origin-header-is-present-on-the-requested-resource-whe&lt;/a>
&lt;a href="https://fetch.spec.whatwg.org/#headers-class">https://fetch.spec.whatwg.org/#headers-class&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Simple_requests">https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Simple_requests&lt;/a>
&lt;a href="https://fetch.spec.whatwg.org/#cors-protocol">https://fetch.spec.whatwg.org/#cors-protocol&lt;/a>
&lt;a href="https://www.ruanyifeng.com/blog/2016/04/cors.html">https://www.ruanyifeng.com/blog/2016/04/cors.html&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://www.ruanyifeng.com/blog/2016/04/cors.html">阮一峰——跨域资源共享 CORS 详解&lt;/a>&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/></entry><entry><title type="text">AJAX</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/javascript/ajax/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/javascript/ajax/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-03-31T08:20:17+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">介绍AJAX的基本API和作用</summary><content type="html">&lt;p>AJAX——异步的JavaScript和XML，就是使用&lt;code>XMLHttpRequest&lt;/code>对象与服务器通信。&lt;/p>
&lt;h2 id="发送http请求">发送http请求&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">var&lt;/span> &lt;span class="nx">httpRequest&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">XMLHttpRequest&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">httpRequest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onreadystatechange&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(){};&lt;/span>
&lt;span class="nx">httpRequest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;GET&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;http://www.example.org/some.file&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">httpRequest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>创建XMLHttpRequest对象&lt;/li>
&lt;li>告诉它&lt;/li>
&lt;li>与哪个服务器交互&lt;/li>
&lt;li>以哪种方法交互&lt;/li>
&lt;li>给服务器的数据&lt;/li>
&lt;/ol>
&lt;h2 id="open方法">open()方法&lt;/h2>
&lt;p>这个方法是选择互动的目标，比如玩游戏时，你要告诉服务器我要用这个账号玩，用微信要先选择一个人才能发消息。&lt;/p>
&lt;p>由于&lt;a href="http://blog.wss.cool/2018/06/22/cors.html">跨域问题&lt;/a>，&lt;code>open()&lt;/code> 方法的 &lt;code>URL&lt;/code> 参数默认*..不能..*使用第三方域名。&lt;br>
第一个参数如果不大写某些浏览器可能无法处理（比如FireFox，不知道哪些版本会有这个问题？）&lt;/p>
&lt;h2 id="send方法">send()方法&lt;/h2>
&lt;p>选择了目标后，就可以发消息了。发微信是说人类的语言，这个send方法就是说机器能听懂的语言。&lt;/p>
&lt;h3 id="指定发送给服务器的数据">指定发送给服务器的数据&lt;/h3>
&lt;p>&lt;code>send()&lt;/code> 方法的参数就是要发送的数据，将会发送到服务器。像查询语句：&lt;code>&amp;quot;name=wss&amp;amp;age=66&amp;quot;&lt;/code>，&lt;br>
或者其他格式, 例如multipart/form-data，JSON，XML等。&lt;/p>
&lt;h3 id="指定返回数据的格式">指定返回数据的格式&lt;/h3>
&lt;p>服务区收到了我们的请求后，会给我们一个响应。我们要事先告诉服务器我们想要的数据的格式。&lt;/p>
&lt;p>当以POST方式获取数据时，需要设置请求的&lt;em>MIME类型&lt;/em>。&lt;/p>
&lt;blockquote>
&lt;p>用于定义网络文件的类型和网页的编码，决定浏览器将以什么形式、什么编码读取这个文件）&lt;/p>
&lt;/blockquote>
&lt;p>比如表单数据：&lt;code>httpRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');&lt;/code>&lt;/p>
&lt;h2 id="处理服务器响应">处理服务器响应&lt;/h2>
&lt;p>&lt;code>httpRequest.onreadystatechange&lt;/code>函数负责处理响应，函数内应该怎么处理呢？&lt;/p>
&lt;p>第一步：检查请求的状态。&lt;/p>
&lt;p>请求的状态会经历如下变化：（每当状态变化是都会调用onreadystatechange方法？）&lt;/p>
&lt;ul>
&lt;li>0 (未初始化) or (请求还未初始化) UNSENT&lt;/li>
&lt;li>1 (正在加载) or (已建立服务器链接) OPENED&lt;/li>
&lt;li>2 (加载成功) or (请求已接受) HEADERS_RECEIVED&lt;/li>
&lt;li>3 (交互) or (正在处理请求) LOADING&lt;/li>
&lt;li>4 (完成) or (请求已完成并且响应已准备好) DONE&lt;/li>
&lt;/ul>
&lt;p>第二步：请求完成时，检查http状态码。&lt;/p>
&lt;p>当请求完成，意味着完成了与服务器的交互。接下来就可以检查 &lt;a href="http://www.runoob.com/http/http-status-codes.html">HTTP状态码&lt;/a> 了：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">httpRequest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readyState&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">XMLHttpRequest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">DONE&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Everything is good, the response was received.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">httpRequest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">status&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="mi">200&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Perfect!
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// There was a problem with the request.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// For example, the response may have a 404 (Not Found)
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// or 500 (Internal Server Error) response code.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Not ready yet.
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在检查完HTTP响应码后，就可以使用服务器返回的数据了，有两个方法去访问这些数据：&lt;/p>
&lt;ul>
&lt;li>&lt;code>httpRequest.responseText&lt;/code> – 服务器以文本字符的形式返回&lt;/li>
&lt;li>&lt;code>httpRequest.responseXML&lt;/code> – 以 XMLDocument 对象方式返回，之后就可以使用JavaScript来处理
（返回JSON怎么处理？）&lt;/li>
&lt;/ul>
&lt;h2 id="responsetype属性">responseType属性&lt;/h2>
&lt;p>可以通过设置一个 XMLHttpRequest 对象的 responseType 属性来改变一个从服务器上返回的响应的&lt;em>数据类型&lt;/em>&lt;br>
比如二进制数据:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">httpRequest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;GET&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">url&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">httpRequest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">responseType&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;arraybuffer&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">httpRequest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="监测进度">监测进度&lt;/h2>
&lt;p>XMLHttpRequest 提供了各种在请求被处理期间发生的事件以供监听。包括定期进度通知、错误通知，等等。(这些事件与上面说的“请求状态readyState”有什么关系？)&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">var&lt;/span> &lt;span class="nx">req&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">XMLHttpRequest&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;progress&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">updateProgress&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;load&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">transferComplete&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;error&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">transferFailed&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;abort&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">transferCanceled&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">open&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="c1">// 如果 lengthComputable 属性的值是 false，那么意味着总字节数是未知并且 total 的值为零。
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">updateProgress&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">evt&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">evt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">lengthComputable&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">percentComplete&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">evt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">loaded&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="nx">evt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">total&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>progress 事件同时存在于下载和上传的传输。上传相关事件在 XMLHttpRequest.upload 对象上被触发，像下面这样：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">upload&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;progress&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">updateProgress&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">upload&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;load&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">transferComplete&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">upload&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;error&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">transferFailed&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">upload&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;abort&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">transferCanceled&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>使用 loadend 事件可以侦测到所有的三种加载结束条件（abort、load、error）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;loadend&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">loadEnd&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="参考">参考&lt;/h1>
&lt;p>&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/AJAX/Getting_Started">MDN AJAX Getting Started&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data">使用JavaScript类型数组接受二进制数据&lt;/a>&lt;/p></content><category scheme="http://blog.wss.cool/categories/javascript/" term="JavaScript" label="JavaScript"/><category scheme="http://blog.wss.cool/tags/api/" term="api" label="api"/></entry><entry><title type="text">React</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/react.html"/><id>http://blog.wss.cool/react.html</id><updated>2020-03-30T23:19:26+08:00</updated><published>2020-03-30T23:19:26+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">摘要，显示在meta的description中，</summary><content type="html">&lt;h2 id="生命周期">生命周期&lt;/h2>
&lt;p>用于初始化 state constructor() {}&lt;/p>
&lt;p>用于替换 &lt;code>componentWillReceiveProps&lt;/code> ，该函数会在初始化和 &lt;code>update&lt;/code> 时被调用，&lt;/p>
&lt;p>如果需要对比 &lt;code>prevProps&lt;/code> 需要单独在 &lt;code>state&lt;/code> 中维护 &lt;code>static getDerivedStateFromProps(nextProps, prevState) {}&lt;/code> ，因为该函数是静态函数，所以取不到 &lt;code>this&lt;/code> 。&lt;/p>
&lt;p>判断是否需要更新组件，多用于组件性能优化 &lt;code>shouldComponentUpdate(nextProps, nextState) {}&lt;/code>&lt;/p>
&lt;p>用于获得最新的 &lt;code>DOM&lt;/code> 数据 &lt;code>getSnapshotBeforeUpdate() {}&lt;/code>&lt;/p>
&lt;p>以下函数不建议使用 &lt;code>UNSAFE_componentWillMount() {}&lt;/code>，&lt;code>UNSAFE_componentWillUpdate(nextProps, nextState) {}&lt;/code>，&lt;code>UNSAFE_componentWillReceiveProps(nextProps) {}&lt;/code>&lt;/p>
&lt;h2 id="props中没有historylocationmatchwithrouter可以解决">props中没有history,location,match？withRouter可以解决&lt;/h2>
&lt;p>如果A组件的父组件是Route（react-router-dom）,A的props参数会含有history,location,match，但是A组件的子组件B的props参数就不包含history,location,match。&lt;br>
如果想在B组件中使用history的API，但是没有history对象该怎么办呢。这时就用到withRouter了&lt;a href="https://reacttraining.com/react-router/web/api/withRouter">文档&lt;/a>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">withRouter&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-router&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">class&lt;/span> &lt;span class="nx">ShowTheLocation&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Component&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// this.props中会包含history,location,match
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">withRouter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ShowTheLocation&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/react/" term="React" label="React"/></entry><entry><title type="text">博客文章分类</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%8D%9A%E5%AE%A2%E5%88%86%E7%B1%BB/"/><id>http://blog.wss.cool/posts/%E5%8D%9A%E5%AE%A2%E5%88%86%E7%B1%BB/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-03-30T22:49:40+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">介绍 分类以树状展开，能体现出难易程度和关系，体现出自己的知识结构。 最简单和基础的是“……</summary><content type="html">&lt;h2 id="介绍">介绍&lt;/h2>
&lt;p>分类以树状展开，能体现出难易程度和关系，体现出自己的知识结构。&lt;/p>
&lt;p>最简单和基础的是“api”分类，它是一些简单的语法，或者简单的API的用法的汇总，以前后端、服务器等划分子类，下面再展开具体的语言、类库、框架的API。使用这些API可以完成一些简单的日常工作。&lt;/p>
&lt;p>进阶一点的是“知识点”分类，它是在API的背后的工作原理。掌握原理可以让工作中少踩坑。工作原理也可以在框架之间，在语言之间迁移。&lt;/p>
&lt;p>第三个分类是“折腾”，它是由一些列的API、知识点经过一些步骤组合而成，一般是为了解决问题。&lt;/p>
&lt;blockquote>
&lt;p>折腾这个名字不大好，叫“实践”？&lt;/p>
&lt;/blockquote>
&lt;p>再然后就是“心得与经验”分类，折腾实践多了，肯定会有好的经验和坏的教训，就需要思考总结，把它们沉淀为经验和套路。&lt;/p>
&lt;h2 id="分类">分类&lt;/h2>
&lt;ul>
&lt;li>api （简单的API操作的记录）
&lt;ul>
&lt;li>前端
&lt;ul>
&lt;li>css&lt;/li>
&lt;li>react&lt;/li>
&lt;li>axios&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>后端
&lt;ul>
&lt;li>java hashmap 使用&lt;/li>
&lt;li>spring security&lt;/li>
&lt;li>Spring mvc&lt;/li>
&lt;li>Spring oauth2&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>服务器
&lt;ul>
&lt;li>nginx
&lt;ul>
&lt;li>静态网站&lt;/li>
&lt;li>反向代理&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>linux
&lt;ul>
&lt;li>使用源码安装软件&lt;/li>
&lt;li>ssh 登录，指定私钥文件（证书）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>工具
&lt;ul>
&lt;li>git&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>知识点 （技术原理）
&lt;ul>
&lt;li>react
&lt;ul>
&lt;li>diff&lt;/li>
&lt;li>元素&lt;/li>
&lt;li>virtual dom&lt;/li>
&lt;li>hooks&lt;/li>
&lt;li>生命周期&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>nginx
&lt;ul>
&lt;li>负载均衡&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>java
&lt;ul>
&lt;li>hashmap原理&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>折腾（需要若干步骤、若干知识点、若干API操作组合而解决问题）
&lt;ul>
&lt;li>博客支持服务&lt;/li>
&lt;li>gitlab的ci&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>心得与经验（经历了一些事情后的想法，总结规律，思考结果。思想活动）
&lt;ul>
&lt;li>如何改bug&lt;/li>
&lt;li>老板评价员工的逻辑&lt;/li>
&lt;li>如何应付需求变动&lt;/li>
&lt;li>如何写出好的代码&lt;/li>
&lt;li>如何少加班&lt;/li>
&lt;li>面试时总是没什么聊的怎么办？&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>其他&lt;/li>
&lt;/ul></content><category scheme="http://blog.wss.cool/categories/%E5%85%B6%E4%BB%96/" term="其他" label="其他"/></entry><entry><title type="text">css小全</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/css/css/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/css/css/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-03-29T22:10:30+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">居中 1 2 3 top:50%; left:50%; transform: translate(-50%, -50%); Flex 1 2 3 4 5 .class{ display:flex; justify-content:flex-start; align-items:center; } 简易镂空效果 1 outline: 9999px solid rgba(0,0,0,.76); 多行文字（英文、数字……</summary><content type="html">&lt;h2 id="居中">居中&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css"> &lt;span class="nt">top&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">50&lt;/span>&lt;span class="o">%;&lt;/span>
&lt;span class="nt">left&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">50&lt;/span>&lt;span class="o">%;&lt;/span>
&lt;span class="nt">transform&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">translate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">-50&lt;/span>&lt;span class="o">%,&lt;/span> &lt;span class="nt">-50&lt;/span>&lt;span class="o">%);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="flex">Flex&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">class&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="kc">flex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">justify-content&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="kc">flex&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="kc">start&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">align-items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="简易镂空效果">简易镂空效果&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">outline&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">9999px&lt;/span> &lt;span class="nt">solid&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">0&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="nt">0&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="nt">0&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">76&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="多行文字英文数字换行限制行数">多行文字（英文、数字换行、限制行数）&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css"> &lt;span class="nt">overflow&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">hidden&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nt">text-overflow&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">ellipsis&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nt">white-space&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">nowrap&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nt">word-wrap&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">break-word&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nt">word-break&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">break-all&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nt">display&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">-webkit-box&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nt">-webkit-box-orient&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">vertical&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nt">-webkit-line-clamp&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">2&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nt">overflow&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">hidden&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nt">word-wrap&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">break-word&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nt">word-break&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">break-all&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="flex布局时使子元素不被缩放">flex布局时使子元素不被缩放&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css"> &lt;span class="nt">flex-grow&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nt">flex-shrink&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">0&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="ios滚动不流畅">ios滚动不流畅&lt;/h2>
&lt;pre>&lt;code>-webkit-overflow-scrolling : touch;
&lt;/code>&lt;/pre>&lt;h2 id="placeholder的样式">placeholder的样式&lt;/h2>
&lt;pre>&lt;code>.className::-webkit-input-placeholder {
color: #B7B7B7;
}
&lt;/code>&lt;/pre>&lt;h2 id="渐变色">渐变色&lt;/h2>
&lt;p>各个参数的含义：&lt;code>linear-gradient(方向, 开始颜色 大小, 结束颜色 大小);&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">node&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">background-image&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">linear-gradient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">to&lt;/span> &lt;span class="kc">right&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">#000&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">transparent&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="使用css画不规则边框">使用css画不规则边框&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">node&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">background-image&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">linear-gradient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">to&lt;/span> &lt;span class="kc">right&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">#000&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">transparent&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">background-size&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">50&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">background-position-y&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">50&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background-repeat&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">no-repeat&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这段样式可以画半个左边框。其中用到了渐变色属性。&lt;/p>
&lt;h2 id="渐变色文字">渐变色文字&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">text&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">background-image&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kp">-webkit-&lt;/span>&lt;span class="nf">gradient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">linear&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">25&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nf">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">#ff2c2c&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="nf">to&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">#7a5e91&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="kp">-webkit-&lt;/span>&lt;span class="k">background-clip&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">text&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kp">-webkit-&lt;/span>&lt;span class="n">text-fill-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">transparent&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nt">span&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">linear-gradient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">to&lt;/span> &lt;span class="kc">right&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">red&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">blue&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kp">-webkit-&lt;/span>&lt;span class="k">background-clip&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">text&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">transparent&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="ios-阴影-input-textarea">IOS 阴影 input textarea&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">input&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="nt">textarea&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="kp">-webkit-&lt;/span>&lt;span class="k">appearance&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="margin塌陷">margin塌陷&lt;/h2>
&lt;p>在标准文档流中，竖直方向的margin会出现叠加现象，即较大的margin会覆盖掉较小的margin，竖直方向的两个盒子中间只有一个较大的margin，这就是margin的塌陷现象。&lt;br>
margin的塌陷现象分两种情况：
1.兄弟关系的盒子：
比如ul的li，相邻的li之间的margin会重叠取较大的一个;
2.父子关系的盒子。
子盒子的margin-top大于父盒子时，子的margin-top会覆盖父的。&lt;/p>
&lt;p>解决方法：&lt;br>
当给父盒子设置边框或padding时，不会出现父子盒子的塌陷现象。&lt;br>
当父盒子设置display:flex;时，不会出现这2种坍塌现象。&lt;/p>
&lt;h2 id="盒子模型">盒子模型&lt;/h2>
&lt;h2 id="清除浮动">清除浮动&lt;/h2>
&lt;h2 id="css优先级">css优先级&lt;/h2>
&lt;p>!important最高
行内style属性 &amp;gt; 内联style标签 &amp;gt; 外联css文件
id &amp;gt; class &amp;gt; tag
计算：
行内style属性 = 1000
ID选择器 = 100
类选择器、属性选择器、伪类 = 10
元素/伪元素 = 1
*通配选择器 = 0&lt;/p>
&lt;h2 id="伪类伪元素">伪类&amp;amp;伪元素&lt;/h2>
&lt;p>伪元素：
::before
::after
::placeholder
::first-line
伪类：
:first-child
:nth-child
:empty&lt;/p>
&lt;h2 id="inline-block元素有间隙">inline-block元素有间隙&lt;/h2>
&lt;p>解决方法：在这些inline-block元素的父元素设置样式——fontsize：0；&lt;/p>
&lt;h2 id="居中-1">居中&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">#&lt;/span>&lt;span class="nn">wrapper&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">table&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">#&lt;/span>&lt;span class="nn">centred&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">table&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="kc">cell&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">vertical-align&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">middle&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">text-align&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="左右对齐文字">左右对齐文字：&lt;/h2>
&lt;pre>&lt;code>.a{
width:596px;
text-align:justify;
text-align-last:justify;
}
&lt;/code>&lt;/pre>&lt;h2 id="固定位置显示背景图片">固定位置显示背景图片&lt;/h2>
&lt;p>background-attachment: fixed;&lt;/p>
&lt;h2 id="css滤镜">css滤镜&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">filter&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">grayscale&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">100&lt;/span>&lt;span class="o">%);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="sass继承">sass继承&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-scss" data-lang="scss">&lt;span class="nc">.error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">border&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">1px&lt;/span> &lt;span class="nn">#f00&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">background-color&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nn">#fdd&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">&amp;amp;&lt;/span>&lt;span class="nt">--serious&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">@extend&lt;/span> &lt;span class="nc">.error&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nt">border-width&lt;/span>&lt;span class="nd">:&lt;/span> &lt;span class="nt">3px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="css-module-的-composes-在-vscode-中有警告">css module 的 composes 在 vscode 中有警告&lt;/h2>
&lt;p>在vscode的配置文件中加这个：&lt;/p>
&lt;pre>&lt;code>&amp;quot;css.lint.unknownProperties&amp;quot;: &amp;quot;ignore&amp;quot;
&lt;/code>&lt;/pre>&lt;h2 id="剪裁元素内容">剪裁元素内容&lt;/h2>
&lt;pre>&lt;code>clip-path: inset(0 10px 0 10px);
&lt;/code>&lt;/pre>&lt;p>这个可以剪裁元素内容，依次为上右下左，以边缘为起点，剪裁掉这么多宽度。
参考：https://www.zhangxinxu.com/wordpress/2014/12/css3-svg-clip-path/
和：https://developer.mozilla.org/zh-CN/docs/Web/CSS/clip-path&lt;/p>
&lt;h2 id="隐藏滚动条">隐藏滚动条：&lt;/h2>
&lt;pre>&lt;code>body::-webkit-scrollbar {
display: none;
}
&lt;/code>&lt;/pre></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="http://blog.wss.cool/categories/css/" term="CSS" label="CSS"/></entry><entry><title type="text">vscode</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/vscode.html"/><id>http://blog.wss.cool/vscode.html</id><updated>2020-03-28T05:02:40+08:00</updated><published>2020-03-28T05:02:40+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Git自动刷新 git 插件会不停的刷新文件的状态，间隔大概5秒。可以在设置中关掉它。 Autorefresh 是否……</summary><content type="html">&lt;h2 id="git自动刷新">Git自动刷新&lt;/h2>
&lt;p>git 插件会不停的刷新文件的状态，间隔大概5秒。可以在设置中关掉它。&lt;/p>
&lt;pre>&lt;code>Autorefresh
是否启用自动刷新。
&lt;/code>&lt;/pre>&lt;h2 id="debugger-for-chrome">debugger for chrome&lt;/h2>
&lt;p>当使用parcel时，实际引用js文件会带有hash，而编辑器中的文件没有hash，导致插件认为js文件没有被挂载，断点也就无效了。&lt;br>
按照如下调整launch.json，可解决此问题。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="s2">&amp;#34;sourceMapPathOverrides&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;../*&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;${webRoot}/*&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/ide/" term="ide" label="ide"/></entry><entry><title type="text">hugo常用格式</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/hugo%E5%B8%B8%E7%94%A8%E6%A0%BC%E5%BC%8F.html"/><id>http://blog.wss.cool/hugo%E5%B8%B8%E7%94%A8%E6%A0%BC%E5%BC%8F.html</id><updated>2020-03-28T05:02:40+08:00</updated><published>2020-03-28T02:52:52+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">代说明的图片，reference，表格</summary><content type="html">&lt;h2 id="自定义shortcodes">自定义shortcodes&lt;/h2>
&lt;pre>&lt;code>&lt;span>{&lt;/span>{&lt; tag nihao >}}&lt;/code>&lt;/pre>
&lt;p>&lt;strong>效果&lt;/strong>⬇️&lt;/p>
&lt;span class="shortcodes_tag">nihao&lt;/span>
&lt;div class="shortcodes_withTitle" title="ttt">title&lt;/div>
&lt;p>&lt;span class="shortcodes_number">1&lt;/span> 与 #1# 在highlight&lt;/p>
&lt;h2 id="代码块内的高亮">代码块内的高亮&lt;/h2>
&lt;p>Options:&lt;/p>
&lt;dl>
&lt;dt>&lt;code>linenos&lt;/code>&lt;/dt>
&lt;dd>configure line numbers. Valid values are &lt;code>true&lt;/code>, &lt;code>false&lt;/code>, &lt;code>table&lt;/code>, or &lt;code>inline&lt;/code>. &lt;code>false&lt;/code> will turn off line numbers if it’s configured to be on in site config. New in v0.60.0 &lt;code>table&lt;/code> will give copy-and-paste friendly code blocks.&lt;/dd>
&lt;dt>&lt;code>hl_lines&lt;/code>&lt;/dt>
&lt;dd>lists a set of line numbers or line number ranges to be highlighted.&lt;/dd>
&lt;dt>&lt;code>linenostart=199&lt;/code>&lt;/dt>
&lt;dd>starts the line number count from 199.&lt;/dd>
&lt;/dl>
&lt;pre>&lt;code>&lt;span>{&lt;/span>{&lt; highlight go "linenos=table,hl_lines=8 15-17,linenostart=199" >}}
// ... code
&lt;span>{&lt;/span>{&lt; / highlight >}}
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>效果&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="hl">&lt;span class="lnt"> 8
&lt;/span>&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">function&lt;/span> &lt;span class="nx">clone&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">旧对象&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">新对象&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{};&lt;/span> &lt;span class="err">#&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="err">#&lt;/span>
&lt;span class="nb">Object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">keys&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">旧对象&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">forEach&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">旧对象&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">is基本类型&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">新对象&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">旧对象&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="hl"> &lt;span class="nx">clone&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">新对象&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;h2 id="定义">定义&lt;/h2>
&lt;dl>
&lt;dt>定义一&lt;/dt>
&lt;dd>说明文字&lt;/dd>
&lt;/dl>
&lt;h2 id="图片">图片&lt;/h2>
&lt;p>下面引号内的文字是可以不加的，加了的话，会显示在图片下方，作为说明文字。&lt;/p>
&lt;pre>&lt;code>![alt](/images/xx.png &amp;quot;说明文字&amp;quot;)
&lt;/code>&lt;/pre>&lt;p>&lt;strong>效果&lt;/strong>⬇️
&lt;img src="http://blog.wss.cool/images/hugo01.jpg" alt="52区" title="外域52区">&lt;sup id="fnref:1">&lt;a href="http://blog.wss.cool/hugo%E5%B8%B8%E7%94%A8%E6%A0%BC%E5%BC%8F.html#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>
&lt;img src="http://blog.wss.cool/images/linear-gradient-2.png" alt="52区" title="外域52区">&lt;sup id="fnref:1">&lt;a href="http://blog.wss.cool/hugo%E5%B8%B8%E7%94%A8%E6%A0%BC%E5%BC%8F.html#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;h2 id="脚注">脚注&lt;/h2>
&lt;p>维基百科的说明&lt;sup id="fnref:2">&lt;a href="http://blog.wss.cool/hugo%E5%B8%B8%E7%94%A8%E6%A0%BC%E5%BC%8F.html#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>，脚注或称注脚（英语：footnote），用于：&lt;/p>
&lt;ul>
&lt;li>为条目正文补充注解（解释性加注）&lt;/li>
&lt;li>标明被引用于正文或注解的数据源&lt;/li>
&lt;/ul>
&lt;p>例子：&lt;/p>
&lt;p>&lt;strong>作者.书名.译者.出版地:出版者,出版时间&lt;/strong>&lt;/p>
&lt;p>Ilya Grigorik.Web性能权威指南.李松峰译.北京:人民邮电出版社，2014&lt;/p>
&lt;p>&lt;strong>作者或网站名.文章名.[创作或更新时间]&lt;/strong>&lt;/p>
&lt;p>阮一峰.TCP 协议简介.[2017年6月8日]&lt;/p>
&lt;p>&lt;a href="https://zh.wikipedia.org/wiki/Wikipedia:%E5%88%97%E6%98%8E%E6%9D%A5%E6%BA%90">维基百科的列明来源&lt;/a>介绍了脚注等说明性内容的用法。&lt;/p>
&lt;blockquote>
&lt;p>凡是引用前人（包括作者自己过去）已发表的文献中的观点、数据和材料等，我们建议都要对它们在文中出现的地方予以标明，并在文末列出参考文献表。&lt;br>
书籍：序号 主要责任者．题名: 其他题名信息[文献类型标志]．其他责任者．版本．出版地: 出版者, 出版年: 引文页码[引用日期]．国际标准书号（ISBN）．获取和访问路径。&lt;br>
网页：作者，文章标题，网页地址，发表或更新日期。（网页语言）&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://zh.wikipedia.org/wiki/%E6%96%87%E5%90%8E%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE%E8%91%97%E5%BD%95%E8%A7%84%E5%88%99#GB/T_7714-2005">中文参考文献规则&lt;/a>&lt;/p>
&lt;p>在词/句后或图片前加一个标记&lt;sup id="fnref:1">&lt;a href="http://blog.wss.cool/hugo%E5%B8%B8%E7%94%A8%E6%A0%BC%E5%BC%8F.html#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>，其实是一个冒点，点击可追溯到页面地步的注脚定义。&lt;/p>
&lt;pre>&lt;code>某文章[^1]说到某技术非常厉害
[^1]: &amp;lt;https://github.com/wangshushuo/abc.html&amp;gt;
&lt;/code>&lt;/pre>&lt;p>&lt;strong>效果&lt;/strong>⬇️&lt;/p>
&lt;p>某文章&lt;sup id="fnref:1">&lt;a href="http://blog.wss.cool/hugo%E5%B8%B8%E7%94%A8%E6%A0%BC%E5%BC%8F.html#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>说到某技术非常厉害&lt;/p>
&lt;h2 id="链接">链接&lt;/h2>
&lt;p>&lt;strong>第一种：行内&lt;/strong>&lt;/p>
&lt;p>&lt;strong>效果&lt;/strong>⬇️&lt;/p>
&lt;pre>&lt;code>[链接的文字](https://www.wss.cool)
&lt;/code>&lt;/pre>&lt;p>&lt;a href="https://wss.cool">链接的文字&lt;/a>&lt;/p>
&lt;p>&lt;strong>第二种：简写&lt;/strong>&lt;/p>
&lt;pre>&lt;code>[链接的文字][a1]
[a1]: https://wss.cool
&lt;/code>&lt;/pre>&lt;p>&lt;strong>效果&lt;/strong>⬇️&lt;/p>
&lt;p>&lt;a href="https://wss.cool">链接的文字&lt;/a>&lt;/p>
&lt;h2 id="表格">表格&lt;/h2>
&lt;pre>&lt;code>操作 | 代码
:---:|:---:
暂存 | git stash
列表 | git stash list
取出 | git stash pop 1
&lt;/code>&lt;/pre>&lt;pre>&lt;code>:---: 表示文字居中
:--- 居左
---: 局右，
&lt;/code>&lt;/pre>&lt;p>&lt;strong>效果&lt;/strong>⬇️&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th align="center">操作&lt;/th>
&lt;th align="center">代码&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td align="center">暂存&lt;/td>
&lt;td align="center">git stash&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center">列表&lt;/td>
&lt;td align="center">git stash list&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center">取出&lt;/td>
&lt;td align="center">git stash pop 1&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="行内代码">行内代码&lt;/h2>
&lt;p>这是一段代码 &lt;code>a = b + c&lt;/code> 它是这样的。&lt;/p>
&lt;hr>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://github.com/wangshushuo/abc.html">https://github.com/wangshushuo/abc.html&lt;/a> &lt;a href="http://blog.wss.cool/hugo%E5%B8%B8%E7%94%A8%E6%A0%BC%E5%BC%8F.html#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;a href="https://zh.wikipedia.org/wiki/Help:%E8%84%9A%E6%B3%A8">https://zh.wikipedia.org/wiki/Help:%E8%84%9A%E6%B3%A8&lt;/a> &lt;a href="http://blog.wss.cool/hugo%E5%B8%B8%E7%94%A8%E6%A0%BC%E5%BC%8F.html#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></content><category scheme="http://blog.wss.cool/categories/%E5%85%B6%E4%BB%96/" term="其他" label="其他"/></entry><entry><title type="text">代码大全</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8.html"/><id>http://blog.wss.cool/%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-03-26T10:37:50+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">在参与过几个项目之后，尤其是烂项目，会觉得《代码大全》这本书真的非常棒。</summary><content type="html">&lt;p>这本书的原名是《Code Complete》，指的是软件项目中的“构建”这个阶段。内容的主要是如何把代码写好。&lt;/p>
&lt;blockquote>
&lt;p>需求设计，架构设计，构建（写代码），测试，发布。&lt;/p>
&lt;/blockquote>
&lt;h2 id="从目录看书的结构">从目录看书的结构&lt;/h2>
&lt;p>目录上把书分成了7个部分，每个部分包含多个章节。&lt;/p>
&lt;ol>
&lt;li>打好构建的基础&lt;/li>
&lt;li>高质量的代码&lt;/li>
&lt;li>变量&lt;/li>
&lt;li>语句&lt;/li>
&lt;li>改善代码&lt;/li>
&lt;li>系统考虑&lt;/li>
&lt;li>软件工艺&lt;/li>
&lt;/ol>
&lt;h2 id="摘录">摘录&lt;/h2>
&lt;h3 id="60">6.0&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>成为高效程序员的一个关键就在于，当你开发程序任一部分的代码时，都能安全地忽视程序中尽可能多的其余部分。而类就是实现这一目标的首要工具。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果你的程序被设计为使用了很多体积庞大，包含众多子程序的类的话，那么类数据和全局数据之间的区别就变得模糊起来，类内数据也将开始受困于全局数据所面临的那些问题了。&lt;/p>
&lt;/li>
&lt;/ul></content><category scheme="http://blog.wss.cool/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/" term="读书笔记" label="读书笔记"/><category scheme="http://blog.wss.cool/categories/%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8/" term="代码大全" label="代码大全"/></entry><entry><title type="text">React 组件打包为 library</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/react-component-be-libiary.html"/><id>http://blog.wss.cool/react-component-be-libiary.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-02-27T12:10:28+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">将一个 React 组件打包为一个 library，可以通过 npm 安装使用。</summary><content type="html">&lt;p>在开发多个项目时，为了提到代码的复用，将一个 &lt;code>React&lt;/code> 组件发不成一个独立的 &lt;code>npm&lt;/code> 包是一个不错的方式。&lt;/p>
&lt;p>这里参考 &lt;code>reactjs-popup&lt;/code> 这个库。它的编译没有使用webpack等打包工具，它是使用 &lt;code>bili&lt;/code> 和 &lt;code>babel&lt;/code> 这两个库和自己写的脚本 &lt;code>build.js&lt;/code> 文件进行的编译和打包。下面是 &lt;code>build.js&lt;/code> 文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;span class="lnt">79
&lt;/span>&lt;span class="lnt">80
&lt;/span>&lt;span class="lnt">81
&lt;/span>&lt;span class="lnt">82
&lt;/span>&lt;span class="lnt">83
&lt;/span>&lt;span class="lnt">84
&lt;/span>&lt;span class="lnt">85
&lt;/span>&lt;span class="lnt">86
&lt;/span>&lt;span class="lnt">87
&lt;/span>&lt;span class="lnt">88
&lt;/span>&lt;span class="lnt">89
&lt;/span>&lt;span class="lnt">90
&lt;/span>&lt;span class="lnt">91
&lt;/span>&lt;span class="lnt">92
&lt;/span>&lt;span class="lnt">93
&lt;/span>&lt;span class="lnt">94
&lt;/span>&lt;span class="lnt">95
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">fs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;fs&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">del&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;del&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">Bili&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;bili&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">pkg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./package.json&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">input&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;./src/index.js&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">outDir&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;lib&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;reactjs-popup&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">format&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;es&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;cjs&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;umd&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;umd-min&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;span class="nx">banner&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">target&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;browser&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">external&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nb">Object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">keys&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">pkg&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">peerDependencies&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="c1">// some confuse between babel config for parcel that use v6 and Bili that&amp;#39;s use V7
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">babelBiliConfig&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">presets&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="s1">&amp;#39;@babel/preset-env&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">modules&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">}],&lt;/span> &lt;span class="s1">&amp;#39;@babel/preset-react&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;span class="nx">plugins&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;@babel/plugin-proposal-class-properties&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">babelParcelConfig&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">presets&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">[&lt;/span>
&lt;span class="s1">&amp;#39;@babel/preset-env&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nx">targets&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">node&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;current&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="s1">&amp;#39;@babel/preset-react&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nx">plugins&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;@babel/plugin-proposal-class-properties&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="c1">// Copy package.json, LICENSE,README and npmignore files
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">writePackageFiles&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">delete&lt;/span> &lt;span class="nx">pkg&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">devDependencies&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">delete&lt;/span> &lt;span class="nx">pkg&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">scripts&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">writeFileSync&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="s1">&amp;#39;./lib/package.json&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stringify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">pkg&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39; &amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">writeFileSync&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="s1">&amp;#39;./lib/LICENSE&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readFileSync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;LICENSE&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">writeFileSync&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="s1">&amp;#39;./lib/README.md&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readFileSync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;README.md&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">writeFileSync&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="s1">&amp;#39;lib/.npmignore&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readFileSync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;.npmignore&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">writeFileSync&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="s1">&amp;#39;./lib/index.d.ts&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readFileSync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;src/index.d.ts&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="c1">// and use babel config V7
&lt;/span>&lt;span class="c1">// Clean up the output directory
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">Build&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Delete old build Folder ....&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">del&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s1">&amp;#39;lib/*&amp;#39;&lt;/span>&lt;span class="p">]).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">writeFileSync&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="s1">&amp;#39;./.babelrc&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stringify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">babelBiliConfig&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39; &amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="nx">Bili&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">writeFileSync&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="s1">&amp;#39;./.babelrc&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stringify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">babelParcelConfig&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39; &amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="nx">writePackageFiles&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">promise&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">Promise&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">resolve&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">promise&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">promise&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">Build&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// catch errors
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">promise&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stack&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="打包和使用">打包和使用&lt;/h2>
&lt;ol>
&lt;li>复制了一份这个项目&lt;/li>
&lt;li>修改 &lt;code>package.json&lt;/code> 、 &lt;code>build.js&lt;/code> 和组件的代码&lt;/li>
&lt;li>我的组件叫做 &lt;code>Test&lt;/code> 包叫做 &lt;code>react-test-comp&lt;/code>&lt;/li>
&lt;li>用它的方式打包&lt;/li>
&lt;li>上传项目到 git 仓库&lt;/li>
&lt;li>在项目中安装依赖
&lt;pre>&lt;code>yarn add git+https://xxx.xxx/react-test-comp.git
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>在代码中使用
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">import&lt;/span> &lt;span class="nx">Test&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-test-comp/lib&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">App&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">div&lt;/span> &lt;span class="nx">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;App&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">Test&lt;/span> &lt;span class="nx">text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;wangshushuo&amp;#34;&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/div&amp;gt;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>有一个点需要注意。从 &lt;code>git&lt;/code> 和 &lt;code>npm&lt;/code> 安装依赖是有区别的. &lt;code>git&lt;/code> 仓库的打包后的文件是在 &lt;code>react-test-comp/lib&lt;/code> 目录下，而 &lt;code>npm&lt;/code> 则是将 &lt;code>lib&lt;/code> 目录上传到仓库，引用的时候就不需要 &lt;code>/lib&lt;/code> 目录&lt;/p></content><category scheme="http://blog.wss.cool/categories/react/" term="React" label="React"/><category scheme="http://blog.wss.cool/tags/handbook/" term="handbook" label="handbook"/></entry><entry><title type="text">创建 React 项目</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/create-react-app.html"/><id>http://blog.wss.cool/create-react-app.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-02-27T11:10:50+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">创建 React 项目</summary><content type="html">&lt;h2 id="创建项目">创建项目&lt;/h2>
&lt;pre>&lt;code>yarn create react-app my-app
&lt;/code>&lt;/pre>&lt;pre>&lt;code>npx create-react-app my-app
&lt;/code>&lt;/pre>&lt;pre>&lt;code>npm init react-app my-app
&lt;/code>&lt;/pre>&lt;h2 id="创建typescript项目">创建typescript项目&lt;/h2>
&lt;p>在上面的命令的基础上，加&lt;code>--template typescript&lt;/code>&lt;/p>
&lt;h2 id="环境变量">环境变量&lt;/h2>
&lt;p>在 create-react-app 项目中，变量名必须以 &lt;code>REACT_APP_&lt;/code> 开始。&lt;/p>
&lt;p>在 &lt;code>.env&lt;/code> 文件中定义变量 &lt;code>REACT_APP_NOT_SECRET_CODE=123&lt;/code>。&lt;/p>
&lt;p>&lt;strong>在 &lt;code>js&lt;/code> 中使用&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">small&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="nx">You&lt;/span> &lt;span class="nx">are&lt;/span> &lt;span class="nx">running&lt;/span> &lt;span class="k">this&lt;/span> &lt;span class="nx">application&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">env&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">NODE_ENV&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/b&amp;gt; mode.&amp;lt;/small&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">form&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">input&lt;/span> &lt;span class="nx">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;hidden&amp;#34;&lt;/span> &lt;span class="nx">defaultValue&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">env&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">REACT_APP_NOT_SECRET_CODE&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/form&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/div&amp;gt;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>在 &lt;code>html&lt;/code> 中使用&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>%REACT_APP_WEBSITE_NAME%&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>判断当前环境 &lt;code>process.env.NODE_ENV !== 'production'&lt;/code>。&lt;/p></content><category scheme="http://blog.wss.cool/categories/react/" term="React" label="React"/><category scheme="http://blog.wss.cool/tags/handbook/" term="handbook" label="handbook"/></entry><entry><title type="text">多快好省</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E5%A4%9A%E5%BF%AB%E5%A5%BD%E7%9C%81.html"/><id>http://blog.wss.cool/%E5%A4%9A%E5%BF%AB%E5%A5%BD%E7%9C%81.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-02-26T13:45:16+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">经常会有一些不懂软件开发的领导，幻想着可以“多快好省”地开发出软件。</summary><content type="html">&lt;p>经常会有一些不懂软件开发的领导，幻想着可以“多快好省”地开发出软件。但通常是不现实的。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th align="left">幻想&lt;/th>
&lt;th align="left">幻想&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td align="left">多&lt;/td>
&lt;td align="left">开发的功能多&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">快&lt;/td>
&lt;td align="left">开发的时间短&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">好&lt;/td>
&lt;td align="left">软件bug少&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">省&lt;/td>
&lt;td align="left">又少又便宜的人力&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="快和省">快和省&lt;/h2>
&lt;p>快和省是最诱人的，因为这意味着成本低，它们的对立面就是“多、好”。少人力、少时间开发出来的东西如果想“好”，那么功能就要少，如果要功能多，那就好不了，会有很多bug。&lt;/p>
&lt;h2 id="好与多">好与多&lt;/h2>
&lt;p>要想开发多个功能，质量又好的软件。要么多花钱，请牛人设计开发，越想快就多招人，就不能省钱。想省钱就快不起来。&lt;/p>
&lt;p>非要多快好省的话，最后的结果肯定是“多快省”的做出来了，然后软件很多问题，很不好用，体验差。生意就会很难做，软件也维护不下去，最后钱赔光了。&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%BF%83%E5%BE%97%E4%B8%8E%E7%BB%8F%E9%AA%8C/" term="心得与经验" label="心得与经验"/></entry><entry><title type="text">Spring MVC与模版 thymeleaf 开发网站</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%90%8E%E7%AB%AF/spring/spring-mvc%E4%B8%8E%E6%A8%A1%E7%89%88thymeleaf%E5%BC%80%E5%8F%91%E7%BD%91%E7%AB%99/"/><id>http://blog.wss.cool/posts/%E5%90%8E%E7%AB%AF/spring/spring-mvc%E4%B8%8E%E6%A8%A1%E7%89%88thymeleaf%E5%BC%80%E5%8F%91%E7%BD%91%E7%AB%99/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-02-25T23:39:38+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">一个简单的 controller 指向一个模版 1 2 3 4 5 @GetMapping(&amp;#34;/greeting&amp;#34;) public String greeting(@RequestParam(name = &amp;#34;name&amp;#34;, required = false, defaultValue = &amp;#34;World&amp;#34;) String name, Model model) { model.addAttribute(&amp;#34;name&amp;#34;, name); return &amp;#34;greeting&amp;#34;; } return &amp;quot;greeting&amp;quot; 对……</summary><content type="html">&lt;h2 id="一个简单的-controller-指向一个模版">一个简单的 controller 指向一个模版&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@GetMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/greeting&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">greeting&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nd">@RequestParam&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">required&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">defaultValue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;World&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Model&lt;/span> &lt;span class="n">model&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">model&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addAttribute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;greeting&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>return &amp;quot;greeting&amp;quot;&lt;/code> 对应 &lt;code>src/main/resources/templates/greeting.html&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">th:text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&amp;#39;hello &amp;#39;+${name}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="home-page不需要配置">Home Page，不需要配置&lt;/h2>
&lt;p>&lt;code>src/main/resources/static/index.html&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="cp">&amp;lt;!DOCTYPE HTML&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Getting Started: Serving Web Content&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">http-equiv&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;Content-Type&amp;#34;&lt;/span> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text/html; charset=UTF-8&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Get your greeting &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;/greeting&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>here&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="配置-spring-mvc">配置 Spring MVC&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">com.example.securingweb&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.context.annotation.Configuration&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.web.servlet.config.annotation.ViewControllerRegistry&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.web.servlet.config.annotation.WebMvcConfigurer&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">MvcConfig&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">WebMvcConfigurer&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">addViewControllers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ViewControllerRegistry&lt;/span> &lt;span class="n">registry&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">registry&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addViewController&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/home&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">setViewName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;home&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">registry&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addViewController&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">setViewName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;home&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">registry&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addViewController&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/hello&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">setViewName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;hello&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">registry&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addViewController&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/login&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">setViewName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;login&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/spring/" term="spring" label="spring"/></entry><entry><title type="text">Java后端开发常用工具</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/java%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7.html"/><id>http://blog.wss.cool/java%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-01-30T01:19:02+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">常用的文档和工具的集合</summary><content type="html">&lt;h2 id="spring-web-mvc-reference">Spring Web MVC Reference&lt;/h2>
&lt;p>&lt;a href="https://docs.spring.io/spring/docs/current/spring-framework-reference/web.html">Spring Web MVC Reference&lt;/a>&lt;/p>
&lt;h2 id="spring-security-reference">Spring Security Reference&lt;/h2>
&lt;p>&lt;a href="https://docs.spring.io/spring-security/site/docs/5.2.2.BUILD-SNAPSHOT/reference/htmlsingle/">Spring Security Reference&lt;/a>，内容很多。OAuth2相关的内容，不包含授权服务器。&lt;/p>
&lt;h2 id="spring-security-oauth2-boot">Spring Security OAuth2 Boot&lt;/h2>
&lt;p>&lt;a href="https://docs.spring.io/spring-security-oauth2-boot/docs/current-SNAPSHOT/reference/htmlsingle/">Spring Security OAuth2 Boot&lt;/a>，这里介绍了：授权服务器、资源服务器、客户端、单点登录等&lt;/p>
&lt;h2 id="spring-boot-reference">Spring Boot Reference&lt;/h2>
&lt;p>&lt;a href="https://docs.spring.io/spring-boot/docs/2.2.4.RELEASE/reference/html/spring-boot-features.html">Spring Boot Reference&lt;/a>，内容很多。&lt;/p>
&lt;h2 id="apachecommonslogging">apache.commons.logging&lt;/h2>
&lt;p>&lt;a href="https://commons.apache.org/proper/commons-logging/guide.html">https://commons.apache.org/proper/commons-logging/guide.html&lt;/a>&lt;/p>
&lt;h2 id="maven仓库">Maven仓库&lt;/h2>
&lt;p>&lt;a href="https://mvnrepository.com/">Maven仓库&lt;/a>，根据名字搜索依赖包，可以得到版本pom等信息。&lt;/p></content><category scheme="http://blog.wss.cool/categories/java/" term="java" label="java"/></entry><entry><title type="text">我的博客支持服务</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%94%AF%E6%8C%81%E6%9C%8D%E5%8A%A1.html"/><id>http://blog.wss.cool/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%94%AF%E6%8C%81%E6%9C%8D%E5%8A%A1.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-01-29T17:20:32+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">使用 Apache Commons Exec 和 Spring MVC 开发一个在 ubuntu 服务器上执行 shell 命令的服务，用于更新博客。</summary><content type="html">&lt;h1 id="背景需求">背景需求&lt;/h1>
&lt;p>我的博客是使用Hugo开发的，代码存放在Gitee上，每次写来新的东西后&lt;code>git push&lt;/code>上去，然后到服务器上&lt;code>git pull &amp;amp;&amp;amp; hugo&lt;/code>来更新。&lt;/p>
&lt;p>这里会有一个需求——通过程序来执行这个更新代码并编译的操作。Gitee有WebHook功能，我需要开发一个接口绑定到WebHook，接口内执行更新操作即可。&lt;/p>
&lt;h1 id="设计思路">设计思路&lt;/h1>
&lt;h2 id="需求1过滤非法请求">需求1.过滤非法请求&lt;/h2>
&lt;p>WebHook会发起一个Post请求，在Request Header中通过&lt;code>X-Gitee-Token&lt;/code>携带令牌。所以需要一个Interceptor过滤掉没有带有这个Header的请求。&lt;/p>
&lt;h2 id="需求2通过java执行shell命令">需求2.通过Java执行Shell命令&lt;/h2>
&lt;p>原来是手动在命令行执行&lt;code>git pull &amp;amp;&amp;amp; hugo&lt;/code>。现在需要在Java程序中执行Shell命令，所以需要一个工具来做这个事，&lt;code>Apache Commons Exec&lt;/code>是一个这样的库。&lt;a href="https://wowfriday.cn/java%E6%89%A7%E8%A1%8Cshell%E5%91%BD%E4%BB%A4.html">这里有一个简单的例子&lt;/a>。&lt;/p>
&lt;h1 id="技术方案">技术方案&lt;/h1>
&lt;ul>
&lt;li>&lt;code>Spring Boot&lt;/code>创建项目&lt;/li>
&lt;li>&lt;code>Spring Web&lt;/code>提供Web接口&lt;/li>
&lt;li>&lt;code>Apache Commons Exec&lt;/code>提供执行shell命令的能力。&lt;a href="https://commons.apache.org/proper/commons-exec/">exec官网&lt;/a>，&lt;a href="https://commons.apache.org/proper/commons-exec/apidocs/index.html">API文档&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="流程图">流程图&lt;/h1>
&lt;p>&lt;img src="http://blog.wss.cool/images/blogServer.svg" alt="流程图">&lt;/p>
&lt;p>这其中有两个点是我没有做过的，一个是拦截器（检查是否带有X-Gitee-Token的），一个是执行shell命令。&lt;/p>
&lt;h1 id="代码实现">代码实现&lt;/h1>
&lt;h2 id="拦截器">拦截器&lt;/h2>
&lt;p>找到了&lt;a href="https://docs.spring.io/spring/docs/current/spring-framework-reference/web.html#mvc-handlermapping-interceptor">Spring Web MVC的文档&lt;/a>，分两步，一是实现&lt;code>org.springframework.web.servlet&lt;/code>的&lt;code>HandlerInterceptor&lt;/code>拦截器接口，二是配置拦截器。&lt;/p>
&lt;h3 id="实现拦截器">实现拦截器&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">GiteeInterceptorAdapter&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">HandlerInterceptor&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">boolean&lt;/span> &lt;span class="nf">preHandle&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">HttpServletResponse&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span> &lt;span class="n">handler&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="配置拦截器">配置拦截器&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">MvcConfig&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">WebMvcConfigurer&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">addInterceptors&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">InterceptorRegistry&lt;/span> &lt;span class="n">registry&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">registry&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addInterceptor&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">GiteeInterceptorAdapter&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="执行shell命令">执行shell命令&lt;/h2>
&lt;p>我把这部分单独写了一篇博客——&lt;a href="https://wowfriday.cn/java%E6%89%A7%E8%A1%8Cshell%E5%91%BD%E4%BB%A4.html">《Java执行Shell命令》&lt;/a>。&lt;/p>
&lt;h1 id="部署">部署&lt;/h1>
&lt;ol>
&lt;li>打包——使用maven的package打包&lt;/li>
&lt;li>上传到服务器——maven的deploy用不好，需要花些时间学习一下。暂时使用scp命令上传。&lt;/li>
&lt;li>运行Jar包——使用systemd运行，参考这篇博客&lt;a href="https://wowfriday.cn/posts/linux-base/#%E4%BD%BF%E7%94%A8systemd%E5%90%AF%E5%8A%A8%E5%85%B3%E9%97%ADjava%E7%A8%8B%E5%BA%8F">《使用systemd启动关闭Java程序》&lt;/a>。&lt;/li>
&lt;/ol>
&lt;h1 id="收获">收获&lt;/h1>
&lt;ol>
&lt;li>把一个手动工作实现了自动化。&lt;/li>
&lt;li>通过查看&lt;code>Spring Web MVC&lt;/code>的文档，找到并实现了拦截器的代码。&lt;/li>
&lt;li>发现了一个工具库，通过查看它的文档，将它运用了起来。&lt;/li>
&lt;li>第一次接触&lt;code>OutputStream&lt;/code>和&lt;code>ByteArrayOutputStream&lt;/code>。&lt;/li>
&lt;li>Jar包的部署❗️&lt;/li>
&lt;/ol>
&lt;h1 id="总结">总结&lt;/h1>
&lt;p>从这个服务的实现可以提炼出一种解决问题的方法吗？&lt;/p>
&lt;ul>
&lt;li>首先是确定目标，也就是需求——自动化。&lt;/li>
&lt;li>然后思考如何实现它——WebHook + 自己实现服务端功能——确定一个方案。&lt;/li>
&lt;li>设计流程。&lt;/li>
&lt;li>功能点和技术难题。&lt;/li>
&lt;li>解决技术难题——查文档/google/stackoverflow等。&lt;/li>
&lt;li>整个过程需要大量思考，需要多写，落实到纸上，以免遗忘和疏漏。&lt;/li>
&lt;li>尤其是对流程的思考。&lt;/li>
&lt;li>尤其是对难题的记录。&lt;/li>
&lt;li>完成后&lt;/li>
&lt;li>要总结学习到的知识点，计作“收获”&lt;/li>
&lt;li>要总结提炼方法，使其能沉淀为经验，计作“总结”&lt;/li>
&lt;li>更新技能树&lt;/li>
&lt;/ul></content><category scheme="http://blog.wss.cool/categories/%E6%8A%98%E8%85%BE/" term="折腾" label="折腾"/></entry><entry><title type="text">Spring Security JWT</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/spring-security-jwt.html"/><id>http://blog.wss.cool/spring-security-jwt.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-01-19T13:51:29+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Spring Security Architecture Spring Security 架构，入门介绍：网址 Authentication and Access Control 应用程序安全性归结为或多或少的两个独立问题：身……</summary><content type="html">&lt;h1 id="spring-security-architecture">Spring Security Architecture&lt;/h1>
&lt;p>Spring Security 架构，入门介绍：&lt;a href="https://spring.io/guides/topicals/spring-security-architecture/">网址&lt;/a>&lt;/p>
&lt;h2 id="authentication-and-access-control">Authentication and Access Control&lt;/h2>
&lt;p>应用程序安全性归结为或多或少的两个独立问题：身份验证（您是谁？）和授权（您可以做什么？）。有时人们会说“访问控制”而不是“授权”，这可能会造成混淆，但是以这种方式思考可能会有所帮助，因为“授权”在其他地方超载。 Spring Security的体系结构旨在将身份验证与授权分开，并具有策略和扩展点。&lt;/p>
&lt;h3 id="authentication">Authentication&lt;/h3>
&lt;p>身份验证的主要策略接口是AuthenticationManager，它只有一种方法：&lt;/p>
&lt;hr>
&lt;h1 id="oauth-20-resource-server"> OAuth 2.0 Resource Server&lt;/h1>
&lt;p>Spring Security supports protecting endpoints using two forms of OAuth 2.0 &lt;a href="https://tools.ietf.org/html/rfc6750.html">Bearer Tokens&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://tools.ietf.org/html/rfc7519">JWT&lt;/a>&lt;/li>
&lt;li>Opaque Tokens&lt;/li>
&lt;/ul>
&lt;p>This is handy in circumstances where an application has delegated its authority management to an &lt;a href="https://tools.ietf.org/html/rfc6749">authorization server&lt;/a> (for example, Okta or Ping Identity). This authorization server can be consulted by resource servers to authorize requests.&lt;/p>
&lt;blockquote>
&lt;p>Working samples for both &lt;a href="https://github.com/spring-projects/spring-security/tree/master/samples/boot/oauth2resourceserver">JWTs&lt;/a> and &lt;a href="https://github.com/spring-projects/spring-security/tree/master/samples/boot/oauth2resourceserver-opaque">Opaque Tokens&lt;/a> are available in the &lt;a href="https://github.com/spring-projects/spring-security/tree/master/samples">Spring Security repository&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;h2 id="1dependencies">1 Dependencies&lt;/h2>
&lt;p>Most Resource Server support is collected into &lt;code>spring-security-oauth2-resource-server&lt;/code>. However, the support for decoding and verifying JWTs is in &lt;code>spring-security-oauth2-jose&lt;/code>, meaning that both are necessary in order to have a working resource server that supports JWT-encoded Bearer Tokens.&lt;/p>
&lt;h2 id="2minimal-configuration-for-jwts">2 Minimal Configuration for JWTs&lt;/h2>
&lt;p>When using &lt;a href="https://spring.io/projects/spring-boot">Spring Boot&lt;/a>, configuring an application as a resource server consists of two basic steps. First, include the needed dependencies and second, indicate the location of the authorization server.&lt;/p>
&lt;h3 id="specifying-the-authorization-server">Specifying the Authorization Server&lt;/h3>
&lt;p>In a Spring Boot application, to specify which authorization server to use, simply do:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="k">spring&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">security&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">oauth2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">resourceserver&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">jwt&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">issuer-uri&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>https&lt;span class="p">:&lt;/span>//idp.example.com/issuer&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Where &lt;a href="https://idp.example.com/issuer">&lt;code>https://idp.example.com/issuer&lt;/code>&lt;/a> is the value contained in the &lt;code>iss&lt;/code> claim for JWT tokens that the authorization server will issue. Resource Server will use this property to further self-configure, discover the authorization server’s public keys, and subsequently validate incoming JWTs.&lt;/p>
&lt;blockquote>
&lt;p>To use the &lt;code>issuer-uri&lt;/code> property, it must also be true that one of &lt;code>https://idp.example.com/issuer/.well-known/openid-configuration&lt;/code>, &lt;code>https://idp.example.com/.well-known/openid-configuration/issuer&lt;/code>, or &lt;code>https://idp.example.com/.well-known/oauth-authorization-server/issuer&lt;/code> is a supported endpoint for the authorization server. This endpoint is referred to as a &lt;a href="https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfig">Provider Configuration&lt;/a> endpoint or a &lt;a href="https://tools.ietf.org/html/rfc8414#section-3">Authorization Server Metadata&lt;/a> endpoint.&lt;/p>
&lt;/blockquote>
&lt;p>And that’s it!&lt;/p>
&lt;h3 id="startup-expectations">Startup Expectations&lt;/h3>
&lt;p>When this property and these dependencies are used, Resource Server will automatically configure itself to validate JWT-encoded Bearer Tokens. It achieves this through a deterministic startup process:&lt;/p>
&lt;ol>
&lt;li>Hit the Provider Configuration or Authorization Server Metadata endpoint, processing the response for the &lt;code>jwks_url&lt;/code> property&lt;/li>
&lt;li>Configure the validation strategy to query &lt;code>jwks_url&lt;/code> for valid public keys&lt;/li>
&lt;li>Configure the validation strategy to validate each JWTs &lt;code>iss&lt;/code> claim against &lt;a href="https://idp.example.com">&lt;code>https://idp.example.com&lt;/code>&lt;/a>.&lt;/li>
&lt;/ol>
&lt;p>A consequence of this process is that the authorization server must be up and receiving requests in order for Resource Server to successfully start up.&lt;/p>
&lt;blockquote>
&lt;p>If the authorization server is down when Resource Server queries it (given appropriate timeouts), then startup will fail.&lt;/p>
&lt;/blockquote>
&lt;h3 id="runtime-expectations">Runtime Expectations&lt;/h3>
&lt;p>Once the application is started up, Resource Server will attempt to process any request containing an &lt;code>Authorization: Bearer&lt;/code> header:&lt;/p>
&lt;pre>&lt;code>GET / HTTP/1.1
Authorization: Bearer some-token-value # Resource Server will process this
&lt;/code>&lt;/pre>&lt;p>So long as this scheme is indicated, Resource Server will attempt to process the request according to the Bearer Token specification. Given a well-formed JWT, Resource Server will:&lt;/p>
&lt;ol>
&lt;li>Validate its signature against a public key obtained from the &lt;code>jwks_url&lt;/code> endpoint during startup and matched against the JWTs header&lt;/li>
&lt;li>Validate the JWTs &lt;code>exp&lt;/code> and &lt;code>nbf&lt;/code> timestamps and the JWTs &lt;code>iss&lt;/code> claim, and&lt;/li>
&lt;li>Map each scope to an authority with the prefix &lt;code>SCOPE_&lt;/code>.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>As the authorization server makes available new keys, Spring Security will automatically rotate the keys used to validate the JWT tokens.&lt;/p>
&lt;/blockquote>
&lt;p>The resulting &lt;code>Authentication#getPrincipal&lt;/code>, by default, is a Spring Security &lt;code>Jwt&lt;/code> object, and &lt;code>Authentication#getName&lt;/code> maps to the JWT’s &lt;code>sub&lt;/code> property, if one is present. From here, consider jumping to:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://blog.wss.cool/spring-security-jwt.html#oauth2resourceserver-jwt-jwkseturi" title="12.3.3 Specifying the Authorization Server JWK Set Uri Directly">How to Configure without Tying Resource Server startup to an authorization server’s availability&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://blog.wss.cool/spring-security-jwt.html#oauth2resourceserver-jwt-sansboot" title="12.3.4 Overriding or Replacing Boot Auto Configuration">How to Configure without Spring Boot&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="3specifying-the-authorization-server-jwk-set-uri-directly">3 Specifying the Authorization Server JWK Set Uri Directly&lt;/h2>
&lt;p>If the authorization server doesn’t support any configuration endpoints, or if Resource Server must be able to start up independently from the authorization server, then the &lt;code>jwk-set-uri&lt;/code> can be supplied as well:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="k">spring&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">security&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">oauth2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">resourceserver&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">jwt&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">issuer-uri&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>https&lt;span class="p">:&lt;/span>//idp.example.com&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">jwk-set-uri&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>https&lt;span class="p">:&lt;/span>//idp.example.com/.well-known/jwks.json&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>The JWK Set uri is not standardized, but can typically be found in the authorization server’s documentation&lt;/p>
&lt;/blockquote>
&lt;p>Consequently, Resource Server will not ping the authorization server at startup. We still specify the &lt;code>issuer-uri&lt;/code> so that Resource Server still validates the &lt;code>iss&lt;/code> claim on incoming JWTs.&lt;/p>
&lt;blockquote>
&lt;p>This property can also be supplied directly on the &lt;a href="http://blog.wss.cool/spring-security-jwt.html#oauth2resourceserver-jwt-jwkseturi-dsl" title="Using jwkSetUri()">DSL&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;h2 id="4overriding-or-replacing-boot-auto-configuration">4 Overriding or Replacing Boot Auto Configuration&lt;/h2>
&lt;p>There are two &lt;code>@Bean&lt;/code> s that Spring Boot generates on Resource Server’s behalf. The first is a &lt;code>WebSecurityConfigurerAdapter&lt;/code> that configures the app as a resource server. When including &lt;code>spring-security-oauth2-jose&lt;/code>, this &lt;code>WebSecurityConfigurerAdapter&lt;/code> looks like:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpSecurity&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">http&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeRequests&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">anyRequest&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">authenticated&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">oauth2ResourceServer&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">OAuth2ResourceServerConfigurer&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">jwt&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>If the application doesn’t expose a &lt;code>WebSecurityConfigurerAdapter&lt;/code> bean, then Spring Boot will expose the above default one. Replacing this is as simple as exposing the bean within the application:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@EnableWebSecurity&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">MyCustomSecurityConfiguration&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">WebSecurityConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpSecurity&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">http&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeRequests&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">mvcMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/messages/**&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">hasAuthority&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;SCOPE_message:read&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">anyRequest&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">authenticated&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">oauth2ResourceServer&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">jwt&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">jwtAuthenticationConverter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">myConverter&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The above requires the scope of &lt;code>message:read&lt;/code> for any URL that starts with &lt;code>/messages/&lt;/code>. Methods on the &lt;code>oauth2ResourceServer&lt;/code> DSL will also override or replace auto configuration. For example, the second &lt;code>@Bean&lt;/code> Spring Boot creates is a &lt;code>JwtDecoder&lt;/code>, which decodes &lt;code>String&lt;/code> tokens into validated instances of &lt;code>Jwt&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">JwtDecoder&lt;/span> &lt;span class="nf">jwtDecoder&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">JwtDecoders&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">fromIssuerLocation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">issuerUri&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>Calling &lt;a href="https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/oauth2/jwt/JwtDecoders.html#fromIssuerLocation-java.lang.String-">&lt;code>JwtDecoders#fromIssuerLocation&lt;/code>&lt;/a> is what invokes the Provider Configuration or Authorization Server Metadata endpoint in order to derive the JWK Set Uri.&lt;/p>
&lt;/blockquote>
&lt;p>If the application doesn’t expose a &lt;code>JwtDecoder&lt;/code> bean, then Spring Boot will expose the above default one. And its configuration can be overridden using &lt;code>jwkSetUri()&lt;/code> or replaced using &lt;code>decoder()&lt;/code>.&lt;/p>
&lt;h3 id="using-jwkseturi">Using &lt;code>jwkSetUri()&lt;/code>&lt;/h3>
&lt;p>An authorization server’s JWK Set Uri can be configured &lt;a href="http://blog.wss.cool/spring-security-jwt.html#oauth2resourceserver-jwt-jwkseturi" title="12.3.3 Specifying the Authorization Server JWK Set Uri Directly">as a configuration property&lt;/a> or it can be supplied in the DSL:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@EnableWebSecurity&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">DirectlyConfiguredJwkSetUri&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">WebSecurityConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpSecurity&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">http&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeRequests&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">anyRequest&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">authenticated&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">oauth2ResourceServer&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">jwt&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">jwkSetUri&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;https://idp.example.com/.well-known/jwks.json&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Using &lt;code>jwkSetUri()&lt;/code> takes precedence over any configuration property.&lt;/p>
&lt;h3 id="using-decoder">Using &lt;code>decoder()&lt;/code>&lt;/h3>
&lt;p>More powerful than &lt;code>jwkSetUri()&lt;/code> is &lt;code>decoder()&lt;/code>, which will completely replace any Boot auto configuration of &lt;code>JwtDecoder&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@EnableWebSecurity&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">DirectlyConfiguredJwtDecoder&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">WebSecurityConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpSecurity&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">http&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeRequests&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">anyRequest&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">authenticated&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">oauth2ResourceServer&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">jwt&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">decoder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">myCustomDecoder&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This is handy when deeper configuration, like &lt;a href="http://blog.wss.cool/spring-security-jwt.html#oauth2resourceserver-jwt-validation" title="12.3.9 Configuring Validation">validation&lt;/a>, &lt;a href="http://blog.wss.cool/spring-security-jwt.html#oauth2resourceserver-jwt-claimsetmapping" title="12.3.10 Configuring Claim Set Mapping">mapping&lt;/a>, or &lt;a href="http://blog.wss.cool/spring-security-jwt.html#oauth2resourceserver-jwt-timeouts" title="12.3.11 Configuring Timeouts">request timeouts&lt;/a>, is necessary.&lt;/p>
&lt;h3 id="exposing-a-jwtdecoder-bean">Exposing a &lt;code>JwtDecoder&lt;/code> &lt;code>@Bean&lt;/code>&lt;/h3>
&lt;p>Or, exposing a &lt;code>JwtDecoder&lt;/code> &lt;code>@Bean&lt;/code> has the same effect as &lt;code>decoder()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">JwtDecoder&lt;/span> &lt;span class="nf">jwtDecoder&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">NimbusJwtDecoder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">withJwkSetUri&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">jwkSetUri&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="5configuring-trusted-algorithms">5 Configuring Trusted Algorithms&lt;/h2>
&lt;p>By default, &lt;code>NimbusJwtDecoder&lt;/code>, and hence Resource Server, will only trust and verify tokens using &lt;code>RS256&lt;/code>. You can customize this via &lt;a href="http://blog.wss.cool/spring-security-jwt.html#oauth2resourceserver-jwt-boot-algorithm" title="Via Spring Boot">Spring Boot&lt;/a>, &lt;a href="http://blog.wss.cool/spring-security-jwt.html#oauth2resourceserver-jwt-decoder-builder" title="Using a Builder">the NimbusJwtDecoder builder&lt;/a>, or from the &lt;a href="http://blog.wss.cool/spring-security-jwt.html#oauth2resourceserver-jwt-decoder-jwk-response" title="From JWK Set response">JWK Set response&lt;/a>.&lt;/p>
&lt;h3 id="via-spring-boot">Via Spring Boot&lt;/h3>
&lt;p>The simplest way to set the algorithm is as a property:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="k">spring&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">security&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">oauth2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">resourceserver&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">jwt&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">jws-algorithm&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>RS512&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">jwk-set-uri&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>https&lt;span class="p">:&lt;/span>//idp.example.org/.well-known/jwks.json&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="using-a-builder">Using a Builder&lt;/h3>
&lt;p>For greater power, though, we can use a builder that ships with &lt;code>NimbusJwtDecoder&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="n">JwtDecoder&lt;/span> &lt;span class="nf">jwtDecoder&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">NimbusJwtDecoder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">fromJwkSetUri&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">jwkSetUri&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">jwsAlgorithm&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">RS512&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Calling &lt;code>jwsAlgorithm&lt;/code> more than once will configure &lt;code>NimbusJwtDecoder&lt;/code> to trust more than one algorithm, like so:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="n">JwtDecoder&lt;/span> &lt;span class="nf">jwtDecoder&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">NimbusJwtDecoder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">fromJwkSetUri&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">jwkSetUri&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">jwsAlgorithm&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">RS512&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">jwsAlgorithm&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">EC512&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Or, you can call &lt;code>jwsAlgorithms&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="n">JwtDecoder&lt;/span> &lt;span class="nf">jwtDecoder&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">NimbusJwtDecoder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">fromJwkSetUri&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">jwkSetUri&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">jwsAlgorithms&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">algorithms&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">algorithms&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">RS512&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">algorithms&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">EC512&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="from-jwk-set-response">From JWK Set response&lt;/h3>
&lt;p>Since Spring Security’s JWT support is based off of Nimbus, you can use all it’s great features as well. For example, Nimbus has a &lt;code>JWSKeySelector&lt;/code> implementation that will select the set of algorithms based on the JWK Set URI response. You can use it to generate a &lt;code>NimbusJwtDecoder&lt;/code> like so:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">JwtDecoder&lt;/span> &lt;span class="nf">jwtDecoder&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// makes a request to the JWK Set endpoint
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">JWSKeySelector&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">securitycontext&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">jwsKeySelector&lt;/span> &lt;span class="o">=&lt;/span>
&lt;span class="n">JWSAlgorithmFamilyJWSKeySelector&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">fromJWKSetURL&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">jwkSetUrl&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">DefaultJWTProcessor&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">securitycontext&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">jwtProcessor&lt;/span> &lt;span class="o">=&lt;/span>
&lt;span class="k">new&lt;/span> &lt;span class="n">DefaultJWTProcessor&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;();&lt;/span>
&lt;span class="n">jwtProcessor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setJWSKeySelector&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">jwsKeySelector&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">NimbusJwtDecoder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">jwtProcessor&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&amp;lt;/&lt;/span>&lt;span class="n">securitycontext&lt;/span>&lt;span class="o">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="n">securitycontext&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="6trusting-a-single-asymmetric-key">6 Trusting a Single Asymmetric Key&lt;/h2>
&lt;p>Simpler than backing a Resource Server with a JWK Set endpoint is to hard-code an RSA public key. The public key can be provided via &lt;a href="http://blog.wss.cool/spring-security-jwt.html#oauth2resourceserver-jwt-decoder-public-key-boot" title="Via Spring Boot">Spring Boot&lt;/a> or by &lt;a href="http://blog.wss.cool/spring-security-jwt.html#oauth2resourceserver-jwt-decoder-public-key-builder" title="Using a Builder">Using a Builder&lt;/a>.&lt;/p>
&lt;h3 id="via-spring-boot-1">Via Spring Boot&lt;/h3>
&lt;p>Specifying a key via Spring Boot is quite simple. The key’s location can be specified like so:&lt;/p>
&lt;pre>&lt;code>spring:
security:
oauth2:
resourceserver:
jwt:
public-key-location: classpath:my-key.pub
&lt;/code>&lt;/pre>&lt;p>Or, to allow for a more sophisticated lookup, you can post-process the &lt;code>RsaKeyConversionServicePostProcessor&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="n">BeanFactoryPostProcessor&lt;/span> &lt;span class="nf">conversionServiceCustomizer&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">beanFactory&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span>
&lt;span class="n">beanFactory&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getBean&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">RsaKeyConversionServicePostProcessor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">setResourceLoader&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">CustomResourceLoader&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Specify your key’s location:&lt;/p>
&lt;pre>&lt;code>key.location: hfds://my-key.pub
&lt;/code>&lt;/pre>&lt;p>And then autowire the value:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Value&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;${key.location}&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">RSAPublicKey&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="using-a-builder-1">Using a Builder&lt;/h3>
&lt;p>To wire an &lt;code>RSAPublicKey&lt;/code> directly, you can simply use the appropriate &lt;code>NimbusJwtDecoder&lt;/code> builder, like so:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">JwtDecoder&lt;/span> &lt;span class="nf">jwtDecoder&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">NimbusJwtDecoder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">withPublicKey&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">key&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="7trusting-a-single-symmetric-key">7 Trusting a Single Symmetric Key&lt;/h2>
&lt;p>Using a single symmetric key is also simple. You can simply load in your &lt;code>SecretKey&lt;/code> and use the appropriate &lt;code>NimbusJwtDecoder&lt;/code> builder, like so:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">JwtDecoder&lt;/span> &lt;span class="nf">jwtDecoder&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">NimbusJwtDecoder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">withSecretKey&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">key&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="8configuring-authorization">8 Configuring Authorization&lt;/h2>
&lt;p>A JWT that is issued from an OAuth 2.0 Authorization Server will typically either have a &lt;code>scope&lt;/code> or &lt;code>scp&lt;/code> attribute, indicating the scopes (or authorities) it’s been granted, for example: &lt;code>{ …​, &amp;quot;scope&amp;quot; : &amp;quot;messages contacts&amp;quot;}&lt;/code> When this is the case, Resource Server will attempt to coerce these scopes into a list of granted authorities, prefixing each scope with the string &amp;quot;SCOPE_&amp;quot;. This means that to protect an endpoint or method with a scope derived from a JWT, the corresponding expressions should include this prefix:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@EnableWebSecurity&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">DirectlyConfiguredJwkSetUri&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">WebSecurityConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpSecurity&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">http&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeRequests&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">authorizeRequests&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">authorizeRequests&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">mvcMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/contacts/**&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">hasAuthority&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;SCOPE_contacts&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">mvcMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/messages/**&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">hasAuthority&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;SCOPE_messages&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">anyRequest&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">authenticated&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">oauth2ResourceServer&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">OAuth2ResourceServerConfigurer&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">jwt&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Or similarly with method security:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@PreAuthorize&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;hasAuthority(&amp;#39;SCOPE_messages&amp;#39;)&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">List&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">getMessages&lt;/span>&lt;span class="o">(...)&lt;/span> &lt;span class="o">{}&amp;lt;/&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="extracting-authorities-manually">Extracting Authorities Manually&lt;/h3>
&lt;p>However, there are a number of circumstances where this default is insufficient. For example, some authorization servers don’t use the &lt;code>scope&lt;/code> attribute, but instead have their own custom attribute. Or, at other times, the resource server may need to adapt the attribute or a composition of attributes into internalized authorities. To this end, the DSL exposes &lt;code>jwtAuthenticationConverter()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@EnableWebSecurity&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">DirectlyConfiguredJwkSetUri&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">WebSecurityConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpSecurity&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">http&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeRequests&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">anyRequest&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">authenticated&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">oauth2ResourceServer&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">jwt&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">jwtAuthenticationConverter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">grantedAuthoritiesExtractor&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">Converter&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Jwt&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">AbstractAuthenticationToken&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">grantedAuthoritiesExtractor&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">JwtAuthenticationConverter&lt;/span> &lt;span class="n">jwtAuthenticationConverter&lt;/span> &lt;span class="o">=&lt;/span>
&lt;span class="k">new&lt;/span> &lt;span class="n">JwtAuthenticationConverter&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">jwtAuthenticationConverter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setJwtGrantedAuthoritiesConverter&lt;/span>
&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">GrantedAuthoritiesExtractor&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">jwtAuthenticationConveter&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>which is responsible for converting a &lt;code>Jwt&lt;/code> into an &lt;code>Authentication&lt;/code>. As part of its configuration, we can supply a subsidiary converter to go from &lt;code>Jwt&lt;/code> to a &lt;code>Collection&lt;/code> of granted authorities. That final converter might be something like &lt;code>GrantedAuthoritiesExtractor&lt;/code> below:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">static&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">GrantedAuthoritiesExtractor&lt;/span>
&lt;span class="kd">implements&lt;/span> &lt;span class="n">Converter&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Jwt&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Collection&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">GrantedAuthority&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Collection&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">GrantedAuthority&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">convert&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Jwt&lt;/span> &lt;span class="n">jwt&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Collection&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">authorities&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">Collection&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;)&lt;/span>
&lt;span class="n">jwt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getClaims&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;mycustomclaim&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">authorities&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">stream&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">map&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SimpleGrantedAuthority&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">collect&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Collectors&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toList&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>For more flexibility, the DSL supports entirely replacing the converter with any class that implements &lt;code>Converter&amp;lt;jwt, abstractauthenticationtoken=&amp;quot;&amp;quot;&amp;gt;&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">static&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">CustomAuthenticationConverter&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">Converter&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Jwt&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">AbstractAuthenticationToken&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">AbstractAuthenticationToken&lt;/span> &lt;span class="nf">convert&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Jwt&lt;/span> &lt;span class="n">jwt&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">CustomAuthenticationToken&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">jwt&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="9configuring-validation">9 Configuring Validation&lt;/h2>
&lt;p>Using &lt;a href="http://blog.wss.cool/spring-security-jwt.html#oauth2resourceserver-jwt-minimalconfiguration" title="12.3.2 Minimal Configuration for JWTs">minimal Spring Boot configuration&lt;/a>, indicating the authorization server’s issuer uri, Resource Server will default to verifying the &lt;code>iss&lt;/code> claim as well as the &lt;code>exp&lt;/code> and &lt;code>nbf&lt;/code> timestamp claims. In circumstances where validation needs to be customized, Resource Server ships with two standard validators and also accepts custom &lt;code>OAuth2TokenValidator&lt;/code> instances.&lt;/p>
&lt;h3 id="customizing-timestamp-validation">Customizing Timestamp Validation&lt;/h3>
&lt;p>JWT’s typically have a window of validity, with the start of the window indicated in the &lt;code>nbf&lt;/code> claim and the end indicated in the &lt;code>exp&lt;/code> claim. However, every server can experience clock drift, which can cause tokens to appear expired to one server, but not to another. This can cause some implementation heartburn as the number of collaborating servers increases in a distributed system. Resource Server uses &lt;code>JwtTimestampValidator&lt;/code> to verify a token’s validity window, and it can be configured with a &lt;code>clockSkew&lt;/code> to alleviate the above problem:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="n">JwtDecoder&lt;/span> &lt;span class="nf">jwtDecoder&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">NimbusJwtDecoder&lt;/span> &lt;span class="n">jwtDecoder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">NimbusJwtDecoder&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">JwtDecoders&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">fromIssuerLocation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">issuerUri&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">OAuth2TokenValidator&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Jwt&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">withClockSkew&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DelegatingOAuth2TokenValidator&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;(&lt;/span>
&lt;span class="k">new&lt;/span> &lt;span class="n">JwtTimestampValidator&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Duration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">ofSeconds&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">60&lt;/span>&lt;span class="o">)),&lt;/span>
&lt;span class="k">new&lt;/span> &lt;span class="n">IssuerValidator&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">issuerUri&lt;/span>&lt;span class="o">));&lt;/span>
&lt;span class="n">jwtDecoder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setJwtValidator&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">withClockSkew&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">jwtDecoder&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>By default, Resource Server configures a clock skew of 30 seconds.&lt;/p>
&lt;/blockquote>
&lt;h3 id="configuring-a-custom-validator">Configuring a Custom Validator&lt;/h3>
&lt;p>Adding a check for the &lt;code>aud&lt;/code> claim is simple with the &lt;code>OAuth2TokenValidator&lt;/code> API:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">AudienceValidator&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">OAuth2TokenValidator&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Jwt&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">OAuth2Error&lt;/span> &lt;span class="n">error&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">OAuth2Error&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;invalid_token&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;The required audience is missing&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">OAuth2TokenValidatorResult&lt;/span> &lt;span class="nf">validate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Jwt&lt;/span> &lt;span class="n">jwt&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">jwt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAudience&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">contains&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;messaging&amp;#34;&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">OAuth2TokenValidatorResult&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">success&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">OAuth2TokenValidatorResult&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">failure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Then, to add into a resource server, it’s a matter of specifying the &lt;code>JwtDecoder&lt;/code> instance:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="n">JwtDecoder&lt;/span> &lt;span class="nf">jwtDecoder&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">NimbusJwtDecoder&lt;/span> &lt;span class="n">jwtDecoder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">NimbusJwtDecoder&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">JwtDecoders&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">fromIssuerLocation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">issuerUri&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">OAuth2TokenValidator&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Jwt&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">audienceValidator&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">AudienceValidator&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">OAuth2TokenValidator&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Jwt&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">withIssuer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">JwtValidators&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">createDefaultWithIssuer&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">issuerUri&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">OAuth2TokenValidator&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Jwt&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">withAudience&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DelegatingOAuth2TokenValidator&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;(&lt;/span>&lt;span class="n">withIssuer&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">audienceValidator&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">jwtDecoder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setJwtValidator&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">withAudience&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">jwtDecoder&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="10configuring-claim-set-mapping">10 Configuring Claim Set Mapping&lt;/h2>
&lt;p>Spring Security uses the &lt;a href="https://bitbucket.org/connect2id/nimbus-jose-jwt/wiki/Home">Nimbus&lt;/a> library for parsing JWTs and validating their signatures. Consequently, Spring Security is subject to Nimbus’s interpretation of each field value and how to coerce each into a Java type. For example, because Nimbus remains Java 7 compatible, it doesn’t use &lt;code>Instant&lt;/code> to represent timestamp fields. And it’s entirely possible to use a different library or for JWT processing, which may make its own coercion decisions that need adjustment. Or, quite simply, a resource server may want to add or remove claims from a JWT for domain-specific reasons. For these purposes, Resource Server supports mapping the JWT claim set with &lt;code>MappedJwtClaimSetConverter&lt;/code>.&lt;/p>
&lt;h3 id="customizing-the-conversion-of-a-single-claim">Customizing the Conversion of a Single Claim&lt;/h3>
&lt;p>By default, &lt;code>MappedJwtClaimSetConverter&lt;/code> will attempt to coerce claims into the following types:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Claim&lt;/th>
&lt;th>Java Type&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>aud&lt;/code>&lt;/td>
&lt;td>&lt;code>Collection&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>exp&lt;/code>&lt;/td>
&lt;td>&lt;code>Instant&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>iat&lt;/code>&lt;/td>
&lt;td>&lt;code>Instant&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>iss&lt;/code>&lt;/td>
&lt;td>&lt;code>String&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>jti&lt;/code>&lt;/td>
&lt;td>&lt;code>String&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>nbf&lt;/code>&lt;/td>
&lt;td>&lt;code>Instant&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sub&lt;/code>&lt;/td>
&lt;td>&lt;code>String&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>An individual claim’s conversion strategy can be configured using &lt;code>MappedJwtClaimSetConverter.withDefaults&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="n">JwtDecoder&lt;/span> &lt;span class="nf">jwtDecoder&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">NimbusJwtDecoder&lt;/span> &lt;span class="n">jwtDecoder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">NimbusJwtDecoder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">withJwkSetUri&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">jwkSetUri&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">MappedJwtClaimSetConverter&lt;/span> &lt;span class="n">converter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">MappedJwtClaimSetConverter&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withDefaults&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">singletonMap&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;sub&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">lookupUserIdBySub&lt;/span>&lt;span class="o">));&lt;/span>
&lt;span class="n">jwtDecoder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setClaimSetConverter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">converter&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">jwtDecoder&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This will keep all the defaults, except it will override the default claim converter for &lt;code>sub&lt;/code>.&lt;/p>
&lt;h3 id="adding-a-claim">Adding a Claim&lt;/h3>
&lt;p>&lt;code>MappedJwtClaimSetConverter&lt;/code> can also be used to add a custom claim, for example, to adapt to an existing system:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">MappedJwtClaimSetConverter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">withDefaults&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">singletonMap&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;custom&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">custom&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="s">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="removing-a-claim">Removing a Claim&lt;/h3>
&lt;p>And removing a claim is also simple, using the same API:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">MappedJwtClaimSetConverter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">withDefaults&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">singletonMap&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;legacyclaim&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">legacy&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="renaming-a-claim">Renaming a Claim&lt;/h3>
&lt;p>In more sophisticated scenarios, like consulting multiple claims at once or renaming a claim, Resource Server accepts any class that implements &lt;code>Converter&amp;lt;map&amp;lt;string, object=&amp;quot;&amp;quot;&amp;gt;, Map&amp;lt;string,object&amp;gt;&amp;gt;&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">UsernameSubClaimAdapter&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">Converter&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;,&lt;/span> &lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="n">MappedJwtClaimSetConverter&lt;/span> &lt;span class="n">delegate&lt;/span> &lt;span class="o">=&lt;/span>
&lt;span class="n">MappedJwtClaimSetConverter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">withDefaults&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">emptyMap&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">convert&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">claims&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">convertedClaims&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">delegate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">convert&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">claims&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">username&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">convertedClaims&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;user_name&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">convertedClaims&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;sub&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">convertedClaims&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>And then, the instance can be supplied like normal:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="n">JwtDecoder&lt;/span> &lt;span class="nf">jwtDecoder&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">NimbusJwtDecoder&lt;/span> &lt;span class="n">jwtDecoder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">NimbusJwtDecoder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">withJwkSetUri&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">jwkSetUri&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">jwtDecoder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setClaimSetConverter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">UsernameSubClaimAdapter&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">jwtDecoder&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="11configuring-timeouts">11 Configuring Timeouts&lt;/h2>
&lt;p>By default, Resource Server uses connection and socket timeouts of 30 seconds each for coordinating with the authorization server. This may be too short in some scenarios. Further, it doesn’t take into account more sophisticated patterns like back-off and discovery. To adjust the way in which Resource Server connects to the authorization server, &lt;code>NimbusJwtDecoder&lt;/code> accepts an instance of &lt;code>RestOperations&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">JwtDecoder&lt;/span> &lt;span class="nf">jwtDecoder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">RestTemplateBuilder&lt;/span> &lt;span class="n">builder&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">RestOperations&lt;/span> &lt;span class="n">rest&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">builder&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">setConnectionTimeout&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">60000&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">setReadTimeout&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">60000&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">NimbusJwtDecoder&lt;/span> &lt;span class="n">jwtDecoder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">NimbusJwtDecoder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">withJwkSetUri&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">jwkSetUri&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">restOperations&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">rest&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">jwtDecoder&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="12minimal-configuration-for-introspection">12 Minimal Configuration for Introspection&lt;/h2>
&lt;p>Typically, an opaque token can be verified via an &lt;a href="https://tools.ietf.org/html/rfc7662">OAuth 2.0 Introspection Endpoint&lt;/a>, hosted by the authorization server. This can be handy when revocation is a requirement. When using &lt;a href="https://spring.io/projects/spring-boot">Spring Boot&lt;/a>, configuring an application as a resource server that uses introspection consists of two basic steps. First, include the needed dependencies and second, indicate the introspection endpoint details.&lt;/p>
&lt;h3 id="specifying-the-authorization-server-1">Specifying the Authorization Server&lt;/h3>
&lt;p>To specify where the introspection endpoint is, simply do:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="k">security&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">oauth2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">resourceserver&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">opaque-token&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">introspection-uri&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>https&lt;span class="p">:&lt;/span>//idp.example.com/introspect&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">client-id&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>client&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">client-secret&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>secret&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Where &lt;a href="https://idp.example.com/introspect">&lt;code>https://idp.example.com/introspect&lt;/code>&lt;/a> is the introspection endpoint hosted by your authorization server and &lt;code>client-id&lt;/code> and &lt;code>client-secret&lt;/code> are the credentials needed to hit that endpoint. Resource Server will use these properties to further self-configure and subsequently validate incoming JWTs.&lt;/p>
&lt;blockquote>
&lt;p>When using introspection, the authorization server’s word is the law. If the authorization server responses that the token is valid, then it is.&lt;/p>
&lt;/blockquote>
&lt;p>And that’s it!&lt;/p>
&lt;h3 id="startup-expectations-1">Startup Expectations&lt;/h3>
&lt;p>When this property and these dependencies are used, Resource Server will automatically configure itself to validate Opaque Bearer Tokens. This startup process is quite a bit simpler than for JWTs since no endpoints need to be discovered and no additional validation rules get added.&lt;/p>
&lt;h3 id="runtime-expectations-1">Runtime Expectations&lt;/h3>
&lt;p>Once the application is started up, Resource Server will attempt to process any request containing an &lt;code>Authorization: Bearer&lt;/code> header:&lt;/p>
&lt;pre>&lt;code>GET / HTTP/1.1
Authorization: Bearer some-token-value # Resource Server will process this
&lt;/code>&lt;/pre>&lt;p>So long as this scheme is indicated, Resource Server will attempt to process the request according to the Bearer Token specification. Given an Opaque Token, Resource Server will&lt;/p>
&lt;ol>
&lt;li>Query the provided introspection endpoint using the provided credentials and the token&lt;/li>
&lt;li>Inspect the response for an &lt;code>{ 'active' : true }&lt;/code> attribute&lt;/li>
&lt;li>Map each scope to an authority with the prefix &lt;code>SCOPE_&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>The resulting &lt;code>Authentication#getPrincipal&lt;/code>, by default, is a Spring Security &lt;a href="https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/oauth2/core/OAuth2AuthenticatedPrincipal.html">&lt;code>OAuth2AuthenticatedPrincipal&lt;/code>&lt;/a> object, and &lt;code>Authentication#getName&lt;/code> maps to the token’s &lt;code>sub&lt;/code> property, if one is present. From here, you may want to jump to:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://blog.wss.cool/spring-security-jwt.html#oauth2resourceserver-opaque-attributes" title="12.3.13 Looking Up Attributes Post-Authentication">Looking Up Attributes Post-Authentication&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://blog.wss.cool/spring-security-jwt.html#oauth2resourceserver-opaque-authorization-extraction" title="Extracting Authorities Manually">Extracting Authorities Manually&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://blog.wss.cool/spring-security-jwt.html#oauth2resourceserver-opaque-jwt-introspector" title="12.3.17 Using Introspection with JWTs">Using Introspection with JWTs&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="13looking-up-attributes-post-authentication">13 Looking Up Attributes Post-Authentication&lt;/h2>
&lt;p>Once a token is authenticated, an instance of &lt;code>BearerTokenAuthentication&lt;/code> is set in the &lt;code>SecurityContext&lt;/code>. This means that it’s available in &lt;code>@Controller&lt;/code> methods when using &lt;code>@EnableWebMvc&lt;/code> in your configuration:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@GetMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/foo&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">foo&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">BearerTokenAuthentication&lt;/span> &lt;span class="n">authentication&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">authentication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getTokenAttributes&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;sub&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s">&amp;#34; is the subject&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Since &lt;code>BearerTokenAuthentication&lt;/code> holds an &lt;code>OAuth2AuthenticatedPrincipal&lt;/code>, that also means that it’s available to controller methods, too:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@GetMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/foo&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">foo&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nd">@AuthenticationPrincipal&lt;/span> &lt;span class="n">OAuth2AuthenticatedPrincipal&lt;/span> &lt;span class="n">principal&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">principal&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAttribute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;sub&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s">&amp;#34; is the subject&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="looking-up-attributes-via-spel">Looking Up Attributes Via SpEL&lt;/h3>
&lt;p>Of course, this also means that attributes can be accessed via SpEL. For example, if using &lt;code>@EnableGlobalMethodSecurity&lt;/code> so that you can use &lt;code>@PreAuthorize&lt;/code> annotations, you can do:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@PreAuthorize&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;principal?.attributes[&amp;#39;sub&amp;#39;] == &amp;#39;foo&amp;#39;&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">forFoosEyesOnly&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;foo&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="14overriding-or-replacing-boot-auto-configuration">14 Overriding or Replacing Boot Auto Configuration&lt;/h2>
&lt;p>There are two &lt;code>@Bean&lt;/code> s that Spring Boot generates on Resource Server’s behalf. The first is a &lt;code>WebSecurityConfigurerAdapter&lt;/code> that configures the app as a resource server. When use Opaque Token, this &lt;code>WebSecurityConfigurerAdapter&lt;/code> looks like:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpSecurity&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">http&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeRequests&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">anyRequest&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">authenticated&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">oauth2ResourceServer&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">OAuth2ResourceServerConfigurer&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">opaqueToken&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>If the application doesn’t expose a &lt;code>WebSecurityConfigurerAdapter&lt;/code> bean, then Spring Boot will expose the above default one. Replacing this is as simple as exposing the bean within the application:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@EnableWebSecurity&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">MyCustomSecurityConfiguration&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">WebSecurityConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpSecurity&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">http&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeRequests&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">mvcMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/messages/**&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">hasAuthority&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;SCOPE_message:read&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">anyRequest&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">authenticated&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">oauth2ResourceServer&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">opaqueToken&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">introspector&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">myIntrospector&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The above requires the scope of &lt;code>message:read&lt;/code> for any URL that starts with &lt;code>/messages/&lt;/code>. Methods on the &lt;code>oauth2ResourceServer&lt;/code> DSL will also override or replace auto configuration. For example, the second &lt;code>@Bean&lt;/code> Spring Boot creates is an &lt;code>OpaqueTokenIntrospector&lt;/code>, which decodes &lt;code>String&lt;/code> tokens into validated instances of &lt;code>OAuth2AuthenticatedPrincipal&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">OpaqueTokenIntrospector&lt;/span> &lt;span class="nf">introspector&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">NimbusOpaqueTokenIntrospector&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">introspectionUri&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">clientId&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">clientSecret&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>If the application doesn’t expose a &lt;code>OpaqueTokenIntrospector&lt;/code> bean, then Spring Boot will expose the above default one. And its configuration can be overridden using &lt;code>introspectionUri()&lt;/code> and &lt;code>introspectionClientCredentials()&lt;/code> or replaced using &lt;code>introspector()&lt;/code>.&lt;/p>
&lt;h3 id="using-introspectionuri">Using &lt;code>introspectionUri()&lt;/code>&lt;/h3>
&lt;p>An authorization server’s Introspection Uri can be configured &lt;a href="http://blog.wss.cool/spring-security-jwt.html#">as a configuration property&lt;/a> or it can be supplied in the DSL:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@EnableWebSecurity&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">DirectlyConfiguredIntrospectionUri&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">WebSecurityConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpSecurity&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">http&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeRequests&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">anyRequest&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">authenticated&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">oauth2ResourceServer&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">opaqueToken&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">introspectionUri&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;https://idp.example.com/introspect&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">introspectionClientCredentials&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;client&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;secret&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Using &lt;code>introspectionUri()&lt;/code> takes precedence over any configuration property.&lt;/p>
&lt;h3 id="using-introspector">Using &lt;code>introspector()&lt;/code>&lt;/h3>
&lt;p>More powerful than &lt;code>introspectionUri()&lt;/code> is &lt;code>introspector()&lt;/code>, which will completely replace any Boot auto configuration of &lt;code>OpaqueTokenIntrospector&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@EnableWebSecurity&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">DirectlyConfiguredIntrospector&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">WebSecurityConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpSecurity&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">http&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeRequests&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">anyRequest&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">authenticated&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">oauth2ResourceServer&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">opaqueToken&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">introspector&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">myCustomIntrospector&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This is handy when deeper configuration, like &lt;a href="http://blog.wss.cool/spring-security-jwt.html#oauth2resourceserver-opaque-authorization-extraction" title="Extracting Authorities Manually">authority mapping&lt;/a>, &lt;a href="http://blog.wss.cool/spring-security-jwt.html#oauth2resourceserver-opaque-jwt-introspector" title="12.3.17 Using Introspection with JWTs">JWT revocation&lt;/a>, or &lt;a href="http://blog.wss.cool/spring-security-jwt.html#oauth2resourceserver-opaque-timeouts" title="12.3.16 Configuring Timeouts">request timeouts&lt;/a>, is necessary.&lt;/p>
&lt;h3 id="exposing-a-opaquetokenintrospector-bean">Exposing a &lt;code>OpaqueTokenIntrospector&lt;/code> &lt;code>@Bean&lt;/code>&lt;/h3>
&lt;p>Or, exposing a &lt;code>OpaqueTokenIntrospector&lt;/code> &lt;code>@Bean&lt;/code> has the same effect as &lt;code>introspector()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">OpaqueTokenIntrospector&lt;/span> &lt;span class="nf">introspector&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">NimbusOpaqueTokenIntrospector&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">introspectionUri&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">clientId&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">clientSecret&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="15configuring-authorization">15 Configuring Authorization&lt;/h2>
&lt;p>An OAuth 2.0 Introspection endpoint will typically return a &lt;code>scope&lt;/code> attribute, indicating the scopes (or authorities) it’s been granted, for example: &lt;code>{ …​, &amp;quot;scope&amp;quot; : &amp;quot;messages contacts&amp;quot;}&lt;/code> When this is the case, Resource Server will attempt to coerce these scopes into a list of granted authorities, prefixing each scope with the string &amp;quot;SCOPE_&amp;quot;. This means that to protect an endpoint or method with a scope derived from an Opaque Token, the corresponding expressions should include this prefix:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@EnableWebSecurity&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">MappedAuthorities&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">WebSecurityConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpSecurity&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">http&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeRequests&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">authorizeRequests&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">authorizeRequests&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">mvcMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/contacts/**&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">hasAuthority&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;SCOPE_contacts&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">mvcMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/messages/**&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">hasAuthority&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;SCOPE_messages&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">anyRequest&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">authenticated&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">oauth2ResourceServer&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">OAuth2ResourceServerConfigurer&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">opaqueToken&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Or similarly with method security:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@PreAuthorize&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;hasAuthority(&amp;#39;SCOPE_messages&amp;#39;)&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Message&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">getMessages&lt;/span>&lt;span class="o">(...)&lt;/span> &lt;span class="o">{}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="extracting-authorities-manually-1">Extracting Authorities Manually&lt;/h3>
&lt;p>By default, Opaque Token support will extract the scope claim from an introspection response and parse it into individual &lt;code>GrantedAuthority&lt;/code> instances. For example, if the introspection response were:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;active&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;scope&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;message:read message:write&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Then Resource Server would generate an &lt;code>Authentication&lt;/code> with two authorities, one for &lt;code>message:read&lt;/code> and the other for &lt;code>message:write&lt;/code>. This can, of course, be customized using a custom &lt;code>OpaqueTokenIntrospector&lt;/code> that takes a look at the attribute set and converts in its own way:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">CustomAuthoritiesOpaqueTokenIntrospector&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">OpaqueTokenIntrospector&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">OpaqueTokenIntrospector&lt;/span> &lt;span class="n">delegate&lt;/span> &lt;span class="o">=&lt;/span>
&lt;span class="k">new&lt;/span> &lt;span class="n">NimbusOpaqueTokenIntrospector&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;https://idp.example.org/introspect&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;client&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;secret&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">OAuth2AuthenticatedPrincipal&lt;/span> &lt;span class="nf">introspect&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">token&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">OAuth2AuthenticatedPrincipal&lt;/span> &lt;span class="n">principal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">delegate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">introspect&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DefaultOAuth2AuthenticatedPrincipal&lt;/span>&lt;span class="o">(&lt;/span>
&lt;span class="n">principal&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="o">(),&lt;/span> &lt;span class="n">principal&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAttributes&lt;/span>&lt;span class="o">(),&lt;/span> &lt;span class="n">extractAuthorities&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">principal&lt;/span>&lt;span class="o">));&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Collection&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">GrantedAuthority&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">extractAuthorities&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">OAuth2AuthenticatedPrincipal&lt;/span> &lt;span class="n">principal&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">scopes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">principal&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAttribute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">OAuth2IntrospectionClaimNames&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">SCOPE&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">scopes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">stream&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">map&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SimpleGrantedAuthority&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">collect&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Collectors&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toList&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Thereafter, this custom introspector can be configured simply by exposing it as a &lt;code>@Bean&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">OpaqueTokenIntrospector&lt;/span> &lt;span class="nf">introspector&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">CustomAuthoritiesOpaqueTokenIntrospector&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="16configuring-timeouts">16 Configuring Timeouts&lt;/h2>
&lt;p>By default, Resource Server uses connection and socket timeouts of 30 seconds each for coordinating with the authorization server. This may be too short in some scenarios. Further, it doesn’t take into account more sophisticated patterns like back-off and discovery. To adjust the way in which Resource Server connects to the authorization server, &lt;code>NimbusOpaqueTokenIntrospector&lt;/code> accepts an instance of &lt;code>RestOperations&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">OpaqueTokenIntrospector&lt;/span> &lt;span class="nf">introspector&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">RestTemplateBuilder&lt;/span> &lt;span class="n">builder&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">RestOperations&lt;/span> &lt;span class="n">rest&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">builder&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">basicAuthentication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">clientId&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">clientSecret&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">setConnectionTimeout&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">60000&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">setReadTimeout&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">60000&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">NimbusOpaqueTokenIntrospector&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">introspectionUri&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">rest&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="17using-introspection-with-jwts">17 Using Introspection with JWTs&lt;/h2>
&lt;p>A common question is whether or not introspection is compatible with JWTs. Spring Security’s Opaque Token support has been designed to not care about the format of the token — it will gladly pass any token to the introspection endpoint provided. So, let’s say that you’ve got a requirement that requires you to check with the authorization server on each request, in case the JWT has been revoked. Even though you are using the JWT format for the token, your validation method is introspection, meaning you’d want to do:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="k">spring&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">security&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">oauth2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">resourceserver&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">opaque-token&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">introspection-uri&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>https&lt;span class="p">:&lt;/span>//idp.example.org/introspection&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">client-id&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>client&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">client-secret&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>secret&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>In this case, the resulting &lt;code>Authentication&lt;/code> would be &lt;code>BearerTokenAuthentication&lt;/code>. Any attributes in the corresponding &lt;code>OAuth2AuthenticatedPrincipal&lt;/code> would be whatever was returned by the introspection endpoint. But, let’s say that, oddly enough, the introspection endpoint only returns whether or not the token is active. Now what? In this case, you can create a custom &lt;code>OpaqueTokenIntrospector&lt;/code> that still hits the endpoint, but then updates the returned principal to have the JWTs claims as the attributes:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">JwtOpaqueTokenIntrospector&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">OpaqueTokenIntrospector&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">OpaqueTokenIntrospector&lt;/span> &lt;span class="n">delegate&lt;/span> &lt;span class="o">=&lt;/span>
&lt;span class="k">new&lt;/span> &lt;span class="n">NimbusOpaqueTokenIntrospector&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;https://idp.example.org/introspect&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;client&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;secret&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">JwtDecoder&lt;/span> &lt;span class="n">jwtDecoder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">NimbusJwtDecoder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">ParseOnlyJWTProcessor&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">OAuth2AuthenticatedPrincipal&lt;/span> &lt;span class="nf">introspect&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">token&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">OAuth2AuthenticatedPrincipal&lt;/span> &lt;span class="n">principal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">delegate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">introspect&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Jwt&lt;/span> &lt;span class="n">jwt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">jwtDecoder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">decode&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DefaultOAuth2AuthenticatedPrincipal&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">jwt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getClaims&lt;/span>&lt;span class="o">(),&lt;/span> &lt;span class="n">NO_AUTHORITIES&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">JwtException&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">OAuth2IntrospectionException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">ParseOnlyJWTProcessor&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">DefaultJWTProcessor&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SecurityContext&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">JWTClaimsSet&lt;/span> &lt;span class="nf">process&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SignedJWT&lt;/span> &lt;span class="n">jwt&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">SecurityContext&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">throws&lt;/span> &lt;span class="n">JOSEException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">jwt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getJWTClaimSet&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Thereafter, this custom introspector can be configured simply by exposing it as a &lt;code>@Bean&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">OpaqueTokenIntrospector&lt;/span> &lt;span class="nf">introspector&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">JwtOpaqueTokenIntropsector&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="18calling-a-userinfo-endpoint">18 Calling a &lt;code>/userinfo&lt;/code> Endpoint&lt;/h2>
&lt;p>Generally speaking, a Resource Server doesn’t care about the underlying user, but instead about the authorities that have been granted. That said, at times it can be valuable to tie the authorization statement back to a user. If an application is also using &lt;code>spring-security-oauth2-client&lt;/code>, having set up the appropriate &lt;code>ClientRegistrationRepository&lt;/code>, then this is quite simple with a custom &lt;code>OpaqueTokenIntrospector&lt;/code>. This implementation below does three things:&lt;/p>
&lt;ul>
&lt;li>Delegates to the introspection endpoint, to affirm the token’s validity&lt;/li>
&lt;li>Looks up the appropriate client registration associated with the &lt;code>/userinfo&lt;/code> endpoint&lt;/li>
&lt;li>Invokes and returns the response from the &lt;code>/userinfo&lt;/code> endpoint&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">UserInfoOpaqueTokenIntrospector&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">OpaqueTokenIntrospector&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="n">OpaqueTokenIntrospector&lt;/span> &lt;span class="n">delegate&lt;/span> &lt;span class="o">=&lt;/span>
&lt;span class="k">new&lt;/span> &lt;span class="n">NimbusOpaqueTokenIntrospector&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;https://idp.example.org/introspect&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;client&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;secret&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="n">OAuth2UserService&lt;/span> &lt;span class="n">oauth2UserService&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DefaultOAuth2UserService&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="n">ClientRegistrationRepository&lt;/span> &lt;span class="n">repository&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="c1">// ... constructor
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">OAuth2AuthenticatedPrincipal&lt;/span> &lt;span class="nf">introspect&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">token&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">OAuth2AuthenticatedPrincipal&lt;/span> &lt;span class="n">authorized&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">delegate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">introspect&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">Instant&lt;/span> &lt;span class="n">issuedAt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">authorized&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAttribute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ISSUED_AT&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">Instant&lt;/span> &lt;span class="n">expiresAt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">authorized&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAttribute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">EXPIRES_AT&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">ClientRegistration&lt;/span> &lt;span class="n">clientRegistration&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">repository&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findByRegistrationId&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;registration-id&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">OAuth2AccessToken&lt;/span> &lt;span class="n">token&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">OAuth2AccessToken&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">BEARER&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">token&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">issuedAt&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">expiresAt&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">OAuth2UserRequest&lt;/span> &lt;span class="n">oauth2UserRequest&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">OAuth2UserRequest&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">clientRegistration&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">token&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">oauth2UserService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">loadUser&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">oauth2UserRequest&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>If you aren’t using &lt;code>spring-security-oauth2-client&lt;/code>, it’s still quite simple. You will simply need to invoke the &lt;code>/userinfo&lt;/code> with your own instance of &lt;code>WebClient&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">UserInfoOpaqueTokenIntrospector&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">OpaqueTokenIntrospector&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="n">OpaqueTokenIntrospector&lt;/span> &lt;span class="n">delegate&lt;/span> &lt;span class="o">=&lt;/span>
&lt;span class="k">new&lt;/span> &lt;span class="n">NimbusOpaqueTokenIntrospector&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;https://idp.example.org/introspect&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;client&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;secret&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="n">WebClient&lt;/span> &lt;span class="n">rest&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">WebClient&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">create&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">OAuth2AuthenticatedPrincipal&lt;/span> &lt;span class="nf">introspect&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">token&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">OAuth2AuthenticatedPrincipal&lt;/span> &lt;span class="n">authorized&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">delegate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">introspect&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">makeUserInfoRequest&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">authorized&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Either way, having created your &lt;code>OpaqueTokenIntrospector&lt;/code>, you should publish it as a &lt;code>@Bean&lt;/code> to override the defaults:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="n">OpaqueTokenIntrospector&lt;/span> &lt;span class="nf">introspector&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">UserInfoOpaqueTokenIntrospector&lt;/span>&lt;span class="o">(...);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="19supporting-both-jwt-and-opaque-token">19 Supporting both JWT and Opaque Token&lt;/h2>
&lt;p>In some cases, you may have a need to access both kinds of tokens. For example, you may support more than one tenant where one tenant issues JWTs and the other issues opaque tokens. If this decision must be made at request-time, then you can use an &lt;code>AuthenticationManagerResolver&lt;/code> to achieve it, like so:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="n">AuthenticationManagerResolver&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">tokenAuthenticationManagerResolver&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">BearerTokenResolver&lt;/span> &lt;span class="n">bearerToken&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DefaultBearerTokenResolver&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">JwtAuthenticationProvider&lt;/span> &lt;span class="n">jwt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">jwt&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">OpaqueTokenAuthenticationProvider&lt;/span> &lt;span class="n">opaqueToken&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">opaqueToken&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">request&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">token&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">bearerToken&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">resolve&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">isAJwt&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">jwt&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">authenticate&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">opaqueToken&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">authenticate&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>And then specify this &lt;code>AuthenticationManagerResolver&lt;/code> in the DSL:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">http&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeRequests&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">anyRequest&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">authenticated&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">oauth2ResourceServer&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">authenticationManagerResolver&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tokenAuthenticationManagerResolver&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="20multi-tenancy">20 Multi-tenancy&lt;/h2>
&lt;p>A resource server is considered multi-tenant when there are multiple strategies for verifying a bearer token, keyed by some tenant identifier. For example, your resource server may accept bearer tokens from two different authorization servers. Or, your authorization server may represent a multiplicity of issuers. In each case, there are two things that need to be done and trade-offs associated with how you choose to do them:&lt;/p>
&lt;ol>
&lt;li>Resolve the tenant&lt;/li>
&lt;li>Propagate the tenant&lt;/li>
&lt;/ol>
&lt;h3 id="resolving-the-tenant-by-request-material">Resolving the Tenant By Request Material&lt;/h3>
&lt;p>Resolving the tenant by request material can be done my implementing an &lt;code>AuthenticationManagerResolver&lt;/code>, which determines the &lt;code>AuthenticationManager&lt;/code> at runtime, like so:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Component&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">TenantAuthenticationManagerResolver&lt;/span>
&lt;span class="kd">implements&lt;/span> &lt;span class="n">AuthenticationManagerResolver&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="n">BearerTokenResolver&lt;/span> &lt;span class="n">resolver&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DefaultBearerTokenResolver&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="n">TenantRepository&lt;/span> &lt;span class="n">tenants&lt;/span>&lt;span class="o">;&lt;/span> &lt;span class="c1">// 1
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">AuthenticationManager&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">authenticationManagers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ConcurrentHashMap&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;();&lt;/span> &lt;span class="c1">// 2
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">TenantAuthenticationManagerResolver&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">TenantRepository&lt;/span> &lt;span class="n">tenants&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tenants&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tenants&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">AuthenticationManager&lt;/span> &lt;span class="nf">resolve&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">authenticationManagers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">computeIfAbsent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">toTenant&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">fromTenant&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">toTenant&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">pathParts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getRequestURI&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">split&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">pathParts&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">length&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">pathParts&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">AuthenticationManager&lt;/span> &lt;span class="nf">fromTenant&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">tenant&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">Optional&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">ofNullable&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tenants&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">tenant&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="c1">// 3
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">map&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">JwtDecoders&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">fromIssuerLocation&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="c1">// 4
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">map&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">JwtAuthenticationProvider&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">orElseThrow&lt;/span>&lt;span class="o">(()&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">IllegalArgumentException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;unknown tenant&amp;#34;&lt;/span>&lt;span class="o">))::&lt;/span>&lt;span class="n">authenticate&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>A hypothetical source for tenant information&lt;/li>
&lt;li>A cache for &lt;code>AuthenticationManager&lt;/code>s, keyed by tenant identifier&lt;/li>
&lt;li>Looking up the tenant is more secure than simply computing the issuer location on the fly - the lookup acts as a tenant whitelist&lt;/li>
&lt;li>Create a JwtDecoder via the discovery endpoint - the lazy lookup here means that you don’t need to configure all tenants at startup&lt;/li>
&lt;/ol>
&lt;p>And then specify this &lt;code>AuthenticationManagerResolver&lt;/code> in the DSL:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">http&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeRequests&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">anyRequest&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">authenticated&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">oauth2ResourceServer&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">authenticationManagerResolver&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tenantAuthenticationManagerResolver&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="resolving-the-tenant-by-claim">Resolving the Tenant By Claim&lt;/h3>
&lt;p>Resolving the tenant by claim is similar to doing so by request material. The only real difference is the &lt;code>toTenant&lt;/code> method implementation:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Component&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">TenantAuthenticationManagerResolver&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">AuthenticationManagerResolver&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="n">BearerTokenResolver&lt;/span> &lt;span class="n">resolver&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DefaultBearerTokenResolver&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="n">TenantRepository&lt;/span> &lt;span class="n">tenants&lt;/span>&lt;span class="o">;&lt;/span> &lt;span class="c1">// 1
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">AuthenticationManager&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">authenticationManagers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ConcurrentHashMap&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;();&lt;/span> &lt;span class="c1">// 2
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">TenantAuthenticationManagerResolver&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">TenantRepository&lt;/span> &lt;span class="n">tenants&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tenants&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tenants&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">AuthenticationManager&lt;/span> &lt;span class="nf">resolve&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">authenticationManagers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">computeIfAbsent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">toTenant&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">fromTenant&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">// 3
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">toTenant&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">token&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">resolver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">resolve&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">JWTParser&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">parse&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">getJWTClaimsSet&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">getIssuer&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">Exception&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">IllegalArgumentException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">AuthenticationManager&lt;/span> &lt;span class="nf">fromTenant&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">tenant&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">Optional&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">ofNullable&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tenants&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">tenant&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="c1">// 4
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">map&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">JwtDecoders&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">fromIssuerLocation&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="c1">// 5
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">map&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">JwtAuthenticationProvider&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">orElseThrow&lt;/span>&lt;span class="o">(()&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">IllegalArgumentException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;unknown tenant&amp;#34;&lt;/span>&lt;span class="o">))::&lt;/span>&lt;span class="n">authenticate&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="http://blog.wss.cool/spring-security-jwt.html#CO14-1">&lt;img src="images/1.png" alt="1">&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>A hypothetical source for tenant information&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="http://blog.wss.cool/spring-security-jwt.html#CO14-2">&lt;img src="images/2.png" alt="1">&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>A cache for &lt;code>AuthenticationManager&lt;/code>s, keyed by tenant identifier&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="http://blog.wss.cool/spring-security-jwt.html#CO14-3">&lt;img src="images/3.png" alt="1">&lt;/a>&lt;/td>
&lt;td>&lt;a href="http://blog.wss.cool/spring-security-jwt.html#CO14-4">&lt;img src="images/4.png" alt="1">&lt;/a>&lt;/td>
&lt;td>Looking up the tenant is more secure than simply computing the issuer location on the fly - the lookup acts as a tenant whitelist&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="http://blog.wss.cool/spring-security-jwt.html#CO14-5">&lt;img src="images/5.png" alt="1">&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>Create a &lt;code>JwtDecoder&lt;/code> via the discovery endpoint - the lazy lookup here means that you don’t need to configure all tenants at startup&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">http&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeRequests&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">anyRequest&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">authenticated&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">oauth2ResourceServer&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">authenticationManagerResolver&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tenantAuthenticationManagerResolver&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="parsing-the-claim-only-once">Parsing the Claim Only Once&lt;/h3>
&lt;p>You may have observed that this strategy, while simple, comes with the trade-off that the JWT is parsed once by the &lt;code>AuthenticationManagerResolver&lt;/code> and then again by the &lt;code>JwtDecoder&lt;/code>. This extra parsing can be alleviated by configuring the &lt;code>JwtDecoder&lt;/code> directly with a &lt;code>JWTClaimSetAwareJWSKeySelector&lt;/code> from Nimbus:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Component&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">TenantJWSKeySelector&lt;/span>
&lt;span class="kd">implements&lt;/span> &lt;span class="n">JWTClaimSetAwareJWSKeySelector&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SecurityContext&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="n">TenantRepository&lt;/span> &lt;span class="n">tenants&lt;/span>&lt;span class="o">;&lt;/span> &lt;span class="n">1&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">JWSKeySelector&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SecurityContext&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">selectors&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ConcurrentHashMap&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;();&lt;/span> &lt;span class="n">2&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">TenantJWSKeySelector&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">TenantRepository&lt;/span> &lt;span class="n">tenants&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tenants&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tenants&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;?&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">Key&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">selectKeys&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">JWSHeader&lt;/span> &lt;span class="n">jwsHeader&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">JWTClaimsSet&lt;/span> &lt;span class="n">jwtClaimsSet&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">SecurityContext&lt;/span> &lt;span class="n">securityContext&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">throws&lt;/span> &lt;span class="n">KeySourceException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">selectors&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">computeIfAbsent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">toTenant&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">jwtClaimsSet&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">fromTenant&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">selectJWSKeys&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">jwsHeader&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">securityContext&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">toTenant&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">JWTClaimsSet&lt;/span> &lt;span class="n">claimSet&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">claimSet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getClaim&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;iss&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">JWSKeySelector&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SecurityContext&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">fromTenant&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">tenant&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">Optional&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">ofNullable&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tenantRepository&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findById&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">tenant&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="n">3&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">map&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">t&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAttrbute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;jwks_uri&amp;#34;&lt;/span>&lt;span class="o">))&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">map&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">fromUri&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">orElseThrow&lt;/span>&lt;span class="o">(()&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">IllegalArgumentException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;unknown tenant&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">JWSKeySelector&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SecurityContext&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">fromUri&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">uri&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">JWSAlgorithmFamilyJWSKeySelector&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">fromJWKSetURL&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">URL&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">uri&lt;/span>&lt;span class="o">));&lt;/span> &lt;span class="n">4&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">Exception&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">IllegalArgumentException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="http://blog.wss.cool/spring-security-jwt.html#CO14-1">&lt;img src="images/1.png" alt="1">&lt;/a>&lt;/td>
&lt;td>A hypothetical source for tenant information&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="http://blog.wss.cool/spring-security-jwt.html#CO14-2">&lt;img src="images/2.png" alt="1">&lt;/a>&lt;/td>
&lt;td>A cache for &lt;code>JWKKeySelector&lt;/code>s, keyed by tenant identifier&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="http://blog.wss.cool/spring-security-jwt.html#CO14-3">&lt;img src="images/3.png" alt="1">&lt;/a>&lt;/td>
&lt;td>Looking up the tenant is more secure than simply calculating the JWK Set endpoint on the fly - the lookup acts as a tenant whitelist&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="http://blog.wss.cool/spring-security-jwt.html#CO14-4">&lt;img src="images/4.png" alt="1">&lt;/a>&lt;/td>
&lt;td>Create a &lt;code>JWSKeySelector&lt;/code> via the types of keys that come back from the JWK Set endpoint - the lazy lookup here means that you don’t need to configure all tenants at startupp&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>The above key selector is a composition of many key selectors. It chooses which key selector to use based on the &lt;code>iss&lt;/code> claim in the JWT.&lt;/p>
&lt;blockquote>
&lt;p>To use this approach, make sure that the authorization server is configured to include the claim set as part of the token’s signature. Without this, you have no guarantee that the issuer hasn’t been altered by a bad actor.&lt;/p>
&lt;/blockquote>
&lt;p>Next, we can construct a &lt;code>JWTProcessor&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="n">JWTProcessor&lt;/span> &lt;span class="nf">jwtProcessor&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">JWTClaimSetJWSKeySelector&lt;/span> &lt;span class="n">keySelector&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">ConfigurableJWTProcessor&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SecurityContext&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">jwtProcessor&lt;/span> &lt;span class="o">=&lt;/span>
&lt;span class="k">new&lt;/span> &lt;span class="n">DefaultJWTProcessor&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">jwtProcessor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setJWTClaimSetJWSKeySelector&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">keySelector&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">jwtProcessor&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>As you are already seeing, the trade-off for moving tenant-awareness down to this level is more configuration. We have just a bit more. Next, we still want to make sure you are validating the issuer. But, since the issuer may be different per JWT, then you’ll need a tenant-aware validator, too:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Component&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">TenantJwtIssuerValidator&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">OAuth2TokenValidator&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Jwt&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="n">TenantRepository&lt;/span> &lt;span class="n">tenants&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">JwtIssuerValidator&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">validators&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ConcurrentHashMap&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;();&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">TenantJwtIssuerValidator&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">TenantRepository&lt;/span> &lt;span class="n">tenants&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tenants&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tenants&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">OAuth2TokenValidatorResult&lt;/span> &lt;span class="nf">validate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Jwt&lt;/span> &lt;span class="n">token&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">validators&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">computeIfAbsent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">toTenant&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">fromTenant&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">validate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">toTenant&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Jwt&lt;/span> &lt;span class="n">jwt&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">jwt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getIssuer&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">JwtIssuerValidator&lt;/span> &lt;span class="nf">fromTenant&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">tenant&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">Optional&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">ofNullable&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">tenants&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">findById&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">tenant&lt;/span>&lt;span class="o">))&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">map&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">t&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAttribute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;issuer&amp;#34;&lt;/span>&lt;span class="o">))&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">map&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">JwtIssuerValidator&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">orElseThrow&lt;/span>&lt;span class="o">(()&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">IllegalArgumentException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;unknown tenant&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now that we have a tenant-aware processor and a tenant-aware validator, we can proceed with creating our &lt;code>JwtDecoder&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="n">JwtDecoder&lt;/span> &lt;span class="nf">jwtDecoder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">JWTProcessor&lt;/span> &lt;span class="n">jwtProcessor&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">OAuth2TokenValidator&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Jwt&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">jwtValidator&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">NimbusJwtDecoder&lt;/span> &lt;span class="n">decoder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">NimbusJwtDecoder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">processor&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">OAuth2TokenValidator&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Jwt&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">validator&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DelegatingOAuth2TokenValidator&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>
&lt;span class="o">(&lt;/span>&lt;span class="n">JwtValidators&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">createDefault&lt;/span>&lt;span class="o">(),&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">jwtValidator&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">decoder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setJwtValidator&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">validator&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">decoder&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>We’ve finished talking about resolving the tenant. If you’ve chosen to resolve the tenant by request material, then you’ll need to make sure you address your downstream resource servers in the same way. For example, if you are resolving it by subdomain, you’ll need to address the downstream resource server using the same subdomain. However, if you resolve it by a claim in the bearer token, read on to learn about &lt;a href="http://blog.wss.cool/spring-security-jwt.html#oauth2resourceserver-bearertoken-resolver" title="12.3.21 Bearer Token Resolution">Spring Security’s support for bearer token propagation&lt;/a>.&lt;/p>
&lt;h2 id="21bearer-token-resolution">21 Bearer Token Resolution&lt;/h2>
&lt;p>By default, Resource Server looks for a bearer token in the &lt;code>Authorization&lt;/code> header. This, however, can be customized in a couple of ways.&lt;/p>
&lt;h3 id="reading-the-bearer-token-from-a-custom-header">Reading the Bearer Token from a Custom Header&lt;/h3>
&lt;p>For example, you may have a need to read the bearer token from a custom header. To achieve this, you can wire a &lt;code>HeaderBearerTokenResolver&lt;/code> instance into the DSL, as you can see in the following example:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">http&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">oauth2ResourceServer&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">bearerTokenResolver&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">HeaderBearerTokenResolver&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;x-goog-iap-jwt-assertion&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="reading-the-bearer-token-from-a-form-parameter">Reading the Bearer Token from a Form Parameter&lt;/h3>
&lt;p>Or, you may wish to read the token from a form parameter, which you can do by configuring the &lt;code>DefaultBearerTokenResolver&lt;/code>, as you can see below:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">DefaultBearerTokenResolver&lt;/span> &lt;span class="n">resolver&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DefaultBearerTokenResolver&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">resolver&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setAllowFormEncodedBodyParameter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">http&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">oauth2ResourceServer&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">bearerTokenResolver&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">resolver&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="22bearer-token-propagation">22 Bearer Token Propagation&lt;/h2>
&lt;p>Now that you’re in possession of a bearer token, it might be handy to pass that to downstream services. This is quite simple with &lt;a href="https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/oauth2/server/resource/web/reactive/function/client/ServletBearerExchangeFilterFunction.html">&lt;code>ServletBearerExchangeFilterFunction&lt;/code>&lt;/a>, which you can see in the following example:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">WebClient&lt;/span> &lt;span class="nf">rest&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">WebClient&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">builder&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">filter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">ServletBearerExchangeFilterFunction&lt;/span>&lt;span class="o">())&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>When the above &lt;code>WebClient&lt;/code> is used to perform requests, Spring Security will look up the current &lt;code>Authentication&lt;/code> and extract any &lt;a href="https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/oauth2/core/AbstractOAuth2Token.html">&lt;code>AbstractOAuth2Token&lt;/code>&lt;/a> credential. Then, it will propagate that token in the &lt;code>Authorization&lt;/code> header. For example:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">rest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">uri&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;https://other-service.example.com/endpoint&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">retrieve&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">bodyToMono&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">block&lt;/span>&lt;span class="o">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Will invoke the &lt;a href="https://other-service.example.com/endpoint">&lt;code>https://other-service.example.com/endpoint&lt;/code>&lt;/a>, adding the bearer token &lt;code>Authorization&lt;/code> header for you. In places where you need to override this behavior, it’s a simple matter of supplying the header yourself, like so:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">rest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">uri&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;https://other-service.example.com/endpoint&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">headers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">headers&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">headers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setBearerAuth&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">overridingToken&lt;/span>&lt;span class="o">))&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">retrieve&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">bodyToMono&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">block&lt;/span>&lt;span class="o">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>In this case, the filter will fall back and simply forward the request onto the rest of the web filter chain.&lt;/p>
&lt;blockquote>
&lt;p>Unlike the &lt;a href="https://docs.spring.io/spring-security/site/docs/current-SNAPSHOT/api/org/springframework/security/oauth2/client/web/reactive/function/client/ServletOAuth2AuthorizedClientExchangeFilterFunction.html">OAuth 2.0 Client filter function&lt;/a>, this filter function makes no attempt to renew the token, should it be expired. To obtain this level of support, please use the OAuth 2.0 Client filter.&lt;/p>
&lt;/blockquote>
&lt;h3 id="resttemplate-support">&lt;code>RestTemplate&lt;/code> support&lt;/h3>
&lt;p>There is no dedicated support for &lt;code>RestTemplate&lt;/code> at the moment, but you can achieve propagation quite simply with your own interceptor:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Bean&lt;/span>
&lt;span class="n">RestTemplate&lt;/span> &lt;span class="nf">rest&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">RestTemplate&lt;/span> &lt;span class="n">rest&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">RestTemplate&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">rest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getInterceptors&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">((&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">body&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">execution&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Authentication&lt;/span> &lt;span class="n">authentication&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SecurityContextHolder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getContext&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">getAuthentication&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">authentication&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">execution&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">execute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">body&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(!(&lt;/span>&lt;span class="n">authentication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getCredentials&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="k">instanceof&lt;/span> &lt;span class="n">AbstractOAuth2Token&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">execution&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">execute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">body&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">AbstractOAuth2Token&lt;/span> &lt;span class="n">token&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">AbstractOAuth2Token&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">authentication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getCredentials&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getHeaders&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">setBearerAuth&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getTokenValue&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">execution&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">execute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">body&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">});&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">rest&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/spring/" term="spring" label="spring"/></entry><entry><title type="text">Spring推荐使用构造器注入</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/spring%E6%8E%A8%E8%8D%90%E4%BD%BF%E7%94%A8%E6%9E%84%E9%80%A0%E5%99%A8%E6%B3%A8%E5%85%A5.html"/><id>http://blog.wss.cool/spring%E6%8E%A8%E8%8D%90%E4%BD%BF%E7%94%A8%E6%9E%84%E9%80%A0%E5%99%A8%E6%B3%A8%E5%85%A5.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-01-18T18:30:02+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Spring团队通常提倡构造函数注入，因为它可以使应用程序组件实现不可变对象并确保所……</summary><content type="html">&lt;p>Spring团队通常提倡构造函数注入，因为它可以使应用程序组件实现不可变对象并确保所需的依赖项不为null。此外，构造函数注入的组件始终以完全初始化的状态返回到客户端（调用）代码。附带说明一下，大量的构造函数自变量是一种不好的代码味道，这意味着该类可能承担了太多的职责，应该对其进行重构以更好地解决关注点分离问题。&lt;/p>
&lt;p>我们通常建议人们对所有必需的协作者使用构造函数注入，对所有其他属性使用setter注入。同样，构造函数注入可确保满足所有必需属性，并且根本不可能以无效状态（未通过其协作者）实例化对象。换句话说，在使用构造函数注入时，您不必使用专用机制来确保设置了必需的属性（普通Java机制除外）。&lt;/p></content><category scheme="http://blog.wss.cool/categories/spring/" term="spring" label="spring"/><category scheme="http://blog.wss.cool/tags/%E6%9E%84%E9%80%A0%E5%99%A8%E6%B3%A8%E5%85%A5/" term="构造器注入" label="构造器注入"/><category scheme="http://blog.wss.cool/tags/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/" term="依赖注入" label="依赖注入"/></entry><entry><title type="text">Spring Boot 中读取配置文件中的变量</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%90%8E%E7%AB%AF/spring/spring-boot%E4%B8%AD%E8%AF%BB%E5%8F%96%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84%E5%8F%98%E9%87%8F/"/><id>http://blog.wss.cool/posts/%E5%90%8E%E7%AB%AF/spring/spring-boot%E4%B8%AD%E8%AF%BB%E5%8F%96%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84%E5%8F%98%E9%87%8F/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-01-18T17:57:27+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">在application.yml配置文件中加入自定义变量，然后在程序中读取他们。</summary><content type="html">&lt;p>在application.yml中配置的变量，可以在代码中引用到。&lt;/p>
&lt;h2 id="添加依赖">添加依赖&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.boot&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-boot-configuration-processor&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;optional&amp;gt;&lt;/span>true&lt;span class="nt">&amp;lt;/optional&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.2.0.RELEASE&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="定义变量">定义变量&lt;/h2>
&lt;p>application.yml文件中加入自定义的变量&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="k">my&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>wanngshushuo&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="对应的实体类">对应的实体类&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Component&lt;/span> &lt;span class="c1">// 文档中没有这个注释，但是不写会报错
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nd">@ConfigurationProperties&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">prefix&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;my&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">MyConfig&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="c1">// getter setter
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="在代码中使用">在代码中使用&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@RestController&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">MainController&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="n">MyConfig&lt;/span> &lt;span class="n">myConfig&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">MainService&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">MyConfig&lt;/span> &lt;span class="n">myConfig&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">myConfig&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">myConfig&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@GetMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/update&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">updateBlog&lt;/span>&lt;span class="o">(){&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">myConfig&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/spring/" term="spring" label="spring"/></entry><entry><title type="text">Java执行shell命令</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/java%E6%89%A7%E8%A1%8Cshell%E5%91%BD%E4%BB%A4.html"/><id>http://blog.wss.cool/java%E6%89%A7%E8%A1%8Cshell%E5%91%BD%E4%BB%A4.html</id><updated>2020-01-18T17:53:17+08:00</updated><published>2020-01-18T17:53:17+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">添加依赖 首先使用Spring Boot开启一个RESTful项目，额外的加上Apach……</summary><content type="html">&lt;h2 id="添加依赖">添加依赖&lt;/h2>
&lt;p>首先使用&lt;code>Spring Boot&lt;/code>开启一个&lt;code>RESTful&lt;/code>项目，额外的加上&lt;code>Apache Commons Exec&lt;/code>的依赖。&lt;/p>
&lt;blockquote>
&lt;p>Exec官网&lt;sup id="fnref:1">&lt;a href="http://blog.wss.cool/java%E6%89%A7%E8%A1%8Cshell%E5%91%BD%E4%BB%A4.html#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>，&lt;a href="https://commons.apache.org/proper/commons-exec/apidocs/index.html">API文档&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.apache.commons&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>commons-exec&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>1.3&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="代码实现">代码实现&lt;/h2>
&lt;p>这里分两种情况。一个是最简的只关心执行是否成功，也就是code大于0为失败；另一个是需要拿到执行的标准输出和错误的信息。&lt;/p>
&lt;h3 id="只关心是否成功">只关心是否成功&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Service&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">MainService&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Integer&lt;/span> &lt;span class="nf">updateBlogFromGit&lt;/span>&lt;span class="o">(){&lt;/span>
&lt;span class="c1">// 1
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">CommandLine&lt;/span> &lt;span class="n">pull&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">CommandLine&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">parse&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;git pull&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">// 2
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">DefaultExecutor&lt;/span> &lt;span class="n">executor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DefaultExecutor&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">executor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setWorkingDirectory&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">File&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/home/ubuntu/blog&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;span class="c1">// 3，省略try_catch
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">exitValue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">executor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">execute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">pull&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">exitValue&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">exitValue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">executor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">execute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">hugo&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">exitValue&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>准备要运行的shell命令&lt;/li>
&lt;li>创建执行器，并设置工作目录&lt;/li>
&lt;li>最后执行命令，返回code&lt;/li>
&lt;/ol>
&lt;h3 id="要拿到标准输出和错误的信息">要拿到标准输出和错误的信息&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Service&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">MainService&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">updateBlogFromGit&lt;/span>&lt;span class="o">(){&lt;/span>
&lt;span class="c1">// 1
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">CommandLine&lt;/span> &lt;span class="n">pull&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">CommandLine&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">parse&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;git pull&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">CommandLine&lt;/span> &lt;span class="n">hugo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">CommandLine&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">parse&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;hugo&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">// 2
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">ByteArrayOutputStream&lt;/span> &lt;span class="n">outputStream&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ByteArrayOutputStream&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">ByteArrayOutputStream&lt;/span> &lt;span class="n">errorStream&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ByteArrayOutputStream&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">PumpStreamHandler&lt;/span> &lt;span class="n">streamHandler&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">PumpStreamHandler&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">outputStream&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">errorStream&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">// 3
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">DefaultExecutor&lt;/span> &lt;span class="n">executor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DefaultExecutor&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">executor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setWorkingDirectory&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">File&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/home/ubuntu/blog&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;span class="n">executor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setStreamHandler&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">streamHandler&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">// 4
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">try&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="n">exitValue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">executor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">execute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">pull&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">exitValue&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">exitValue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">executor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">execute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">hugo&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">exitValue&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="n">result&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">outputStream&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toString&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">errorStream&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toString&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">ExecuteException&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">errorStream&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toString&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">IOException&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getMessage&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>准备要运行的shell命令&lt;/li>
&lt;li>准备接收标准输出和错误的Stream&lt;/li>
&lt;li>创建执行器，并设置工作目录，设置StreamHandler&lt;/li>
&lt;li>最后执行命令（如果执行时出错会返回大于0的整数），返回标准输出或错误信息或报错堆栈信息&lt;/li>
&lt;/ol>
&lt;h2 id="收获">收获&lt;/h2>
&lt;p>技能树：&lt;/p>
&lt;pre>&lt;code>后端 --&amp;gt; Java --&amp;gt; 工具库 --&amp;gt; Exec --&amp;gt; 使用
后端 --&amp;gt; Java --&amp;gt; 语言基础 --&amp;gt; ByteArrayOutputStream --&amp;gt; 使用
&lt;/code>&lt;/pre>&lt;h2 id="其他相关内容">其他相关内容&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://wowfriday.cn/posts/linux-base/#%E4%BD%BF%E7%94%A8systemd%E5%90%AF%E5%8A%A8%E5%85%B3%E9%97%ADjava%E7%A8%8B%E5%BA%8F">使用systemd启动关闭Java程序&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wowfriday.cn/nginx.html#%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE">配置Nginx&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>Exec官网 &lt;a href="https://commons.apache.org/proper/commons-exec/">https://commons.apache.org/proper/commons-exec/&lt;/a> &lt;a href="http://blog.wss.cool/java%E6%89%A7%E8%A1%8Cshell%E5%91%BD%E4%BB%A4.html#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></content><category scheme="http://blog.wss.cool/categories/%E6%8A%98%E8%85%BE/" term="折腾" label="折腾"/></entry><entry><title type="text">Spring探索与扫盲</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/spring%E6%8E%A2%E7%B4%A2%E4%B8%8E%E6%89%AB%E7%9B%B2.html"/><id>http://blog.wss.cool/spring%E6%8E%A2%E7%B4%A2%E4%B8%8E%E6%89%AB%E7%9B%B2.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2020-01-16T23:55:23+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">刚刚接触Spring，感觉它是一个庞大的体系，内容很多。现在想要对它有一个总体的、感……</summary><content type="html">&lt;p>刚刚接触Spring，感觉它是一个庞大的体系，内容很多。现在想要对它有一个总体的、感性的认识和了解。首先从官网入手。&lt;/p>
&lt;p>spring.io官网下的第一个目录——projects，里面列举了Spring的项目。打开一个项目可以看到它的介绍，学习资料，文档，示例。&lt;/p>
&lt;p>第二个目录是guides，里面包含很多的、各个方面的入门引导，这些入门引导都是很简单的。下面还有两个模块——Topical Guides和Tutorials，这两部分稍微长一点，比第一部分要详细一些、内容多一些。&lt;/p>
&lt;p>第三个目录是一些付费的培训和认证。&lt;/p>
&lt;h2 id="projects">Projects&lt;/h2>
&lt;h3 id="spring-framework必学">Spring Framework，必学&lt;/h3>
&lt;p>这个应该是通常说到Spring时代表的Spring本人。&lt;/p>
&lt;blockquote>
&lt;p>Spring框架可在任何类型的部署平台上为基于Java的现代企业应用程序提供全面的编程和配置模型。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Spring的一个关键元素是在应用程序级别的基础架构支持：Spring专注于企业应用程序的“管道”，以便团队可以专注于应用程序级别的业务逻辑，而不必与特定的部署环境建立不必要的联系。&lt;/p>
&lt;/blockquote>
&lt;h3 id="spring-data要学">Spring Data，要学&lt;/h3>
&lt;p>&lt;a href="https://spring.io/projects/spring-data">网址&lt;/a>&lt;/p>
&lt;p>它包含了所有数据存储的子项目，JDBC、JPA、MongoDB、Redis、REST，他们都被这个项目封装了，可以用一致的API使用。&lt;/p>
&lt;blockquote>
&lt;p>Spring Data的任务是为数据访问提供一个熟悉且一致的，基于Spring的编程模型，同时仍保留基础数据存储的特​​殊特征。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>它使使用数据访问技术，关系和非关系数据库，map-reduce框架以及基于云的数据服务变得容易。这是一个总括项目，其中包含许多特定于给定数据库的子项目。这些项目是通过与这些令人兴奋的技术背后的许多公司和开发人员共同开发的。&lt;/p>
&lt;/blockquote>
&lt;h3 id="spring-security要学">Spring Security，要学&lt;/h3>
&lt;p>这个应该是用来做登录、权限管理的。下面是机翻介绍和特性。&lt;/p>
&lt;blockquote>
&lt;p>Spring Security是一个功能强大且高度可定制的身份验证和访问控制框架。它是用于保护基于Spring的应用程序的实际标准。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Spring Security是一个框架，致力于为Java应用程序提供身份验证和授权。与所有Spring项目一样，Spring Security的真正强大之处在于可以轻松扩展以满足自定义要求&lt;/p>
&lt;/blockquote>
&lt;h4 id="特性">特性&lt;/h4>
&lt;ul>
&lt;li>对身份验证和授权的全面且可扩展的支持&lt;/li>
&lt;li>防御会话固定，点击劫持，跨站点请求伪造等攻击&lt;/li>
&lt;li>Servlet API集成&lt;/li>
&lt;li>与Spring Web MVC的可选集成&lt;/li>
&lt;/ul>
&lt;h3 id="spring-rest-docs可能要学">Spring REST Docs，可能要学&lt;/h3>
&lt;p>貌似是用来生成RESTful服务的文档的。&lt;/p>
&lt;blockquote>
&lt;p>Spring REST Docs可帮助您记录RESTful服务。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>它结合了用Asciidoctor编写的手写文档和Spring MVC Test生成的自动生成的代码片段。这种方法使您摆脱了Swagger之类的工具所产生的文档限制。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>它可以帮助您生成准确，简洁且结构合理的文档。然后，该文档可让您的用户以最少的麻烦获得他们所需的信息。&lt;/p>
&lt;/blockquote>
&lt;h3 id="spring-cloud要学">Spring Cloud，要学&lt;/h3>
&lt;p>官方介绍的机翻如下，可以用来搭建微服务系统。&lt;/p>
&lt;blockquote>
&lt;p>Spring Cloud为开发人员提供了工具，以快速构建分布式系统中的某些常见模式（例如，配置管理，服务发现，断路器，智能路由，微代理，控制总线，一次性令牌，全局锁，领导选举，分布式会话，群集状态）。分布式系统的协调导致样板式样，并且使用Spring Cloud开发人员可以快速站起来实现这些样板的服务和应用程序。它们可以在任何分布式环境中正常工作，包括开发人员自己的笔记本电脑，裸机数据中心以及Cloud Foundry等托管平台。&lt;/p>
&lt;/blockquote>
&lt;h3 id="spring-amqp可能要学">Spring AMQP，可能要学&lt;/h3>
&lt;p>消息队列服务&lt;/p>
&lt;p>&lt;strong>AMQP维基百科&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>高级消息队列协议即Advanced Message Queuing Protocol（AMQP）。高级消息队列协议是一种二进制应用层协议，用于应对广泛的面向消息应用程序的支持。协议提供了消息流控制，保证的一个消息对象的传递过程，如至多一次、保证多次、仅有一次等，和基于SASL和TLS的身份验证和消息加密.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>是面向消息中间件提供的开放的应用层协议，其设计目标是对于消息的排序、路由（包括点对点和订阅-发布）、保持可靠性、保证安全性[1]。AMQP规范了消息传递方和接收方的行为，以使消息在不同的提供商之间实现互操作性，就像SMTP，HTTP，FTP等协议可以创建交互系统一样。与先前的中间件标准（如Java消息服务）不同的是，JMS在特定的API接口层面和实现行为上进行了统一，而高级消息队列协议则关注于各种消息如何以字节流的形式进行传递。因此，使用了符合协议实现的任意应用程序之间可以保持对消息的创建、传递。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Spring AMQP项目官方介绍的机翻&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>Spring AMQP项目将Spring的核心概念应用于基于AMQP的消息传递解决方案的开发。它提供了一个“模板”作为用于发送和接收消息的高级抽象。它还通过“侦听器容器”为消息驱动的POJO提供支持。这些库有助于AMQP资源的管理，同时促进对依赖项注入和声明性配置的使用。在所有这些情况下，您将看到与Spring Framework中的JMS支持相似的地方。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>该项目包括两个部分；spring-amqp是基础抽象，spring-rabbit是RabbitMQ实现。&lt;/p>
&lt;/blockquote>
&lt;h3 id="spring-batch可能要学">Spring Batch，可能要学&lt;/h3>
&lt;p>批处理框架，公司的什么业务需要批处理呢？日志？统计？比如搞一个服务分析nginx的access.log，看一下访问日志，哪些资源被访问的多？&lt;/p>
&lt;blockquote>
&lt;p>一个轻量级，全面的批处理框架，旨在支持开发对企业系统的日常运行至关重要的强大的批处理应用程序。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Spring Batch提供了可重用的功能，这些功能对于处理大量记录至关重要，包括日志记录/跟踪，事务管理，作业处理统计信息，作业重新启动，跳过和资源管理。它还提供了更高级的技术服务和功能，这些功能和功能将通过优化和分区技术来实现极高容量和高性能的批处理作业。无论简单还是复杂，大批量处理作业，都可以以高度可扩展的方式利用框架来处理大量信息。&lt;/p>
&lt;/blockquote>
&lt;h3 id="spring-web-flow可能要学">Spring Web Flow，可能要学&lt;/h3>
&lt;blockquote>
&lt;p>Spring Web Flow建立在Spring MVC之上，并允许实现Web应用程序的“流”。流程封装了一系列步骤，这些步骤指导用户完成某些业务任务。它跨越多个HTTP请求，具有状态，处理事务数据，可重用，并且本质上可以是动态的并且可以长期运行。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Spring Web Flow的最佳选择是具有导航功能的状态Web应用程序，例如，登机，申请贷款，购物车结帐，甚至向表单添加确认步骤。这些方案的共同点是以下一个或多个特征：&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>有一个明确的起点和终点。&lt;/li>
&lt;li>用户必须按特定顺序浏览一组屏幕。&lt;/li>
&lt;li>直到最后一步，更改才能最终确定。&lt;/li>
&lt;li>完成后，就不可能意外重复交易&lt;/li>
&lt;/ul>
&lt;h3 id="spring-for-apache-kafka可能要学">Spring for Apache Kafka，可能要学&lt;/h3>
&lt;p>好像也是消息队列，或者数据处理引擎。&lt;/p>
&lt;blockquote>
&lt;p>用于Apache Kafka的Spring（spring-kafka）项目将核心Spring概念应用于基于Kafka的消息传递解决方案的开发。它提供了一个“模板”作为发送消息的高级抽象。它还支持带有@KafkaListener注释和“侦听器容器”的消息驱动的POJO 。这些库促进了依赖注入和声明式的使用。在所有这些情况下，您将看到与Spring框架中的JMS支持和Spring AMQP中的RabbitMQ支持相似。&lt;/p>
&lt;/blockquote>
&lt;h3 id="spring-flo可能有用">Spring Flo，可能有用&lt;/h3>
&lt;p>貌似可以做类似流程图的前端页面。&lt;/p>
&lt;blockquote>
&lt;p>Spring Flo是一个JavaScript库，为管道和简单图形提供了一个基本的可嵌入HTML5可视生成器。该库用作Spring Cloud Data Flow中流构建器的基础。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Flo包括集成流设计器的所有基本元素，例如连接器，控制节点，调色板，状态转换和图形拓扑-重要的是，它具有文本外壳，DSL支持和设计用于创建和查看全面工作流程的图形画布。&lt;/p>
&lt;/blockquote>
&lt;h3 id="spring-shell可能有用">Spring Shell，可能有用&lt;/h3>
&lt;p>gitee上传了代码，触发webhook，接口需要执行一个shell命令来打包博客。在java程序中执行shell命令是用这个项目？&lt;/p>
&lt;blockquote>
&lt;p>Spring Shell项目提供了一个交互式Shell，使您可以使用基于Spring的编程模型来插入自己的自定义命令。&lt;/p>
&lt;/blockquote>
&lt;h3 id="spring-ldap暂时不学">Spring LDAP，暂时不学&lt;/h3>
&lt;p>不知道应用场景。&lt;/p>
&lt;p>&lt;strong>百度百科&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>轻型目录访问协议（英文：Lightweight Directory Access Protocol，缩写：LDAP，/ˈɛldæp/）是一个开放的，中立的，工业标准的应用协议，通过IP协议提供访问控制和维护分布式信息的目录信息。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>官方介绍机翻&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>Spring LDAP是一个用于简化Java中LDAP编程的库，其建立原理与Spring Jdbc相同。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>LdapTemplate类封装了传统LDAP编程中涉及的所有管道工作，例如创建，遍历NamingEnumerations，处理Exception和清理资源。这使程序员可以处理重要的事情-在何处查找数据（DN和筛选器）以及如何处理数据（与域对象进行映射，绑定，修改，取消绑定等），方法与JdbcTemplate缓解的方法相同除了实际的SQL之外的所有程序员，以及数据如何映射到域模型。&lt;/p>
&lt;/blockquote>
&lt;h3 id="spring-hateoas暂时不学">Spring HATEOAS，暂时不学&lt;/h3>
&lt;p>&lt;a href="https://www.ibm.com/developerworks/cn/java/j-lo-SpringHATEOAS/index.html">介绍文章&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>HATEOAS（Hypermedia as the engine of application state）是 REST 架构风格中最复杂的约束，也是构建成熟 REST 服务的核心。&lt;/p>
&lt;/blockquote>
&lt;p>RESTful架构的最高（最牛叉）层次就要使用HATEOAS。&lt;/p>
&lt;blockquote>
&lt;p>第四个层次（Level 3）的 Web 服务使用 HATEOAS。在资源的表达中包含了链接信息。客户端可以根据链接来发现可以执行的动作。&lt;/p>
&lt;/blockquote>
&lt;p>Spring HATEOAS的介绍&lt;/p>
&lt;blockquote>
&lt;p>当使用Spring特别是Spring MVC时，Spring HATEOAS提供了一些API来简化创建遵循HATEOAS原理的REST表示形式的API。它试图解决的核心问题是链接创建和表示组装。&lt;/p>
&lt;/blockquote>
&lt;p>HATEOAS跟“链接”很有关系，一般的RESTful返回结果都只是JSON数据，HATEOAS原理返回的数据还要包含“链接”，客户端可以使用链接做各种事。我还想象不到应用场景。&lt;/p>
&lt;hr>
&lt;p>（下面都是不知道干嘛的，暂时不学）&lt;/p>
&lt;h3 id="spring-web-services暂时不学">Spring Web Services，暂时不学&lt;/h3>
&lt;p>不知道是干嘛的，什么叫“文档驱动的Web服务(document-driven Web services)”，“SOAP服务”好像是“简单数据交换服务”&lt;/p>
&lt;blockquote>
&lt;p>Spring Web Services（Spring-WS）是Spring社区的产品，致力于创建文档驱动的Web服务。Spring Web Services旨在促进合同优先SOAP服务的开发，从而允许使用多种操作XML负载的方式之一来创建灵活的Web服务。该产品基于Spring本身，这意味着您可以将诸如依赖项注入之类的Spring概念用作Web服务的组成部分。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>人们使用Spring-WS的原因有很多，但是大多数人在遵循Web服务最佳实践时发现缺乏替代的SOAP堆栈后才被吸引使用。Spring-WS使最佳实践变得容易。这包括诸如WS-I基本概要文件，合同优先开发之类的实践，以及合同与实施之间的松散耦合。&lt;/p>
&lt;/blockquote>
&lt;h3 id="spring-integration暂时不学">Spring Integration，暂时不学&lt;/h3>
&lt;p>Integration是整合的意思，Spring Cloud Stream项目基于Spring Integration，其中Spring Integration用作消息驱动的微服务的引擎。貌似是用来整合各种服务的。&lt;/p>
&lt;p>这里还有一个用它实现分布式锁的&lt;a href="https://www.cnblogs.com/xuwenjin/p/10681187.html#commentform">例子&lt;/a>&lt;/p>
&lt;h3 id="spring-cloud-data-flow暂时不学">Spring Cloud Data Flow，暂时不学&lt;/h3>
&lt;p>官方介绍的机翻，现在还不理解。&lt;/p>
&lt;blockquote>
&lt;p>用于Cloud Foundry和Kubernetes的基于微服务的流式处理和批处理数据处理。&lt;/p>
&lt;p>Spring Cloud Data Flow提供了用于为流和批处理数据管道创建复杂拓扑的工具。数据管道包含使用Spring Cloud Stream或Spring Cloud Task微服务框架构建的Spring Boot应用程序。&lt;/p>
&lt;p>Spring Cloud Data Flow支持从ETL到导入/导出，事件流和预测分析的一系列数据处理用例。&lt;/p>
&lt;/blockquote></content><category scheme="http://blog.wss.cool/categories/spring/" term="spring" label="spring"/><category scheme="http://blog.wss.cool/tags/%E5%85%A5%E9%97%A8/" term="入门" label="入门"/><category scheme="http://blog.wss.cool/tags/java/" term="Java" label="Java"/></entry><entry><title type="text">使用Gitlab的Ci</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/gitlab-ci.html"/><id>http://blog.wss.cool/gitlab-ci.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-11-29T16:42:18+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">使用gitlab的ci/cd打包部署前端项目到oss对象存储</summary><content type="html">&lt;h1 id="需求">需求&lt;/h1>
&lt;p>一个前端项目需要分别发布到线上的测试环境和生产环境。在打包步骤，利用CI的环境变量功能，分别配置不同的API地址、项目地址等。完成打包后，将其上传到阿里oss中，完成发布。&lt;/p>
&lt;h1 id="使用gitlab-cicd的准备工作">使用Gitlab CI/CD的准备工作&lt;/h1>
&lt;p>需要准备三个东西：&lt;code>.gitlab-ci.yml&lt;/code> 文件定义CI的工作流程、Runner执行流程、阿里云OSS的SDK及上传程序用于部署。&lt;/p>
&lt;h2 id="gitlab-ciyml文件">.gitlab-ci.yml文件&lt;/h2>
&lt;p>项目根目录下需要有一个 &lt;code>.gitlab-ci.yml&lt;/code> 文件。&lt;/p>
&lt;p>&lt;strong>声明流程&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="k">stages&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- install&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- build&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>stages&lt;/code> 声明流程，这里就是包括 &lt;code>install&lt;/code> 和 &lt;code>build&lt;/code> 两个流程。这两个流程都做哪些工作呢？这里的声明相当于一个类型或者接口，需要在后面去实现它。&lt;/p>
&lt;p>&lt;strong>实现流程&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="k">job_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>install&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- npm&lt;span class="w"> &lt;/span>install&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这个 &lt;code>job&lt;/code> 就是实现 &lt;code>stages&lt;/code> 中声明的 &lt;code>install&lt;/code> 流程的，其中 &lt;code>job_name&lt;/code> 随便写就是个名字，&lt;code>stage&lt;/code> 字段是说这个 &lt;code>job&lt;/code> 是实现的哪个接口。一个接口也可以被实现多次，但是要有条件区分开。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="k">build_develop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>build&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">variables&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">REACT_APP_BASE_UR&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>https&lt;span class="p">:&lt;/span>//develop.edinnovaedu.com&lt;span class="p">:&lt;/span>&lt;span class="m">35040&lt;/span>/&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">REACT_APP_LEARNBOT_URL&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>https&lt;span class="p">:&lt;/span>//ng-api--dev.edinnovaedu.com/&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">only&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- develop&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- npm&lt;span class="w"> &lt;/span>run&lt;span class="w"> &lt;/span>build&lt;span class="p">:&lt;/span>dev&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- npm&lt;span class="w"> &lt;/span>run&lt;span class="w"> &lt;/span>deploy&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">build_production&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>build&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">variables&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">REACT_APP_BASE_URL&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>https&lt;span class="p">:&lt;/span>//api-gray.v.edinnovaedu.com/&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">REACT_APP_LEARNBOT_URL&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>https&lt;span class="p">:&lt;/span>//api-gray.v.edinnovaedu.com&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">only&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- master&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- npm&lt;span class="w"> &lt;/span>run&lt;span class="w"> &lt;/span>build&lt;span class="p">:&lt;/span>gray&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- npm&lt;span class="w"> &lt;/span>run&lt;span class="w"> &lt;/span>deploy&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上面的两个 &lt;code>job&lt;/code>，都是 &lt;code>build&lt;/code> 的实现，它们根据 &lt;code>only&lt;/code> 字段定义的条件（分支名）做不同的工作。&lt;/p>
&lt;p>&lt;strong>总结&lt;/strong>&lt;/p>
&lt;p>&lt;code>总结一下，stages&lt;/code> 声明流程，总的流程是第一步执行 &lt;code>install&lt;/code> ，第二步执行 &lt;code>build&lt;/code>
&lt;img src="http://blog.wss.cool/images/gitlab-ci-1.jpg" alt="install-build">&lt;/p>
&lt;p>&lt;code>job&lt;/code> 实现流程，多个 &lt;code>job&lt;/code> 可以实现同一步流程。第一步执行 &lt;code>install&lt;/code>；第二步执行 &lt;code>build&lt;/code>，但是会根据条件去执行对应的那个实现。
&lt;img src="http://blog.wss.cool/images/gitlab-ci-2.jpg" alt="install-mutl-build">&lt;/p>
&lt;p>&lt;strong>变量&lt;/strong>&lt;/p>
&lt;p>在 job build_develop 中看到有一个 variables 字段，它定义了两个环境变量， npm run build 中会用到他们。&lt;/p>
&lt;p>在 job 中声明的变量是局部变量，只在当前 job 中有效。还可以声明全局变量，写法一样，只是写的位置是与 stages 平级。&lt;/p>
&lt;p>&lt;strong>缓存&lt;/strong>&lt;/p>
&lt;p>在执行不同的流程时，会清除掉.gitignore中的文件，比如 node_modules 就会每次都被删除。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="k">cache&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;$CI_COMMIT_REF_SLUG&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">paths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- node_modules/&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上面这段是分支不同时才清除 node_modules ，同个分支的不同 job 间会保留/共享它。&lt;/p>
&lt;h2 id="runner">Runner&lt;/h2>
&lt;p>在&lt;code>.gitlab-ci.yml&lt;/code>文件中定义好流程后，需要配置一个Runner来执行这些操作。它是一个软件，需要单独安装，可以安装在运行gitlab的机器上，也可以安装在另一台机器上。&lt;/p>
&lt;p>&lt;strong>安装&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># For Debian/Ubuntu&lt;/span>
$ curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-ci-multi-runner/script.deb.sh &lt;span class="p">|&lt;/span> sudo bash
$ sudo apt-get install gitlab-ci-multi-runner
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>注册&lt;/strong>&lt;/p>
&lt;p>注册是为了把gitlab和runner连接。gitlab的项目的设置中会提供一个url和一个token&lt;/p>
&lt;p>&lt;img src="http://blog.wss.cool/images/gitlab-ci-runner.png" alt="runner">&lt;/p>
&lt;p>拿到了这两个东西，回到刚才安装了runner的电脑，开始注册runner。&lt;/p>
&lt;pre>&lt;code>sudo gitlab-ci-multi-runner register
&lt;/code>&lt;/pre>&lt;p>然后依次输入URL、Token、名字、不用输入、shell，就完成了。&lt;/p>
&lt;p>可以用 &lt;code>sudo gitlab-ci-multi-runner list&lt;/code> 命令来查看各个 Runner 的状态。&lt;/p>
&lt;p>有了&lt;code>.gitlab-ci.yml&lt;/code>和 &lt;code>runner&lt;/code> gitlab的&lt;code>CI/CD&lt;/code>就可以工作了，默认的情况，每次上传&lt;code>commit&lt;/code>都会触发&lt;code>CI/CD&lt;/code>执行。&lt;/p>
&lt;h2 id="部署">部署&lt;/h2>
&lt;p>我使用了阿里云的oss部署前端项目，所以只需要把打包后的文件上传到对应的目录即可。这里使用&lt;code>oss&lt;/code>的&lt;code>python sdk&lt;/code>来上传。&lt;/p>
&lt;p>&lt;code>python&lt;/code>程序放在了项目目录中，&lt;code>runner&lt;/code>服务器也安装好了python和sdk。所以只需要运行&lt;code>npm run deploy&lt;/code>执行&lt;code>python&lt;/code>程序即可。&lt;/p>
&lt;h1 id="遇到的问题">遇到的问题&lt;/h1>
&lt;p>由于gitlab项目配置错误，clone项目的url与实际url不同。在CI执行时，使用的是错误的URL导致无法clone项目而报错。&lt;/p>
&lt;p>解决方法是Runner的配置文件。文档链接是&lt;strong>参考3&lt;/strong>&lt;/p>
&lt;p>&lt;code>root&lt;/code>用户的配置文件在&lt;code>/etc/gitlab-runner/config.toml&lt;/code>，可以为一个&lt;code>runner&lt;/code>设置一个&lt;code>clone_url&lt;/code>即可解决问题。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="p">[[&lt;/span>&lt;span class="nx">runners&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;ruby-2.1-docker&amp;#34;&lt;/span>
&lt;span class="nx">url&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;https://CI/&amp;#34;&lt;/span>
&lt;span class="nx">token&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;TOKEN&amp;#34;&lt;/span>
&lt;span class="nx">limit&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="nx">executor&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;docker&amp;#34;&lt;/span>
&lt;span class="nx">builds_dir&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;span class="nx">shell&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;span class="nx">environment&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;ENV=value&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;LC_ALL=en_US.UTF-8&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">clone_url&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;http://gitlab.example.local&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;a href="https://scarletsky.github.io/2016/07/29/use-gitlab-ci-for-continuous-integration/#cache-job-cache">参考1&lt;/a>
&lt;a href="https://docs.gitlab.com/ce/ci/variables/README.html#masked-variables">参考2&lt;/a>
&lt;a href="https://docs.gitlab.com/runner/configuration/advanced-configuration.html#the-global-section">参考3&lt;/a>&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%B7%A5%E5%85%B7/" term="工具" label="工具"/></entry><entry><title type="text">未读</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E6%9C%AA%E8%AF%BB/"/><id>http://blog.wss.cool/posts/%E6%9C%AA%E8%AF%BB/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-11-18T10:59:42+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">213 康奈尔笔记法 2019年11月25日12:26:15 上半右边为要点，左边为线索，下部……</summary><content type="html">&lt;p>213&lt;/p>
&lt;h2 id="康奈尔笔记法">康奈尔笔记法&lt;/h2>
&lt;p>2019年11月25日12:26:15&lt;/p>
&lt;p>上半右边为要点，左边为线索，下部为总结。看的过程中记录要点，看完了提炼线索。总结整个笔记，用自己的语言，最好与已经会的东西发生练习。&lt;/p>
&lt;h2 id="postgresql与mysql对比">PostgreSQL与MySQL对比&lt;/h2>
&lt;p>&lt;a href="https://www.zhihu.com/question/20010554">知乎帖子&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://www.ruanyifeng.com/blog/2013/12/getting_started_with_postgresql.html">pg攻略&lt;/a>&lt;/p>
&lt;h2 id="python控制手机">python控制手机&lt;/h2>
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/57349184">https://zhuanlan.zhihu.com/p/57349184&lt;/a>&lt;/p>
&lt;h2 id="梯子攻略">梯子攻略&lt;/h2>
&lt;p>&lt;a href="https://github.com/haoel/haoel.github.io">https://github.com/haoel/haoel.github.io&lt;/a>&lt;/p>
&lt;h2 id="javascript开发者应懂的33个概念">JavaScript开发者应懂的33个概念&lt;/h2>
&lt;p>&lt;a href="https://github.com/stephentian/33-js-concepts">https://github.com/stephentian/33-js-concepts&lt;/a>&lt;/p>
&lt;h2 id="如何写文档">如何写文档&lt;/h2>
&lt;p>&lt;a href="https://www.divio.com/blog/documentation/">https://www.divio.com/blog/documentation/&lt;/a>&lt;/p>
&lt;h2 id="反向面试的问题">反向面试的问题&lt;/h2>
&lt;p>&lt;a href="https://github.com/yifeikong/reverse-interview-zh">https://github.com/yifeikong/reverse-interview-zh&lt;/a>&lt;/p>
&lt;h2 id="innodb架构">InnoDB架构&lt;/h2>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/zKHNaWY5AS0OMmag1mQTKQ">https://mp.weixin.qq.com/s/zKHNaWY5AS0OMmag1mQTKQ&lt;/a>&lt;/p>
&lt;h2 id="uuid">uuid&lt;/h2>
&lt;p>&lt;a href="https://zh.wikipedia.org/wiki/%E9%80%9A%E7%94%A8%E5%94%AF%E4%B8%80%E8%AF%86%E5%88%AB%E7%A0%81">https://zh.wikipedia.org/wiki/%E9%80%9A%E7%94%A8%E5%94%AF%E4%B8%80%E8%AF%86%E5%88%AB%E7%A0%81&lt;/a>&lt;br>
&lt;a href="https://github.com/kelektiv/node-uuid">https://github.com/kelektiv/node-uuid&lt;/a>&lt;br>
&lt;a href="https://www.zhihu.com/question/34876910">https://www.zhihu.com/question/34876910&lt;/a>&lt;/p>
&lt;h2 id="简书收藏可靠web验证">简书收藏：可靠web验证&lt;/h2>
&lt;p>aaa&lt;/p>
&lt;h2 id="tcp的简单介绍">TCP的简单介绍&lt;/h2>
&lt;p>&lt;a href="https://robertovitillo.com/what-every-developer-should-know-about-tcp/">https://robertovitillo.com/what-every-developer-should-know-about-tcp/&lt;/a>&lt;/p>
&lt;h2 id="利用-github-action-自动发布电子书">利用 Github Action 自动发布电子书&lt;/h2>
&lt;p>&lt;a href="https://devops.novalagung.com/en/cicd-serverless-ebook-gitbook-github-pages-actions-calibre.html">https://devops.novalagung.com/en/cicd-serverless-ebook-gitbook-github-pages-actions-calibre.html&lt;/a>&lt;/p>
&lt;h2 id="java实现的正则表达式引擎">Java实现的正则表达式引擎&lt;/h2>
&lt;p>&lt;a href="https://github.com/xindoo/regex">https://github.com/xindoo/regex&lt;/a>&lt;/p>
&lt;h2 id="使用-lot-改善睡眠">使用 loT 改善睡眠&lt;/h2>
&lt;p>&lt;a href="https://medium.com/memos-of-the-future/using-iot-to-optimize-your-sleep-c9747bd8633e">https://medium.com/memos-of-the-future/using-iot-to-optimize-your-sleep-c9747bd8633e&lt;/a>&lt;/p>
&lt;h2 id="利用webrtc进行端到端的文件传输">利用webRTC进行端到端的文件传输&lt;/h2>
&lt;p>&lt;a href="https://webwormhole.io/">https://webwormhole.io/&lt;/a>&lt;/p>
&lt;h2 id="中文github项目排名">中文Github项目排名&lt;/h2>
&lt;p>&lt;a href="https://github.com/kon9chunkit/GitHub-Chinese-Top-Charts">https://github.com/kon9chunkit/GitHub-Chinese-Top-Charts&lt;/a>&lt;/p>
&lt;h2 id="git的奇技淫巧">Git的奇技淫巧&lt;/h2>
&lt;p>&lt;a href="https://github.com/521xueweihan/git-tips">https://github.com/521xueweihan/git-tips&lt;/a>&lt;/p>
&lt;h2 id="中国程序员容易发音错误的单词">中国程序员容易发音错误的单词&lt;/h2>
&lt;p>&lt;a href="https://github.com/shimohq/chinese-programmer-wrong-pronunciation">https://github.com/shimohq/chinese-programmer-wrong-pronunciation&lt;/a>&lt;/p>
&lt;h2 id="程序员如何优雅的挣零花钱">程序员如何优雅的挣零花钱&lt;/h2>
&lt;p>&lt;a href="https://github.com/easychen/howto-make-more-money">https://github.com/easychen/howto-make-more-money&lt;/a>&lt;/p>
&lt;h2 id="面试基础知识">面试基础知识&lt;/h2>
&lt;p>算法、网络、系统设计等&lt;/p>
&lt;p>&lt;a href="https://github.com/CyC2018/CS-Notes">https://github.com/CyC2018/CS-Notes&lt;/a>&lt;/p>
&lt;h2 id="程序员技术">程序员技术&lt;/h2>
&lt;h3 id="程序员基础">程序员基础&lt;/h3>
&lt;ol>
&lt;li>算法、数据结构
基础的常用的要掌握：链表、散列表、树，排序、查找&lt;/li>
&lt;li>网络协议
基础的：http、websocket
高级的：TCP/IP&lt;/li>
&lt;/ol>
&lt;h3 id="前端程序员基础">前端程序员基础&lt;/h3>
&lt;ol>
&lt;li>程序运行的环境——浏览器——的工作原理
基础的：event loop 、重绘重排、跨域、事件（代理、冒泡）&lt;/li>
&lt;li>语言HTML、CSS
块级上下文、盒子模型、居中&lt;/li>
&lt;li>语言JavaScript
基础：数据类型、对象函数、创建对象（设计模式）、继承（原型）
中级：模块化、立即执行函数、闭包、变量提升、作用域、箭头函数
高级：深拷贝、截流&lt;/li>
&lt;li>语言ES6+
箭头函数、代理、object、array、promise&lt;/li>
&lt;li>语言TypeScript
枚举、泛型&lt;/li>
&lt;li>框架React
生命周期&lt;/li>
&lt;/ol>
&lt;h3 id="职业发展">职业发展&lt;/h3>
&lt;ol>
&lt;li>自己的有点长处、需要改进加强的地方&lt;/li>
&lt;li>职业规划
现在不管是正常的业务需求还是技术难题都能独立地搞定，属于【能做】。接下来是希望【做好】，就是提高效率和质量，比如自动化、规范、设计组件和模块。再往后就做一些传帮带的工作。&lt;/li>
&lt;/ol></content><category scheme="http://blog.wss.cool/categories/%E5%85%B6%E4%BB%96/" term="其他" label="其他"/></entry><entry><title type="text">Redux Toolkit</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/redux-toolkit.html"/><id>http://blog.wss.cool/redux-toolkit.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-10-28T10:54:37+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Redux Toolkit是 Redux 官方提供的工具箱🧰，它指定了一个 Redux 的使用规则，集成了 immer thunk 等常用的……</summary><content type="html">&lt;p>&lt;a href="https://redux-starter-kit.js.org/introduction/quick-start">Redux Toolkit&lt;/a>是 &lt;code>Redux&lt;/code> 官方提供的工具箱🧰，它指定了一个 &lt;code>Redux&lt;/code> 的使用规则，集成了 &lt;code>immer&lt;/code> &lt;code>thunk&lt;/code> 等常用的工具库，还有很好的 &lt;code>typescript&lt;/code> 支持。&lt;/p>
&lt;p>slice&lt;/p>
&lt;h2 id="安装">安装&lt;/h2>
&lt;pre>&lt;code>yarn add @reduxjs/toolkit
// 或者
npx create-react-app my-app --template redux
&lt;/code>&lt;/pre>&lt;h2 id="初始化store">初始化store&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">configureStore&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">createReducer&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;redux-starter-kit&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">createAction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;add&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">initialState&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">number&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">reducer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">createReducer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">initialState&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">add&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">action&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">number&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">action&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">number&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">store&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">configureStore&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="nx">reducer&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">store&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="调用">调用&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Provider&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-redux&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">store&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./store&amp;#39;&lt;/span>
&lt;span class="nx">ReactDOM&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">render&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">Provider&lt;/span> &lt;span class="nx">store&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">store&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nx">App&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/Provider&amp;gt;, document.getElementById(&amp;#39;root&amp;#39;)&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">useSelector&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">useDispatch&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-redux&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./store&amp;#39;&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">App&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">number&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">useSelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">state&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">number&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">dispatch&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">useDispatch&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">div&lt;/span> &lt;span class="nx">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;App&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">number&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/p&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">button&lt;/span> &lt;span class="nx">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">dispatch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">number&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">))}&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/button&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/div&amp;gt;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="创建store">创建store&lt;/h3>
&lt;p>configureStore用于初始化redux仓库，可以合并reducer，可以方便的创建中间件等。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">function&lt;/span> &lt;span class="nx">configureStore&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="c1">// A single reducer function that will be used as the root reducer,
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// or an object of slice reducers that will be passed to combineReducers()
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">reducer&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nb">Object&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ReducerFunction&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="nx">ReducerFunction&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// An array of Redux middlewares. If not supplied, uses getDefaultMiddleware()
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">middleware&lt;/span>&lt;span class="o">?:&lt;/span> &lt;span class="nx">MiddlewareFunction&lt;/span>&lt;span class="p">[],&lt;/span>
&lt;span class="c1">// Enable support for the Redux DevTools Extension. Defaults to true.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">devTools&lt;/span>&lt;span class="o">?:&lt;/span> &lt;span class="kr">boolean&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="nx">EnhancerOptions&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// Same as current createStore.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">preloadedState&lt;/span>&lt;span class="o">?:&lt;/span> &lt;span class="nx">State&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// An optional array of Redux store enhancers
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">enhancers&lt;/span>&lt;span class="o">?:&lt;/span> &lt;span class="nx">ReduxStoreEnhancer&lt;/span>&lt;span class="p">[],&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>例子&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">store&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">configureStore&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">reducer&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">config&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">configReducer&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">counter&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">counterReducer&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/react/" term="React" label="React"/></entry><entry><title type="text">JavaScript语言精华</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/javascript/javascript%E8%AF%AD%E8%A8%80%E7%B2%BE%E5%8D%8E/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/javascript/javascript%E8%AF%AD%E8%A8%80%E7%B2%BE%E5%8D%8E/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-10-23T06:56:30+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">我相信我精雕细琢出来的优雅子集大大地优于这门语言的整体，它更可靠、更易读、更易于维护。</summary><content type="html">&lt;h2 id="精华">精华&lt;/h2>
&lt;p>我相信我精雕细琢出来的优雅子集大大地优于这门语言的整体，它更可靠、更易读、更易于维护。&lt;/p>
&lt;p>浏览器API和DOM相当糟糕，连累了JavaScript。写一本DOM的精华的书是一项不可能完成的任务。&lt;/p>
&lt;p>JavaScript中优秀的想法包括函数、弱类型、动态对象和富有变现力的对象字面量表示法。糟粕的想法包括基于全局变量的编程模型。&lt;/p>
&lt;h2 id="对象">对象&lt;/h2>
&lt;p>JavaScript包含一种原型链的特性，允许对象继承另一个对象的属性。&lt;/p>
&lt;h3 id="原型">原型&lt;/h3>
&lt;p>每个对象都连接到一个原型对象，并可以从中继承属性。对象字面量创建的对象都连接到Object.prototype，它是JavaScript中过的标配对象。&lt;/p>
&lt;h2 id="函数">函数&lt;/h2>
&lt;h3 id="函数对象">函数对象&lt;/h3>
&lt;p>函数也是对象，对象字面量创建的对象连接到Object.prototype，函数对象连接到Function.prototype，而它又连接到Object.prototype&lt;/p>
&lt;h3 id="函数字面量">函数字面量&lt;/h3>
&lt;p>通过函数字面量创建的函数对象包含一个连到外部上下文的连接。这被称为闭包（closure）。&lt;/p>
&lt;h3 id="调用">调用&lt;/h3>
&lt;p>除了声明时定义的形式参数，每个函数还接收两个附加的参数：this和arguments。&lt;/p>
&lt;p>this的值取决于调用的模式。有4中调用模式：方法、函数、构造器、apply。&lt;/p>
&lt;h4 id="方法调用模式">方法调用模式&lt;/h4>
&lt;p>函数被作为一个对象的属性，就教方法。此时this为该对象。&lt;/p>
&lt;h4 id="函数调用模式">函数调用模式&lt;/h4>
&lt;p>函数没有作为对象的属性，他就被当作一个函数调用了。此模式this被绑定到全局变量。&lt;/p>
&lt;p>如果在一个方法内，又定义了一个函数，而这个函数中使用了this，那么这个this就是指向的全局变量。这是一个语言设计错误，正确的设计应该是指向方法中的this。有一个容易的解决方案：将方法中的一个变量赋值为this，函数中访问变量即可。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">myObject&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="kr">double&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">that&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">helper&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;span class="nx">that&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">that&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">that&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">helper&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>helper&lt;/code> 函数中如果使用 &lt;code>this&lt;/code> 这个 &lt;code>this&lt;/code> 就是指向全局变量。&lt;/p>
&lt;h4 id="构造器调用模式">构造器调用模式&lt;/h4>
&lt;p>JavaScript是一门基于&lt;strong>原型&lt;/strong>继承的语言，这意味这一个对象可以从另一个对象继承属性。该语言是无类型的。（es6呢？）&lt;/p>
&lt;p>用 &lt;code>new&lt;/code> 调用一个函数，会创建一个连接到该函数的 &lt;code>prototype&lt;/code> 成员的新对象，同时将 &lt;code>this&lt;/code> 绑定到那个新对象上。这就是构造器调用。&lt;/p>
&lt;h4 id="apply调用模式">Apply调用模式&lt;/h4>
&lt;p>因为JavaScript是一门函数式的面向对象语言，所以函数可以拥有方法。&lt;/p>
&lt;p>apply 方法接受2个参数，绑定的 this ，和参数数组。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">var&lt;/span> &lt;span class="nx">array&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">sum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">add&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">apply&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">array&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="闭包">闭包&lt;/h3>
&lt;p>一个函数可以访问它被创建时的上下文环境就叫闭包。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">var&lt;/span> &lt;span class="nx">myObject&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">increment&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">inc&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="nx">value&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="k">typeof&lt;/span> &lt;span class="nx">inc&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;number&amp;#39;&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nx">inc&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">getValue&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">})()&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>incerment&lt;/code> 和 &lt;code>getValue&lt;/code> 两个函数被创建的上下文中有一个 &lt;code>value&lt;/code> 变量。这两个函数可以访问 &lt;code>value&lt;/code> ，这就叫 &lt;code>闭包&lt;/code> 。&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/></entry><entry><title type="text">ARTS打卡</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/arts%E6%89%93%E5%8D%A1.html"/><id>http://blog.wss.cool/arts%E6%89%93%E5%8D%A1.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-10-22T16:35:08+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Algorithm 每周至少做一个LeetCode的算法题。为了编程训练和学习，只看书不训练是没用的。……</summary><content type="html">&lt;h1 id="algorithm">Algorithm&lt;/h1>
&lt;p>每周至少做一个LeetCode的算法题。为了编程训练和学习，只看书不训练是没用的。&lt;/p>
&lt;h1 id="review">Review&lt;/h1>
&lt;p>阅读并点评至少一篇英文技术文章。为了学习英文。&lt;/p>
&lt;h1 id="tip">Tip&lt;/h1>
&lt;p>学习至少一个技术技巧，为了总结和归纳在日常工作中遇到的知识点。&lt;/p>
&lt;h1 id="share">Share&lt;/h1>
&lt;p>分享一篇有观点和思考的技术文章，为了建立影响力，输出价值观。&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E6%8A%98%E8%85%BE/" term="折腾" label="折腾"/></entry><entry><title type="text">React Spring</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/react/react-spring/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/react/react-spring/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-10-22T14:19:59+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">react-spring 是一个基于弹簧物理学的动画库。 最基本的用法： 1 2 3 4 5 6 import {useSpring, animated} from &amp;#39;react-spring&amp;#39; function App() { const props = useSpring({opacity: 1,……</summary><content type="html">&lt;p>&lt;a href="https://www.react-spring.io">react-spring&lt;/a> 是一个基于弹簧物理学的动画库。&lt;/p>
&lt;p>最基本的用法：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">useSpring&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">animated&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-spring&amp;#39;&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">App&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">props&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">useSpring&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="nx">opacity&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">from&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">opacity&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">}})&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">animated&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">div&lt;/span> &lt;span class="nx">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="nx">I&lt;/span> &lt;span class="nx">will&lt;/span> &lt;span class="nx">fade&lt;/span> &lt;span class="k">in&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/animated.div&amp;gt;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其中的useSpring可以创造一个js动画，这种动画默认不需要设置持续时间，他通过一些弹簧参数来控制动画的表现。可以通过config设置这些参数，像这样：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">useSpring&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">config&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">duration&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">250&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="p">...&lt;/span> &lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>参数有哪些可以看Common api这节文档。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">useSpring&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="nx">opacity&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">from&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">opacity&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">}})&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>from为动画开始的值，1为动画最后的值。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">useSpring&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="nx">opacity&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">to&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">opacity&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">}})&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>1为动画开始的值，to为动画最后的值。&lt;/p>
&lt;p>如果useSpring中变化的值可以直接使用，比如颜色、数字，则可以直接使用&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">animated&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">div&lt;/span> &lt;span class="nx">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="nx">I&lt;/span> &lt;span class="nx">will&lt;/span> &lt;span class="nx">fade&lt;/span> &lt;span class="k">in&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/animated.div&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>或这样&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">animated&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">span&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">number&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/animated.span&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果useSpring中变化的值需要组合成字符串，比如transform，则需要使用插值函数(interpolate)来实现&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">animated&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">div&lt;/span>
&lt;span class="nx">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{{&lt;/span>
&lt;span class="nx">background&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">interpolate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">o&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="sb">`rgba(210, 57, 77, &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">)`&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nx">transform&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">xyz&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">interpolate&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">z&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="sb">`translate3d(&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">px, &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">y&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">px, &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">px)`&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nx">border&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">interpolate&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">color&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="sb">`&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">o&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">px solid &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nx">padding&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">interpolate&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="nx">range&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nx">output&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">]}).&lt;/span>&lt;span class="nx">interpolate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">o&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="sb">`&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">%`&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nx">borderColor&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">interpolate&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="nx">range&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nx">output&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;red&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;#ffaabb&amp;#39;&lt;/span>&lt;span class="p">]}),&lt;/span>
&lt;span class="nx">opacity&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">interpolate&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="mf">0.1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="p">}}&lt;/span>
&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nx">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">interpolate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">n&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toFixed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="cm">/* innerText interpolation ... */&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/animated.div&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>useSpring中传值可以是任意的字段&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">useSpring&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="nx">everything&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">to&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">everything&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">}})&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以在代码中更新spring&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">props&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">set&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">stop&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">useSpring&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">({&lt;/span>&lt;span class="nx">opacity&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">}))&lt;/span>
&lt;span class="c1">// Update spring with new props
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">set&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="nx">opacity&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">toggle&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="c1">// Stop animation
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">stop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以设置成多段动画&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">set&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">to&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">next&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">cancel&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">await&lt;/span> &lt;span class="nx">next&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="nx">opacity&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;#ffaaee&amp;#39;&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="nx">await&lt;/span> &lt;span class="nx">next&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="nx">opacity&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;rgb(14,26,19)&amp;#39;&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>动画结束时触发事件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">set&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="c1">// 其他动画参数...
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">onRest&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 动画结束事件
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onWrong&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/react/" term="React" label="React"/><category scheme="http://blog.wss.cool/categories/react%E5%BA%93/" term="React库" label="React库"/></entry><entry><title type="text">[机翻]如何解决问题</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98.html"/><id>http://blog.wss.cool/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-10-21T16:54:43+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">此为机翻文章，原文在此。 解决问题方法 当遇到新问题时，你该怎么做？ 1.理解、明白 确切的……</summary><content type="html">&lt;p>此为机翻文章，&lt;a href="https://medium.com/free-code-camp/how-to-think-like-a-programmer-lessons-in-problem-solving-d1d8bf1de7d2">原文在此&lt;/a>。&lt;/p>
&lt;h1 id="解决问题方法">解决问题方法&lt;/h1>
&lt;p>当遇到新问题时，你该怎么做？&lt;/p>
&lt;h1 id="1理解明白">1.理解、明白&lt;/h1>
&lt;p>确切的知道要问什么。大多数难题之所以难是因为你不理解它。&lt;/p>
&lt;p>怎么知道你理解一个问题呢？当你可以简单的术语解释它的时候。&lt;/p>
&lt;p>你还记得吗，当你被一个问题卡住，你开始解释它，你会立即发现以前从未见过的逻辑漏洞？&lt;/p>
&lt;p>多数程序员知道这种感觉。&lt;/p>
&lt;blockquote>
&lt;p>“If you can’t explain something in simple terms, you don’t understand it.” — Richard Feynman&lt;/p>
&lt;/blockquote>
&lt;h1 id="2计划">2.计划&lt;/h1>
&lt;p>不要没有计划就直接解决问题（以某种方式希望您能摸索到底）。规划您的解决方案！&lt;/p>
&lt;p>如果你不能写下具体的步骤，将无济于事。在编程中，这意味着不要马上开始写代码。要给你的大脑时间，处理问题、分析信息。&lt;/p>
&lt;p>为这个为题给出一个计划：&lt;/p>
&lt;p>“当输入X时，有哪些必要的步骤才能输出Y？”&lt;/p>
&lt;p>旁注：程序员有一个很棒的工具来帮助他们。&lt;/p>
&lt;h1 id="3划分">3.划分&lt;/h1>
&lt;p>请注意。这是最重要的一步。&lt;/p>
&lt;p>不要试图解决一个大问题。你会哭。而是将其分解为多个子问题。这些子问题更容易解决。&lt;/p>
&lt;p>然后，一个一个地解决每个子问题。从最简单的开始。最简单意味着您知道答案（或更接近答案）。&lt;/p>
&lt;p>此后，最简单的方法意味着要解决的子问题不依赖于要解决的其他问题。&lt;/p>
&lt;p>解决了每个子问题后，将点连接起来。连接所有“子解决方案”将为您解决原始问题。恭喜你！&lt;/p>
&lt;p>该技术是解决问题的基石。记住这一点（如果需要，请再次阅读此步骤）。&lt;/p>
&lt;h1 id="4卡住了吗">4.卡住了吗？&lt;/h1>
&lt;p>到现在为止，您可能坐在那里想：“嗨，理查德……太酷了，但是，如果我被卡住甚至不能解决子问题怎么办？”&lt;/p>
&lt;p>首先，深呼吸。第二，这很公平。&lt;/p>
&lt;p>朋友，请不要担心。这发生在每个人身上！不同之处在于，最好的程序员/问题解决者对bugs/errors的好奇大于对错误的恼怒。&lt;/p>
&lt;p>实际上，面对混乱时，可以尝试以下三件事：&lt;/p>
&lt;ol>
&lt;li>调试：逐步解决您的解决方案，尝试找出问题所在。程序员将其称为调试（实际上，这是调试器的全部工作）。&lt;/li>
&lt;li>重新评估： 退后一步。从另一个角度看问题。有什么可以抽象为更通用的方法的吗？&lt;/li>
&lt;li>研究： 啊，Google不错。您没看错。无论您遇到什么问题，都可能有人解决了。找到那个人/解决方案。实际上，即使您解决了问题，也要这样做！（您可以从其他人的解决方案中学到很多东西）。&lt;/li>
&lt;/ol>
&lt;p>警告：不要为大问题寻找解决方案。只寻找子问题的解决方案。为什么？因为除非您奋斗（一点点），否则您将不会学到任何东西。如果您什么都不学，那您就浪费了时间。&lt;/p>
&lt;h1 id="实践">实践&lt;/h1>
&lt;p>仅仅一周之后，别指望自己变得很棒。如果您想成为一个好的问题解决者，请解决很多问题！&lt;/p>
&lt;p>实践。实践。实践。认识到“使用“在此处插入概念”可以轻松解决此问题”只是时间问题。&lt;/p>
&lt;p>怎么练习？wazoo有多种选择！&lt;/p>
&lt;p>国际象棋难题，数学问题，数独，围棋，专卖，视频游戏，加密小猫，等等……等等……等等……。&lt;/p>
&lt;p>实际上，在成功人士中，常见的习惯是练习“解决微观问题”的习惯。例如，彼得·泰尔（Peter Thiel）下棋，伊隆·马斯克（Elon Musk）玩电子游戏。&lt;/p>
&lt;p>例如，我喜欢编码方面的挑战。每天，我都会尝试解决至少一个难题（通常在Coderbyte上）。&lt;/p>
&lt;p>就像我说的，所有问题都有相似的模式。&lt;/p>
&lt;h1 id="结论">结论&lt;/h1>
&lt;p>那是所有人！
现在，您更好地了解了“像程序员一样思考”的含义。
您还知道解决问题是一种不可思议的技能（超能力）。
如果这还不够，请注意您还知道如何去练习解决问题的技能！
ew……挺酷的吧？
最后，祝您遇到许多问题。
您没看错。至少现在您知道如何解决它们了！（此外，您将了解到每种解决方案都可以改进）。&lt;/p>
&lt;blockquote>
&lt;p>“只要您认为自己已经成功克服了一个障碍，就会出现另一个障碍。但这就是让生活变得有趣的原因。
生活是突破这些障碍的过程，这是我们必须突破的一系列防御性路线。
每次，您都会学到一些东西。
每次，您都会发展力量，智慧和远见。
每次，更多的竞争都会消失。直到剩下的只有你：你最好的版本。” —瑞安·霍里&lt;/p>
&lt;/blockquote>
&lt;p>现在，去解决一些问题！&lt;/p>
&lt;p>祝你好运🙂&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%BF%83%E5%BE%97%E4%B8%8E%E7%BB%8F%E9%AA%8C/" term="心得与经验" label="心得与经验"/><category scheme="http://blog.wss.cool/categories/%E6%9C%BA%E7%BF%BB/" term="机翻" label="机翻"/></entry><entry><title type="text">Hugo</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%B7%A5%E5%85%B7/hugo/"/><id>http://blog.wss.cool/posts/%E5%B7%A5%E5%85%B7/hugo/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-10-10T14:15:23+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">改造hugo主题，修改hugo主题，显示、控制hugo分类和hugo摘要</summary><content type="html">&lt;p>这个博客是使用hugo搭建的，选择来一个大体喜欢的主题。但是有一些细节还是不够满意，所以如何改造hugo主题，加上自己想要的内容，就成了一个值得研究的问题。&lt;/p>
&lt;h2 id="sections">Sections&lt;/h2>
&lt;p>content目录下的各个一级子目录就是一个section，它们是first-level的section，可以为它们定义layout组织内容，并通过url来访问（默认就是目录）。&lt;/p>
&lt;p>一级子目录下也可有任意深度的子目录，只要子目录中定义_index.md就可以作为一个section。&lt;/p>
&lt;p>section除了可以通过以目录层级为url访问，还可以获得到属于它的子文章列表。&lt;/p>
&lt;h2 id="分类法taxonomies">分类法（Taxonomies）&lt;/h2>
&lt;p>我想解决的第一个问题就是文章的分类，因为一个单纯的列表看上去可能有点散乱。观察创建文章的可选参数，以及其他博客。可以确定hugo是支持分类的。在官网文档中的Content Management下有Taxonomies，阅读内容后可以确定，这就是我想找的东西。&lt;/p>
&lt;p>在hugo中，用“Taxonomies”这个术语表示“文章的分类”。相关的有三个概念：&lt;/p>
&lt;ul>
&lt;li>Taxonomy -&amp;gt; 一个分类&lt;/li>
&lt;li>Term -&amp;gt; 一个分类的项目&lt;/li>
&lt;li>Value -&amp;gt; 一个项目的值&lt;/li>
&lt;/ul>
&lt;p>比如：&lt;/p>
&lt;pre>&lt;code>Year &amp;lt;- Taxonomy
2018 &amp;lt;- Term
前端入门 &amp;lt;- Value
Vue入门 &amp;lt;- Value
React入门 &amp;lt;- Value
2019 &amp;lt;- Term
前端进阶 &amp;lt;- Value
vue进阶 &amp;lt;- Value
react进阶 &amp;lt;- Value
categories &amp;lt;- Taxonomy
css &amp;lt;- Term
flex布局 &amp;lt;- Value
css module &amp;lt;- Value
background渐变色 &amp;lt;- Value
框架 &amp;lt;- Term
Vue入门 &amp;lt;- Value
React入门 &amp;lt;- Value
vue进阶 &amp;lt;- Value
react进阶 &amp;lt;- Value
&lt;/code>&lt;/pre>&lt;p>这里的“value”对应的都是文章的题目，“term”对应一个分类中具体有哪些项，“taxonomy”则是我们预先定义好的分类的名字。&lt;/p>
&lt;p>这些需要通过站点配置和文章首部信息才可以实现。&lt;/p>
&lt;p>在“站点配置”中设置有哪些Taxonomy，在“文章首部”标记该文章是哪个Taxonomy中的哪种Term&lt;/p>
&lt;h3 id="站点配置">站点配置&lt;/h3>
&lt;p>站点配置文件一般位于博客根目录中，叫做“config.toml”，在其中加上下面这段代码&lt;/p>
&lt;pre>&lt;code>[taxonomies]
category = &amp;quot;categories&amp;quot;
year = &amp;quot;year&amp;quot;
&lt;/code>&lt;/pre>&lt;h3 id="文章首部">文章首部&lt;/h3>
&lt;p>创建每个文章时，都会有一些首部信息配置，现在这篇文章的首部信息如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">---&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">title&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Hugo&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/Hugo&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">toc&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">date&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="ld">2019-10-10T14:15:23&lt;/span>&lt;span class="m">+08&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="m">00&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">author&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>王书硕&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>了解hugo，将它改造成你想要的样子。&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">categories&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- 工具&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">year&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="m">2019&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>---&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其中最下面的两项——“categories”和“year”——就是上面提到的“Taxonomy”，“工具”和“2019”则是“Term”，而这篇文章就是“value”了。&lt;/p>
&lt;p>准备好了这些配置以后，&lt;/p>
&lt;p>……两种方式展示分类，一种是在一个特定的页面，一种是在其他地方。两种方式引用题目的方法不同。&lt;/p>
&lt;h3 id="展示分类">展示分类&lt;/h3>
&lt;p>第一种展示方式是在&lt;code>layouts/_default/terms.html&lt;/code>中，如下面的代码即可展示一种terms。通过访问地址&lt;code>localhost:1313/categories/&lt;/code>或&lt;code>localhost:1313/year/&lt;/code>即可查看到该页面。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">{{ define &amp;#34;main&amp;#34; }}
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">main&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>{{ .Title }}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
{{ range .Data.Terms.ByCount }}
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{{ .Page.RelPermalink }}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>{{ printf &amp;#34;%s&amp;#34; .Page.Title }}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>{{ printf &amp;#34;(%d)&amp;#34; .Count }}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
{{ end }}
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">main&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
{{ end }}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>第二种展示方式是任意一个页面，比如主页&lt;code>layouts/index.html&lt;/code>模板中，通过&lt;code>Site&lt;/code>变量引用分类数据。同样的其中的&lt;code>categories&lt;/code>也可以替换成定义好的其他terms。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
{{ range .Site.Taxonomies.categories }}
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{{ .Page.Permalink }}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>{{ .Page.Title }}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> {{ .Count }}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
{{ end }}
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>排序&lt;/p>
&lt;p>按字母排序&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
{{ range .Data.Terms.Alphabetical }}
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{{ .Page.Permalink }}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>{{ .Page.Title }}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> {{ .Count }}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
{{ end }}
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>按数量排序&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
{{ range .Data.Terms.ByCount }}
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{{ .Page.Permalink }}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>{{ .Page.Title }}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> {{ .Count }}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
{{ end }}
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>……有了这些还不够还需要term页面&lt;/p>
&lt;p>……综上……实现了分类……&lt;/p>
&lt;h2 id="seo">SEO&lt;/h2>
&lt;p>robots.txt&lt;/p>
&lt;p>setmap.xml&lt;/p>
&lt;p>google search console&lt;/p>
&lt;p>head模版&lt;/p>
&lt;h2 id="摘要summary">摘要（summary）&lt;/h2>
&lt;p>摘要最重要的一个用处是生成head中的description标签（这个是主题的head.html部分定义的，可以修改成其他内容），搜索引擎会将其中的内容展示在搜索结果中。（搜索结果中也可能不显示摘要，而现实搜索引擎自己生成的内容）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;description&amp;#34;&lt;/span> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;测试一哈&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>另一个用处是用来在文章列表中展示，比如在网站首页展示10篇最近的文章，并显示其摘要。&lt;/p>
&lt;p>两种方式可以定义一篇文章的摘要：在首部定义summary变量、在文章中使用摘要分隔符&lt;code>&amp;lt;!--more--&amp;gt;&lt;/code>。后者权重更高。&lt;/p>
&lt;p>当文章开头的几行可以准确的概括文章包含内容时，摘要分隔符&lt;code>&amp;lt;!--more--&amp;gt;&lt;/code>比较适用。不然的话，就自己编辑一段摘要放在首部的summary变量中。&lt;/p>
&lt;p>另外可以在网站配置中使用&lt;code>summaryLength&lt;/code>控制摘要的字符长度，但是对中文貌似不起作用。&lt;/p>
&lt;h2 id="函数">函数&lt;/h2>
&lt;p>&lt;a href="https://gohugo.io/functions/">文档&lt;/a>&lt;/p>
&lt;p>遍历集合用&lt;code>range&lt;/code>&lt;/p>
&lt;pre>&lt;code>&amp;lt;ul&amp;gt;
{{ range .Site.Taxonomies.categories }}
&amp;lt;li style=&amp;quot;text-align:left;&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;{{ .Page.Permalink }}&amp;quot;&amp;gt;{{ .Page.Title }}&amp;lt;/a&amp;gt; {{ .Count }}&amp;lt;/li&amp;gt;
{{ end }}
&amp;lt;/ul&amp;gt;
&lt;/code>&lt;/pre>&lt;p>对集合进行排序用&lt;code>sort&lt;/code>，相较上面的代码，其中&lt;code>count&lt;/code>是用哪个字段进行排序，&lt;code>desc&lt;/code>表示降序&lt;/p>
&lt;pre>&lt;code>&amp;lt;ul&amp;gt;
{{ range sort .Site.Taxonomies.categories &amp;quot;Count&amp;quot; &amp;quot;desc&amp;quot; }}
&amp;lt;li style=&amp;quot;text-align:left;&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;{{ .Page.Permalink }}&amp;quot;&amp;gt;{{ .Page.Title }}&amp;lt;/a&amp;gt; {{ .Count }}&amp;lt;/li&amp;gt;
{{ end }}
&amp;lt;/ul&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="多语言模式">多语言模式&lt;/h2>
&lt;p>hugo可以管理多种语言，但是要自己翻译内容&lt;/p>
&lt;p>&lt;a href="https://gohugo.io/content-management/multilingual/">配置多种语言&lt;/a>
&lt;a href="https://regisphilibert.com/blog/2018/08/hugo-multilingual-part-1-managing-content-translation/">翻译内容&lt;/a>&lt;/p></content><category scheme="http://blog.wss.cool/categories/hugo/" term="hugo" label="hugo"/></entry><entry><title type="text">职业发展</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%BF%83%E5%BE%97/%E8%81%8C%E4%B8%9A%E5%8F%91%E5%B1%95/"/><id>http://blog.wss.cool/posts/%E5%BF%83%E5%BE%97/%E8%81%8C%E4%B8%9A%E5%8F%91%E5%B1%95/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-10-07T18:05:05+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">七个对我最重要的职业建议（阮一峰翻译） ruanyifeng 一、不要别人点什么就做什么 “不要做一个别人点……</summary><content type="html">&lt;h1 id="七个对我最重要的职业建议阮一峰翻译">七个对我最重要的职业建议（阮一峰翻译）&lt;/h1>
&lt;p>&lt;a href="http://www.ruanyifeng.com/blog/2015/09/career-advice.html">ruanyifeng&lt;/a>&lt;/p>
&lt;h2 id="一不要别人点什么就做什么">一、不要别人点什么就做什么&lt;/h2>
&lt;p>“不要做一个别人点了什么才就烧什么的厨师，也不要这样的地方工作，你要去一个地方，那里的人能肯定你对产品的想法，相信你的能力，放手让你去做。”&lt;/p>
&lt;p>单单实现一个产品是不够的，你还必须参与决定怎么实现。好的工程师并不仅仅服从命令，而且还会给出反馈，帮助产品的拥有者改进它。&lt;/p>
&lt;p>🤔从技术角度改进产品？或者技术角度的feature吗？比如实现更好的交互，新的技术可以做更好的事情？&lt;/p>
&lt;p>🤔不能只是让别人给你一个技术方案你只负责实现它，而是要自己能设计一个方案，甚至可以根据自己的技术给出一个让不同feature变成高级的feature。比如更节省成本，时间少人力少、效率高机器成本低、交互好、更美观、用户体验更好等等。总之就是，因为你的一些想法，原来那个别人提出来的东西别的更好了。&lt;/p>
&lt;p>🤔对自己有什么好处呢？输出一些想法，肯定是要付出精力的，那么这些精力能不能有所回报呢？首先，它能体现分析、解决问题的能力，体现积极、负责，其次，进一步端粒自己分析、解决问题的能力，锻炼表达能力，这些经验多了起来，就相对其他人来说是一种优势，能创造出一些价值，可以写在简历中，对某某功能提出哪些想法，使成本降低了多少，收益增加了多少。&lt;/p>
&lt;h2 id="二推销自己">二、推销自己&lt;/h2>
&lt;p>“为了让其他人相信你，你必须首先让别人知道你做了什么。你需要推销自己，引起别人的注意。”&lt;/p>
&lt;p>公司的其他人需要明白你的价值，最好的办法就是告诉别人你做了什么。&lt;/p>
&lt;p>🤔写邮件告诉别人真的好吗？可能还是写博客好一点吧，但是博客很难找到读者，可以通过掘金、csdn之类的引流一下。&lt;/p>
&lt;h2 id="三学会带领团队">三、学会带领团队&lt;/h2>
&lt;p>&amp;quot;当你的技术能力过关以后，就要考验你与他人相处的能力了。&amp;quot;&lt;/p>
&lt;p>如何带领一个团队，有效地与其他人协同工作，取到更大的成果。&lt;/p>
&lt;p>🤔先看一下左耳朵的文章学习一下沟通技术。&lt;/p>
&lt;p>🤔目前我只需要考虑一二三这几个问题。&lt;/p>
&lt;h2 id="四生活才是最重要的">四、生活才是最重要的&lt;/h2>
&lt;h2 id="五自己找到道路">五、自己找到道路&lt;/h2>
&lt;p>&amp;quot;以前都是我们告诉你做什么，从现在开始，你必须自己回答这个问题了，我期待你来告诉我，什么事情需要做。&amp;quot;&lt;/p>
&lt;p>很多工程师都没有完成这个转变，如果能够做到，可能就说明你成熟了，学会了取舍。你不可能把时间花在所有事情上面，必须找到一个重点。&lt;/p>
&lt;h2 id="六把自己当成主人">六、把自己当成主人&lt;/h2>
&lt;p>&amp;quot;不要再去开这样的会了。你参加一个会，那是因为你参与了某件事。如果不确定自己为什么要在场，就停下来问。如果这件事不需要你，就离开。不要从头到尾都静静地参加一个会，要把自己当成负责人，大家会相信你的。&amp;quot;&lt;/p>
&lt;p>从那时起，我从没有一声不发地参加会议。我确保只参加那些需要我参加的会议。&lt;/p>
&lt;h2 id="七找到水平更高的人">七、找到水平更高的人&lt;/h2>
&lt;p>&amp;quot;找到那些比你水平更高、更聪明的人，尽量和他们在一起，吃饭或者喝咖啡，向他们讨教，了解他们拥有的知识。你的职业，甚至你的生活，都会因此变得更好。&amp;quot;&lt;/p>
&lt;h1 id="面试时如何向公司提问">面试时，如何向公司提问？&lt;/h1>
&lt;p>&lt;a href="http://www.ruanyifeng.com/blog/2012/08/questions_you_need_to_ask_in_an_interview.html">ruanyifeng&lt;/a>&lt;/p>
&lt;p>有一些注意点，你需要知道：&lt;/p>
&lt;ol>
&lt;li>面试之前，一定要做准备，多了解公司的情况。&lt;/li>
&lt;li>你提出的问题，应该围绕&amp;quot;这份工作是否合适我&amp;quot;这个中心点，其他与应聘关系不大的问题，不宜多问。&lt;/li>
&lt;li>提问的时候，要自然放松，不要害羞，就把它当作普通的聊天。你要表现出对公司的真诚兴趣。&lt;/li>
&lt;li>提问要直接了当，不要绕圈子。提出问题之后，你要保持安静，让面试官多说话。&lt;/li>
&lt;li>面试官回答的时候，你可以做笔记，或者事先询问能不能做。笔记必须简短，你的大部分时间，要用来全神贯注倾听面试官的回答，并与其有眼神的交流。&lt;/li>
&lt;li>面试结束后一周内，最好打一个电话或发一封邮件，了解公司对你的反馈意见。即使面试失败，你不妨也问一下原因，这会有助于你以后的面试。&lt;/li>
&lt;/ol>
&lt;p>6个问题&lt;/p>
&lt;ol>
&lt;li>为什么招人，之前的人离职了还是公司增长扩张。&lt;/li>
&lt;li>为什么大家想留在你们公司。公司的文化、价值观、环境对员工的影响。&lt;/li>
&lt;li>如果被录用了，在上班的头两三个月，公司希望我做到的三件事是什么？&lt;/li>
&lt;li>一个人像成功地做好这份工作，需要哪些东西？&lt;/li>
&lt;li>我刚才说过的话里，是否有哪些内容让你华裔我不适合这份工作。&lt;/li>
&lt;li>你们什么时候会做最后的决定？&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>围绕“这份工作是否合适我”提问&lt;/strong>&lt;/p>
&lt;p>下面是一些你可以问的典型问题。&lt;/p>
&lt;p>&lt;strong>问题一：你们为什么要招聘这个职位？&lt;/strong>&lt;/p>
&lt;p>这个问题会使得面试官开始谈论当前的项目，或者谈论前一位离职人员。无论哪种情况，都会让你了解，一些与你最密切相关的公司情况。&lt;/p>
&lt;p>&lt;strong>问题二：你们的新员工多吗？&lt;/strong>&lt;/p>
&lt;p>这个问题起一个过渡作用，使得谈话导向公司内部的情况。但是，它本身也能说明一些问题。如果公司成立已经超过四年，又没有新项目，但是新员工却很多，这往往说明公司文化不是很健康。&lt;/p>
&lt;p>&lt;strong>问题三：你们公司（团队）目前面临的最大挑战是什么？&lt;/strong>&lt;/p>
&lt;p>如果面试官开始谈论一些具体的技术问题，这很好；如果他的回答是项目时间紧迫，或者需要更多的资金，那你就要小心一点了，公司管理上面可能有问题。&lt;/p>
&lt;p>&lt;strong>问题四：什么新技术（编程语言）是你们未来希望采用的？&lt;/strong>&lt;/p>
&lt;p>如果你申请的是技术职位，面试官恰巧又是技术负责人，那么这个问题将会非常合适。你会对公司的技术路线有所了解和准备，一旦入职，就能更好地适应公司的需要。&lt;/p>
&lt;p>&lt;strong>问题五：在业务方面，有没有什么地方是你们不满意的，未来想要改进的？&lt;/strong>&lt;/p>
&lt;p>很少有公司，会百分之百满意自身的现状，即使那些状况很良好的公司也是如此。这个问题可以让你对公司管理层的关注重点和担忧之处，有所了解。&lt;/p>
&lt;p>&lt;strong>问题六：我申请的这个职位，对公司的业务有何影响？&lt;/strong>&lt;/p>
&lt;p>这个问题会让你了解自己在公司的角色，以及你的岗位对公司是否重要。&lt;/p>
&lt;h1 id="如何提高求职时的谈判能力">如何提高求职时的谈判能力？&lt;/h1>
&lt;p>（1）记住你不是在求职，不是在展示编程技巧，而是在推销某种商业问题（增加收入或降低成本）的解决方案。&lt;/p>
&lt;p>（2）面试时，要有自信，要平等的对话。你要的是一个互利的录用合同，不要每次对方提出要求，你都说Yes。&lt;/p>
&lt;p>（3）雇主可能会问&amp;quot;你的上一份工资是多少&amp;quot;，他们其实在说&amp;quot;给我一个理由，压低你的报酬&amp;quot;。你要想好如何适当地回答这个问题。&lt;/p>
&lt;p>（4）要还价。这里不仅仅指钱，还指其它你关心的方面。如果你无法要求更高的薪水，那就试着要求更多的假期。&lt;/p>
&lt;p>（5）在对方决定录用你以后，才开始讨论薪水。因为那时，他们已经在你身上，投入了大量的时间和金钱，产生了一定的成本，此时他们可能觉得一些小问题已经不值得再纠缠了，比如每年的工资增加几千元。&lt;/p>
&lt;h1 id="产品五问">产品五问&lt;/h1>
&lt;ol>
&lt;li>给谁用？&lt;/li>
&lt;li>他们用这个产品来解决什么问题？&lt;/li>
&lt;li>这个问题对他们而言有多重要？&lt;/li>
&lt;li>我们的方法是否足够简单方便？&lt;/li>
&lt;li>他们要付出的代价与所得是否匹配？&lt;/li>
&lt;/ol>
&lt;h1 id="创业公式">创业公式&lt;/h1>
&lt;p>Paul Graham的创业公式就是：搭建原型、上线运营（别管bug）、收集反馈、调整产品、成长壮大。&lt;/p>
&lt;h1 id="程序员的能力">程序员的能力&lt;/h1>
&lt;p>&lt;strong>基础：掌握语言。&lt;/strong>&lt;/p>
&lt;p>比如熟悉js——看《忍者秘籍》《语言精髓》《es6》等，而掌握语言的基础&lt;/p>
&lt;p>&lt;strong>进阶：掌握框架、语言细节、重要的工具。babel等的插件，开发一个通用sdk。&lt;/strong>&lt;/p>
&lt;p>比如掌握react和vue的原理，状态数据管理redux和vuex等等。&lt;/p>
&lt;p>比如git的各种常用用法。&lt;/p>
&lt;p>&lt;strong>高级：通用解决方案。&lt;/strong>&lt;/p>
&lt;p>比如：算法、并发、分布式、沟通技巧、表达能力、领导能力&lt;/p>
&lt;p>&lt;strong>亮点：&lt;/strong>&lt;/p>
&lt;p>技能和能力有多种，不可能也不需要掌握太多，有一两种能够给别人留下深刻印象即可。&lt;/p>
&lt;p>比如java方向的可以是这些：&lt;/p>
&lt;ul>
&lt;li>你特别熟悉Spring，跟它有关的啥问题啥需求你都能搞定&lt;/li>
&lt;li>你特别会建数据库索引，分析慢SQL原因&lt;/li>
&lt;li>你特别会写脚本进行自动化&lt;/li>
&lt;li>你特别会看源代码，会debug&lt;/li>
&lt;li>你对多线程特别熟悉&lt;/li>
&lt;li>你特别会对JVM调优&lt;/li>
&lt;li>你特别会进行性能调优&lt;/li>
&lt;/ul>
&lt;p>前端方向可以有哪些呢？&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%BF%83%E5%BE%97%E4%B8%8E%E7%BB%8F%E9%AA%8C/" term="心得与经验" label="心得与经验"/></entry><entry><title type="text">内容分发网络</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/cdn.html"/><id>http://blog.wss.cool/cdn.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-09-27T13:16:55+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">用CDN(内容分发网络)加快博客的访问速度。</summary><content type="html">&lt;blockquote>
&lt;p>以下将内容分发网络简称为CDN&lt;/p>
&lt;/blockquote>
&lt;h2 id="cdn是什么">CDN是什么&lt;/h2>
&lt;p>如果没有CDN&lt;/p>
&lt;pre>&lt;code>www.baidu.com
-&amp;gt; DNS解析
-&amp;gt; 123.123.123.123
&lt;/code>&lt;/pre>&lt;p>加入了CDN以后&lt;/p>
&lt;pre>&lt;code>访问 www.baidu.com
-&amp;gt; DNS解析为CNAME域名
-&amp;gt; CDN地址image.baidu.cnd258.com
-&amp;gt; 在CDN服务器中未发现请求的资源
-&amp;gt; 到源服务器请求资源
&lt;/code>&lt;/pre>&lt;p>当再次请求相同的资源时，CDN服务器会直接返回资源，而不会访问源服务器。&lt;/p>
&lt;ol>
&lt;li>由于有了cdn缓存资源，源服务器的压力大大减小。避免了由于访问量过多而无法响应请求。&lt;/li>
&lt;li>cdn服务商有大量的服务器分布于广阔的地理范围内，可以就近响应请求，从而提高响应请求的速度。&lt;/li>
&lt;li>可以通过cdn的api提前将cdn没有缓存的资源添加到缓存中，这样用户第一次访问资源就可以享受到cdn的缓存加速。&lt;/li>
&lt;/ol>
&lt;h2 id="配置">配置&lt;/h2>
&lt;ol>
&lt;li>提供给CDN服务商需要加速的网址和源服务器的ip或域名。服务商会给我们一个cdn网址&lt;/li>
&lt;li>域名解析：在网址的dns解析处，加一条CNAME解析，将原来的网址解析为cdn网址&lt;/li>
&lt;/ol></content><category scheme="http://blog.wss.cool/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/" term="服务器" label="服务器"/></entry><entry><title type="text">Nginx的简单使用</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/nginx.html"/><id>http://blog.wss.cool/nginx.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-09-27T13:08:38+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">nginx的配置文件目录，默认静态网站目录，ubuntu安装nginx，websocket代理。</summary><content type="html">&lt;p>&lt;a href="https://www.linode.com/docs/web-servers/nginx/how-to-configure-nginx/">攻略1&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-18-04">攻略2&lt;/a>&lt;/p>
&lt;h2 id="安装">安装&lt;/h2>
&lt;pre>&lt;code>sudo apt-get install nginx
&lt;/code>&lt;/pre>&lt;h2 id="配置文件">配置文件&lt;/h2>
&lt;p>ubuntu&lt;/p>
&lt;pre>&lt;code>/etc/nginx/conf.d/*.conf
&lt;/code>&lt;/pre>&lt;p>centos&lt;/p>
&lt;pre>&lt;code>/usr/local/nginx/conf/
&lt;/code>&lt;/pre>&lt;h2 id="常用命令">常用命令&lt;/h2>
&lt;pre>&lt;code>sudo nginx -s reload
&lt;/code>&lt;/pre>&lt;h2 id="日志">日志&lt;/h2>
&lt;pre>&lt;code>cat /var/log/nginx/access.log
&lt;/code>&lt;/pre>&lt;h2 id="http转https">http转https&lt;/h2>
&lt;pre>&lt;code>server {
listen 80;
server_name www.test.com;
rewrite ^(.*)$ https://${server_name}$1 permanent;
}
&lt;/code>&lt;/pre>&lt;h2 id="https配置">https配置&lt;/h2>
&lt;pre>&lt;code>server {
listen 443 ssl http2;
server_name blog.wowfriday.cn;
ssl_certificate /etc/nginx/1_blog.wowfriday.cn_bundle.crt;
ssl_certificate_key /etc/nginx/2_blog.wowfriday.cn.key;
ssl_session_timeout 5m;
ssl_ciphers HIGH:!aNULL:!MD5;
ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
ssl_prefer_server_ciphers on;
location / {
proxy_pass https://wowfriday.cn;
}
}
&lt;/code>&lt;/pre>&lt;h2 id="静态网站配置">静态网站配置&lt;/h2>
&lt;pre>&lt;code>server {
listen 80 http;
server_name wowfriday.cn;
location / {
root /usr/share/nginx/html;
index index.html index.htm;
}
}
&lt;/code>&lt;/pre>&lt;h2 id="反向代理配置">反向代理配置&lt;/h2>
&lt;pre>&lt;code>server {
listen 80 http;
server_name wowfriday.cn;
location / {
proxy_pass http://blog.wowfriday.cn;
}
}
&lt;/code>&lt;/pre>&lt;h2 id="websocket代理">websocket代理&lt;/h2>
&lt;pre>&lt;code>location /wss {
proxy_pass http://127.0.0.1:8765;
proxy_http_version 1.1;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection &amp;quot;Upgrade&amp;quot;;
proxy_set_header X-Real-IP $remote_addr;
}
&lt;/code>&lt;/pre>&lt;h2 id="default_server">default_server&lt;/h2>
&lt;blockquote>
&lt;p>使用了宝塔版本的wordpress，其中包含了nginx，我又额外想在这个机器上部署其他应用，也要用到nginx。&lt;/p>
&lt;/blockquote>
&lt;p>wordpress的配置文件中用了 &lt;code>default_server&lt;/code> ，所有未匹配到的请求都会使用它。&lt;/p>
&lt;pre>&lt;code>server {
listen 80 default_server;
}
&lt;/code>&lt;/pre>&lt;p>下面是我的配置。如果 &lt;code>server_name&lt;/code> 设置成 &lt;code>wow.com&lt;/code> 的话，访问 &lt;code>hello.wow.com/mr&lt;/code> 就属于匹配不到的情况，就会走到 default_server 中。改成下面这样就可以了。&lt;/p>
&lt;pre>&lt;code>vim /www/server/panel/vhost/nginx/wss.cool.conf
server {
listen 80;
server_name hello.wow.com;
location /mr {
proxy_pass http://localhost:8082/mr;
}
}
&lt;/code>&lt;/pre>&lt;h2 id="wordpress的配置文件">wordpress的配置文件&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-nginx" data-lang="nginx">&lt;span class="k">server&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kn">listen&lt;/span> &lt;span class="mi">80&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">server_tokens&lt;/span> &lt;span class="no">off&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">server_name&lt;/span> &lt;span class="s">i.wss.cool&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">keepalive_timeout&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">client_max_body_size&lt;/span> &lt;span class="mi">50m&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">root&lt;/span> &lt;span class="s">/usr/local/lighthouse/softwares/wordpress&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">index&lt;/span> &lt;span class="s">index.php&lt;/span> &lt;span class="s">index.html&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">include&lt;/span> &lt;span class="s">/www/server/panel/vhost/nginx/proxy/wordpress.local/*.conf&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">include&lt;/span> &lt;span class="s">/www/server/panel/vhost/rewrite/wordpress.local.conf&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">location&lt;/span> &lt;span class="p">~&lt;/span> &lt;span class="sr">\.php$&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kn">fastcgi_pass&lt;/span> &lt;span class="n">127.0.0.1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">9000&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">fastcgi_index&lt;/span> &lt;span class="s">index.php&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">fastcgi_param&lt;/span> &lt;span class="s">SCRIPT_FILENAME&lt;/span> &lt;span class="nv">$document_root$fastcgi_script_name&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">include&lt;/span> &lt;span class="s">fastcgi_params&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kn">location&lt;/span> &lt;span class="s">/&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kn">try_files&lt;/span> &lt;span class="nv">$uri&lt;/span> &lt;span class="nv">$uri/&lt;/span> &lt;span class="s">/index.php?&lt;/span>&lt;span class="nv">$query_string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kn">location&lt;/span> &lt;span class="p">~&lt;/span> &lt;span class="sr">^/(\.user.ini|\.htaccess|\.git|\.svn|\.project|LICENSE|README.md)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="kn">return&lt;/span> &lt;span class="mi">404&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kn">location&lt;/span> &lt;span class="p">~&lt;/span> &lt;span class="sr">\.well-known&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="kn">allow&lt;/span> &lt;span class="s">all&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kn">access_log&lt;/span> &lt;span class="s">/www/wwwlogs/wordpress.local.log&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">error_log&lt;/span> &lt;span class="s">/www/wwwlogs/wordpress.local.error.log&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果少了&lt;code>location ~ \.php$&lt;/code>这段配置会导致网址打不开并下载一个文件&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/" term="服务器" label="服务器"/><category scheme="http://blog.wss.cool/tags/nginx/" term="nginx" label="nginx"/><category scheme="http://blog.wss.cool/tags/%E5%85%A5%E9%97%A8/" term="入门" label="入门"/></entry><entry><title type="text">CSS知识点汇总</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/css/css%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/css/css%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-09-15T21:53:21+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">MDN 选择器 优先级 伪类 伪元素 盒子模型 内容、内边距、边框、外边距、box-sizing 背景……</summary><content type="html">&lt;p>&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS">MDN&lt;/a>&lt;/p>
&lt;h2 id="选择器">选择器&lt;/h2>
&lt;h2 id="优先级">优先级&lt;/h2>
&lt;h2 id="伪类">伪类&lt;/h2>
&lt;h2 id="伪元素">伪元素&lt;/h2>
&lt;h2 id="盒子模型">盒子模型&lt;/h2>
&lt;ul>
&lt;li>内容、内边距、边框、外边距、box-sizing&lt;/li>
&lt;li>背景颜色、背景图片、背景渐变色&lt;/li>
&lt;li>outline、box-shadow&lt;/li>
&lt;/ul>
&lt;h2 id="外边距合并">外边距合并&lt;/h2>
&lt;p>块级元素的上外边距和下外边距有时会合并（或折叠）为一个外边距，其大小取其中的最大者&lt;/p>
&lt;h2 id="布局">布局&lt;/h2>
&lt;ul>
&lt;li>浮动和定位在内的传统布局方法&lt;/li>
&lt;li>弹性盒（flexbox）布局&lt;/li>
&lt;/ul>
&lt;h2 id="书写规范">书写规范&lt;/h2>
&lt;h2 id="less">less&lt;/h2>
&lt;p>&lt;a href="http://lesscss.org">官网&lt;/a>&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="http://blog.wss.cool/categories/css/" term="CSS" label="CSS"/></entry><entry><title type="text">React With Gesture</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/react-with-gesture.html"/><id>http://blog.wss.cool/react-with-gesture.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-08-28T13:21:48+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">react的手势拖拽的库，支持鼠标和触屏</summary><content type="html">&lt;p>&lt;a href="https://www.npmjs.com/package/react-with-gesture">文档&lt;/a>&lt;/p>
&lt;p>yarn add react-with-gesture&lt;/p>
&lt;p>import { useGesture, withGesture, Gesture } from 'react-with-gesture'&lt;/p></content><category scheme="http://blog.wss.cool/categories/react/" term="React" label="React"/><category scheme="http://blog.wss.cool/categories/react%E5%BA%93/" term="React库" label="React库"/><category scheme="http://blog.wss.cool/tags/%E6%89%8B%E5%8A%BF/" term="手势" label="手势"/><category scheme="http://blog.wss.cool/tags/%E6%8B%96%E6%8B%BD/" term="拖拽" label="拖拽"/></entry><entry><title type="text">React Rangeslider</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/react-rangeslider.html"/><id>http://blog.wss.cool/react-rangeslider.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-08-28T13:15:47+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">react的进度条、刻度条的库，支持拖拽，支持鼠标和触屏</summary><content type="html">&lt;p>&lt;a href="https://whoisandy.github.io/react-rangeslider/">官网&lt;/a>&lt;/p>
&lt;h2 id="使用">使用&lt;/h2>
&lt;p>yarn add react-rangeslider --save&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">Slider&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react-rangeslider&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="s1">&amp;#39;react-rangeslider/lib/index.css&amp;#39;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Slider&lt;/span>
&lt;span class="na">min&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">max&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">onChangeStart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">handleChangeStart&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">onChange&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">handleChange&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">onChangeComplete&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">handleChangeComplete&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Slider&lt;/span>
&lt;span class="na">min&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">max&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">reverseValue&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">orientation&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;horizontal&amp;#39;&lt;/span>
&lt;span class="na">onChange&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">handleChangeReverse&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="p">/&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/react/" term="React" label="React"/><category scheme="http://blog.wss.cool/categories/react%E5%BA%93/" term="React库" label="React库"/></entry><entry><title type="text">workbox</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/workbox/"/><id>http://blog.wss.cool/workbox/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-08-28T09:53:21+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">利用workbox实现资源的预下载</summary><content type="html">&lt;p>&lt;a href="https://developers.google.com/web/tools/workbox/guides/get-started">官网&lt;/a>&lt;/p>
&lt;h2 id="需求">需求&lt;/h2>
&lt;ol>
&lt;li>资源本地化：上课时课件的所有资源预先下载。&lt;/li>
&lt;li>绘本插件图片资源多，需要预先下载。&lt;/li>
&lt;/ol>
&lt;h2 id="实现方案">实现方案&lt;/h2>
&lt;p>workbox&lt;/p>
&lt;h2 id="使用">使用&lt;/h2>
&lt;ol>
&lt;li>安装 workbox
&lt;pre>&lt;code>npm install workbox-cli --global
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>在项目目录下运行命令，进行 workbox 的配置，会生成一个配置文件 workbox-config.js
&lt;pre>&lt;code>cd ./a/b/project_path
workbox wizard
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>默认生成的 workbox 的依赖是 google 的 cdn ，国内无法访问，可通过配置改为使用本地依赖。在配置文件（workbox-config.js）中添加或修改为
&lt;pre>&lt;code>&amp;quot;importWorkboxFrom&amp;quot;: &amp;quot;local&amp;quot;,
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>根据配置文件让 workbox 工作，会生成一些 service worker 相关的文件，入口是 sw.js 文件
&lt;pre>&lt;code>workbox generateSW workbox-config.js
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>在项目入口的html文件（index.html）中引入 workbox 。
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;serviceWorker&amp;#39;&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nx">navigator&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;load&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">navigator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">serviceWorker&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">register&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/sw.js&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/script&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>workbox 会遍历它的工作目录下的所有html文件，将html文件及其中依赖的图片、css和js文件全部加入一个列表中。当第一个页面载入后 workbox 开始工作，利用 service worker 的 api 预下载列表中的文件（缓存）。当访问其他网页或者没有网络/弱网时，就可以使用缓存工作。&lt;/p>
&lt;p>通过 workbox 的配置，也可以通过 workbox 的 api 实现一个高级功能。&lt;/p>
&lt;p>比如缓存的优先级的设置。资源可能会更新，当网络可用时，workbox 是使用缓存的资源还是请求网络上的资源，可以通过设置缓存的优先级策略来根据需要配置。&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="http://blog.wss.cool/tags/api/" term="api" label="api"/></entry><entry><title type="text">授课项目优化</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/%E6%8E%88%E8%AF%BE%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%96/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/%E6%8E%88%E8%AF%BE%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%96/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-08-28T07:19:34+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">记录项目优化的经历</summary><content type="html">&lt;h1 id="现象">现象&lt;/h1>
&lt;p>epp项目在pad端家在需要10-30s时间。&lt;/p>
&lt;h1 id="为什么会这样">为什么会这样？&lt;/h1>
&lt;p>pad端是RN项目，前面2个界面的操作之后开启webview访问学生端网址，加载epp项目。&lt;/p>
&lt;p>观察epp学生端项目的加载：&lt;/p>
&lt;p>&lt;img src="http://blog.wss.cool/images/%E4%BC%98%E5%8C%96-%E5%89%8D.jpg" alt="优化前">&lt;/p>
&lt;p>这个是渲染第一帧前加载资源的截图，可以看到有17个js文件，而很明显的，fabric、ckeditor、aliplayer这些体积很大的库在学生端是不需要的（这3个文件都是编辑器用的，epp项目分学生端、教师端、编辑器），而且资源数量较多。&lt;/p>
&lt;p>&lt;strong>两个原因导致了pad端需要加载10s的问题：资源数量多、很多不需要的代码被加载。&lt;/strong>&lt;/p>
&lt;p>30s的情况出现在网络差的时候，比如上课时，有30个学生同时使用pad，瓜分宽带导致资源下载速度更慢。这个后面也有方案尝试解决。&lt;/p>
&lt;h1 id="问题处在哪">问题处在哪？&lt;/h1>
&lt;p>从代码的入口文件看起，发现了这段代码：&lt;/p>
&lt;p>&lt;img src="http://blog.wss.cool/images/%E4%BC%98%E5%8C%96-%E4%BB%A3%E7%A0%81.png" alt="懒加载">&lt;/p>
&lt;p>这段代码的作用是根据url来加载不同的场景（学生端、教师端、编辑器），重点是下面这段代码。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">importScene&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;span class="kr">import&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`@/scene/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">sceneName&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">Scene/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">sceneName&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">Scene`&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">module&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">default&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>使用webpack的代码分割、懒加载机制，&lt;a href="http://blog.wss.cool/images/%E4%BC%98%E5%8C%96-%E4%BB%A3%E7%A0%81.png">文档链接&lt;/a>。webpack会将&lt;code>import(&amp;quot;./module&amp;quot;)&lt;/code>作为分割点，将其放在单独的chunk文件中，实现懒加载。&lt;br>
&lt;code>import()&lt;/code>也可以接受动态表达式，比如这样&lt;code>import(./routes/${path}/route)&lt;/code>，此时&lt;code>import() &lt;/code>为每一个&lt;strong>可能的模块&lt;/strong>创建独立的chunk，这句话的重点是&lt;strong>可能的模块&lt;/strong>，也就是上面代码的问题所在。&lt;/p>
&lt;p>对于前面那段代码，import的动态的部分就是sceneName，对于webpack来说它是一个未知变量，所以webpack认为它是&lt;strong>可能的模块&lt;/strong>。&lt;/p>
&lt;p>在我们的业务中，&lt;strong>可能的模块&lt;/strong>包含来学生端、教室端、编辑器，那么webpack会将3个大模块全部分别打包，而且将其全部下载。从而导致来前面提到的2个问题。&lt;/p>
&lt;h1 id="解决问题">解决问题&lt;/h1>
&lt;p>尝试着把上面提到的那段动态表达式改成确定的语句，比如：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">importStudentScene&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;span class="kr">import&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;@/scene/studentScene/studentScene&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">module&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">default&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">edApplication&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getInstance&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;edinnova&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">importStudentScene&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">studentScene&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addScene&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="nx">studentScene&lt;/span>&lt;span class="p">());&lt;/span>
&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">startScene&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;studentScene&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;#app&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>再次开启项目：&lt;/p>
&lt;p>&lt;img src="http://blog.wss.cool/images/%E4%BC%98%E5%8C%96-%E5%90%8E.jpg" alt="优化后">&lt;/p>
&lt;p>可以看到数量和体积都小了很多。&lt;/p>
&lt;p>&lt;img src="http://blog.wss.cool/images/%E4%BC%98%E5%8C%96-%E5%90%8E2.jpg" alt="优化后">&lt;/p>
&lt;p>这是在电脑上的截图，优化后首屏从3.4s变为2.1s，效果明显。这只是一个几乎没有改动代码的一步优化。&lt;/p>
&lt;p>可以看到优化后还是有1个600k，1个200k两个chunk文件，后面还需要分析这两个chunk文件，看是否有优化空间。&lt;/p>
&lt;h1 id="30个学生同时使用pad">30个学生同时使用pad&lt;/h1>
&lt;p>有一个猜想，因为30个学生是在同一个教室的局域网内。考虑使用webRTC的种子下载技术，实现下载速度的优化。&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/></entry><entry><title type="text">正则表达式</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/javascript/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/javascript/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-08-25T20:13:08+00:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">精准匹配 一个字符跟着一个字符，完全匹配 /test/ 匹配一类字符 匹配组合中的任意一个👇 [abc] 除了组合……</summary><content type="html">&lt;h2 id="精准匹配">精准匹配&lt;/h2>
&lt;p>一个字符跟着一个字符，完全匹配&lt;/p>
&lt;pre>&lt;code>/test/
&lt;/code>&lt;/pre>&lt;h2 id="匹配一类字符">匹配一类字符&lt;/h2>
&lt;p>匹配组合中的任意一个👇&lt;/p>
&lt;pre>&lt;code>[abc]
&lt;/code>&lt;/pre>&lt;p>除了组合中的所有👇&lt;/p>
&lt;pre>&lt;code>[^abc]
&lt;/code>&lt;/pre>&lt;p>☢️歧义：&lt;code>^&lt;/code>有2中含义：在&lt;code>[]&lt;/code>中表示“非”，在正则表达式的开头&lt;code>/^abc/&lt;/code>，表示匹配以&lt;code>abc&lt;/code>开头的字符串。&lt;/p>
&lt;p>从a到m之间👇&lt;/p>
&lt;pre>&lt;code>[a-m]
&lt;/code>&lt;/pre>&lt;h2 id="转义">转义&lt;/h2>
&lt;p>字母和数字都可以表示自己。但&lt;code>$``-``^&lt;/code>可以表达自身以外的东西，要使用反斜杠“\”来转义。&lt;/p>
&lt;h2 id="重复">重复&lt;/h2>
&lt;p>&lt;code>/t?est/&lt;/code>👉字符后加&lt;code>?&lt;/code>表示一次或零次出现&lt;/p>
&lt;p>&lt;code>/t+est/&lt;/code>👉&lt;code>+&lt;/code>表示一次或多次出现&lt;/p>
&lt;p>&lt;code>/t*est/&lt;/code>👉 &lt;code>*&lt;/code>表示零次或多次出现&lt;/p>
&lt;p>&lt;code>/t{4}est/&lt;/code>👉&lt;code>{4}&lt;/code>表示4次出现&lt;/p>
&lt;p>&lt;code>/t{4,10}est/&lt;/code>👉&lt;code>{4-10}&lt;/code>表示4-10次出现&lt;/p>
&lt;p>&lt;code>/t{4,}est/&lt;/code>👉&lt;code>{4,}&lt;/code>表示4-多次出现&lt;/p>
&lt;h2 id="预定义字符">预定义字符&lt;/h2>
&lt;p>&lt;code>\t&lt;/code>表示水平制表符tab&lt;/p>
&lt;p>&lt;code>\s&lt;/code>表示任何空字符，如空格、tab、回车等&lt;/p>
&lt;p>还有很多&lt;/p>
&lt;h2 id="分组">分组&lt;/h2>
&lt;p>操作符（如&lt;code>+``*``?&lt;/code>)只能影响它前面的&lt;span title="字符" class="trans">术语&lt;/span>。使用小括号&lt;code>()&lt;/code>可以使操作符作用于&lt;strong>一组术语&lt;/strong>。&lt;/p>
&lt;p>例子：&lt;code>/(ab)+/&lt;/code>会匹配&lt;code>&amp;quot;ab&amp;quot;&lt;/code>字符串一次或多次。&lt;/p>
&lt;p>☢️歧义：&lt;code>()&lt;/code>同时还有捕获的作用。&lt;/p>
&lt;h2 id="或">或&lt;/h2>
&lt;p>使用竖线表示或的关系，比如&lt;code>/a|b/&lt;/code>匹配a或b，与&lt;code>/[ab]/&lt;/code>类似&lt;/p>
&lt;h2 id="反向引用">反向引用&lt;/h2>
&lt;p>看这个正则&lt;code>/^([abc])a\1)/&lt;/code>，其中&lt;code>()&lt;/code>为捕获，可能捕获到&lt;code>a&lt;/code>或&lt;code>b&lt;/code>或&lt;code>c&lt;/code>，&lt;code>\1&lt;/code>就表示被捕获到的那个字符。&lt;/p>
&lt;p>比如，对于字符串&lt;code>bab&lt;/code>，首先&lt;code>([abc])&lt;/code>捕获到了&lt;code>b&lt;/code>，&lt;code>\1&lt;/code>就代表&lt;code>b&lt;/code>，所以&lt;code>bab&lt;/code>可以匹配。&lt;/p>
&lt;h2 id="捕获及捕获的引用">捕获及捕获的引用&lt;/h2>
&lt;p>&lt;code>/(hello) (world)/&lt;/code> 在匹配字符串 &lt;code>hello world&lt;/code> 时会将 () 中的字符进行捕获，可以用 &lt;code>$1&lt;/code> &lt;code>$2&lt;/code> 表示。&lt;/p>
&lt;p>在&lt;code>string.replace()&lt;/code>中，使用&amp;quot;$1&amp;quot;表示被捕获到的字符。&lt;/p>
&lt;p>比如，&lt;code>'hello world'.replace(/(hello) (world)/, '$1 666-$2')&lt;/code>，会输出&lt;code>&amp;quot;hello 666-world&amp;quot;&lt;/code>&lt;/p>
&lt;p>(?: . . .)表示非捕获分组，也就是不会被捕获，仅表示分组。&lt;/p>
&lt;h2 id="trim的实现">trim()的实现&lt;/h2>
&lt;h3 id="方法1">方法1&lt;/h3>
&lt;p>&lt;code>str.replace(/^\s+|\s+$/g,&amp;quot;&amp;quot;)&lt;/code>，在头尾分别替换掉空字符&lt;/p>
&lt;h3 id="方法2">方法2&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">var&lt;/span> &lt;span class="nx">str&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">strings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sr">/^\s\s*/&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="c1">//在头部替换
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">ws&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sr">/\s/&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">str&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ws&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">str&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">charAt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">)));&lt;/span> &lt;span class="c1">// 看在尾部有几个空字符
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">str&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">slice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 剔除空字符
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>方法2比方法1在长文档中性能更好。&lt;/p>
&lt;h2 id="其他">其他&lt;/h2>
&lt;h3 id="匹配换行符">匹配换行符&lt;/h3>
&lt;ol>
&lt;li>术语点&lt;code>.&lt;/code>不能匹配到换行符&lt;code>\n&lt;/code>&lt;/li>
&lt;li>&lt;code>/\s*/g&lt;/code>匹配不到连续多个空字符，可以用&lt;code>/\s+/g&lt;/code>可以。&lt;/li>
&lt;/ol></content><category scheme="http://blog.wss.cool/categories/javascript/" term="JavaScript" label="JavaScript"/></entry><entry><title type="text">React Popup</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/react-popup.html"/><id>http://blog.wss.cool/react-popup.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-08-22T10:43:25+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">react的弹窗的库</summary><content type="html">&lt;p>&lt;a href="https://react-popup.elazizi.com/component-api/">React Popup&lt;/a> 是一个弹窗组件的库。&lt;/p>
&lt;h2 id="安装">安装&lt;/h2>
&lt;pre>&lt;code>yarn add reactjs-popup
npm install reactjs-popup
&lt;/code>&lt;/pre>&lt;h2 id="基本用法">基本用法&lt;/h2>
&lt;ul>
&lt;li>contentStyle：设置&lt;strong>内容区&lt;/strong>的样式&lt;/li>
&lt;li>overlayStyle：设置&lt;strong>遮罩&lt;/strong>的样式&lt;/li>
&lt;/ul>
&lt;h2 id="占位弹窗1">占位弹窗1&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s2">&amp;#34;react&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Popup&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s2">&amp;#34;reactjs-popup&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">PopupExample&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Popup&lt;/span> &lt;span class="na">trigger&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&amp;lt;&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="nx">Trigger&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;}&lt;/span> &lt;span class="na">position&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;right center&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Popup&lt;/span> &lt;span class="nx">content&lt;/span> &lt;span class="nx">here&lt;/span> &lt;span class="o">!!&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Popup&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="占位弹窗2">占位弹窗2&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">const&lt;/span> &lt;span class="nx">PopupExample&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Popup&lt;/span> &lt;span class="na">trigger&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&amp;lt;&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Trigger&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;}&lt;/span> &lt;span class="na">position&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;top left&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nx">close&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="nx">Content&lt;/span> &lt;span class="nx">here&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;close&amp;#34;&lt;/span> &lt;span class="na">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">close&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">times&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Popup&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="受控modal">受控Modal&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">const&lt;/span> &lt;span class="nx">Modal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">button&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;button&amp;#34;&lt;/span> &lt;span class="na">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">openModal&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>
&lt;span class="nx">Controlled&lt;/span> &lt;span class="nx">Popup&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Popup&lt;/span>
&lt;span class="na">open&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">open&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="na">closeOnDocumentClick&lt;/span>
&lt;span class="na">onClose&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">closeModal&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;modal&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;close&amp;#34;&lt;/span> &lt;span class="na">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">closeModal&lt;/span>&lt;span class="p">}&amp;gt;&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">times&lt;/span>&lt;span class="p">;&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="mi">666&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">Popup&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/react/" term="React" label="React"/><category scheme="http://blog.wss.cool/categories/react%E5%BA%93/" term="React库" label="React库"/></entry><entry><title type="text">D3学习笔记</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/d3/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/d3/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-07-20T12:29:41+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">参考：例子网站1，例子网站2，树1 circle circle（圆形）有3个主要属性 cx、cy，圆……</summary><content type="html">&lt;p>参考：&lt;a href="https://bl.ocks.org/mbostock">例子网站1&lt;/a>，&lt;a href="https://observablehq.com/">例子网站2&lt;/a>，&lt;a href="https://observablehq.com/@mbostock/tree-of-life">树1&lt;/a>&lt;/p>
&lt;h2 id="circle">circle&lt;/h2>
&lt;p>circle（圆形）有3个主要属性&lt;/p>
&lt;ol>
&lt;li>cx、cy，圆心的坐标&lt;/li>
&lt;li>r，半径&lt;/li>
&lt;/ol>
&lt;h2 id="线性映射">线性映射&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">scale&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">d3&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">scaleLiner&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">scale&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">domain&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">([&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">200&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;span class="nx">scale&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">range&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">([&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">50&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">output&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">scale&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3个概念：&lt;/p>
&lt;ol>
&lt;li>scaleLiner，线性映射。&lt;/li>
&lt;li>domain（域），存放的是真实的数据。&lt;/li>
&lt;li>range（范围），映射后的范围。
domain中的数据会被线性映射到range中。&lt;code>scale(50);&lt;/code>中的&lt;code>50&lt;/code>是domain中的值，output为映射后的值。&lt;/li>
&lt;/ol>
&lt;h2 id="最值">最值&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">positionData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">],[&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">],[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">maxZ&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">d3&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">positionData&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">)=&amp;gt;&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="动态缩放">动态缩放&lt;/h2>
&lt;p>处理复杂数据的第一步是确定缩放比例，才能让所有数据点都包含在svg画布中。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">xScale&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">d3&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">scaleLinear&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">domain&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">d3&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">dataset&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])])&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">range&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="nx">padding&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">w&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nx">padding&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在数据集中找到最大最小值，作为&lt;code>domain&lt;/code>的边界，将数据集映射到画布大小的&lt;code>range&lt;/code>中&lt;/p>
&lt;h2 id="坐标轴">坐标轴&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">yAxis&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">d3&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">axisLeft&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">yScale&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">svg&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;g&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">attr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;transform&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;translate(0,&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">h&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nx">padding&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">xAxis&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="svg的image元素">svg的image元素&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">image&lt;/span>
&lt;span class="nx">fill&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;#000000&amp;#34;&lt;/span>
&lt;span class="nx">x&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="nx">y&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">width&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="nx">height&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">h&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">preserveAspectRatio&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;none&amp;#34;&lt;/span>
&lt;span class="nx">xlinkHref&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">mark&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">point&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">image&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="err">/&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="http://blog.wss.cool/tags/api/" term="api" label="api"/></entry><entry><title type="text">Git常用操作</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%B7%A5%E5%85%B7/git/git/"/><id>http://blog.wss.cool/posts/%E5%B7%A5%E5%85%B7/git/git/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-07-18T10:53:36+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Git 常用操作，暂存，刷新远程分支列表，取消追踪，代理设置等。</summary><content type="html">&lt;h2 id="标签">标签&lt;/h2>
&lt;p>将某次commit打上标签
&lt;code>git tag &amp;lt;name &lt;/code> 默认给最新提交打标签。&lt;br>
&lt;code>git tag&lt;/code> 查看所有标签
&lt;code>git tag v0.9 f52c633&lt;/code> 根据commit id给某次提交打标签&lt;/p>
&lt;h2 id="暂存改动">暂存改动&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th align="center">操作&lt;/th>
&lt;th align="center">代码&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td align="center">暂存&lt;/td>
&lt;td align="center">git stash&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center">列表&lt;/td>
&lt;td align="center">git stash list&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center">取出&lt;/td>
&lt;td align="center">git stash pop 1&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="获取上一次commit的message">获取上一次commit的message&lt;/h2>
&lt;pre>&lt;code>git log -1 --pretty=%B
&lt;/code>&lt;/pre>&lt;h2 id="使用一次新的commit替代上一次提交">使用一次新的commit，替代上一次提交&lt;/h2>
&lt;p>如果代码没有任何新变化，则用来改写上一次commit的提交信息&lt;/p>
&lt;pre>&lt;code>git commit --amend -m &amp;quot;666&amp;quot;
&lt;/code>&lt;/pre>&lt;p>代码有变动，要制定文件&lt;/p>
&lt;pre>&lt;code>git commit --amend src\plugins\icElement_vote\components\config.vue src\plugins\icElement_chose\components\config.vue
-m &amp;quot;fix(编辑器-选择题/投票题):删除不是当前选中的选项&amp;quot;
&lt;/code>&lt;/pre>&lt;h2 id="分支间摘-commit">分支间摘 commit&lt;/h2>
&lt;p>分支A有5次提交，想把其中的第二三次提交拿到B分支，先拿到 commit 的 id 可通过 &lt;code>git log -1 --pretty=%B&lt;/code> 取到。然后使用摘樱桃命令：&lt;/p>
&lt;pre>&lt;code>git cherry-pick 5cf6d24
&lt;/code>&lt;/pre>&lt;p>分支B就把这次commit摘过来了。&lt;/p>
&lt;h2 id="取消追踪">取消追踪&lt;/h2>
&lt;pre>&lt;code>git rm -r --cached 文件或目录
&lt;/code>&lt;/pre>&lt;h2 id="在缓存中移除某个目录">在缓存中移除某个目录&lt;/h2>
&lt;p>&lt;code>git rm -r --cached some-directory&lt;/code>&lt;/p>
&lt;h2 id="查看记录log">查看记录log&lt;/h2>
&lt;p>&lt;code>git log&lt;/code> 这样会打印出超级多的信息，包括SHA-1、作者、时间、message,很啰嗦，还是不要这么用得好。&lt;br>
&lt;code>git log --pretty=format:&amp;quot;%h - %an, %ar : %s&amp;quot;&lt;/code> 按格式打印信息，具体选项如下 &lt;br>
git log --graph
git log --graph --oneline --decorate&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>选项&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>%H&lt;/td>
&lt;td>提交对象（commit）的完整哈希字串&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%h&lt;/td>
&lt;td>提交对象的简短哈希字串&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%T&lt;/td>
&lt;td>树对象（tree）的完整哈希字串&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%t&lt;/td>
&lt;td>树对象的简短哈希字串&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%P&lt;/td>
&lt;td>父对象（parent）的完整哈希字串&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%p&lt;/td>
&lt;td>父对象的简短哈希字串&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%an&lt;/td>
&lt;td>作者（author）的名字&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%ae&lt;/td>
&lt;td>作者的电子邮件地址&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%ad&lt;/td>
&lt;td>作者修订日期（可以用 -date= 选项定制格式）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%ar&lt;/td>
&lt;td>作者修订日期，按多久以前的方式显示&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%cn&lt;/td>
&lt;td>提交者(committer)的名字&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%ce&lt;/td>
&lt;td>提交者的电子邮件地址&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%cd&lt;/td>
&lt;td>提交日期&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%cr&lt;/td>
&lt;td>提交日期，按多久以前的方式显示&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%s&lt;/td>
&lt;td>提交说明&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;code>git log -2 --oneline&lt;/code> 打印最近两次的简化后的记录，其中&lt;code>--oneline&lt;/code>为 &lt;code>--pretty=oneline --abbrev-commit&lt;/code> 命令的简化用法。&lt;code>-n&lt;/code>为最近n次的提交。&lt;br>
&lt;code>git log --since=2.weeks&lt;/code> 打印2周内的记录，具体选项如下&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>选项&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>-(n)&lt;/td>
&lt;td>仅显示最近的 n 条提交&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>--since, --after&lt;/td>
&lt;td>仅显示指定时间之后的提交。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>--until, --before&lt;/td>
&lt;td>仅显示指定时间之前的提交。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>--author&lt;/td>
&lt;td>仅显示指定作者相关的提交。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>--committer&lt;/td>
&lt;td>仅显示指定提交者相关的提交。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;code>git log --pretty=&amp;quot;%h - %s&amp;quot; --author=wss --since=&amp;quot;2008-10-01&amp;quot; --before=&amp;quot;2008-11-01&amp;quot;&lt;/code> 各种条件可以一起用&lt;br>
&lt;code>git log -p -2&lt;/code> 查看最近两次提交，并显示提交内容（具体改动了什么）&lt;/p>
&lt;h2 id="攻略">攻略&lt;/h2>
&lt;p>Git 原理入门 &lt;a href="http://www.ruanyifeng.com/blog/2018/10/git-internals.html">http://www.ruanyifeng.com/blog/2018/10/git-internals.html&lt;/a>&lt;/p>
&lt;p>Git 分支管理策略 &lt;a href="http://www.ruanyifeng.com/blog/2012/07/git.html">http://www.ruanyifeng.com/blog/2012/07/git.html&lt;/a>&lt;/p>
&lt;p>Git 工作流程 &lt;a href="http://www.ruanyifeng.com/blog/2015/12/git-workflow.html">http://www.ruanyifeng.com/blog/2015/12/git-workflow.html&lt;/a>&lt;/p>
&lt;p>Git 使用规范流程 &lt;a href="http://www.ruanyifeng.com/blog/2015/08/git-use-process.html">http://www.ruanyifeng.com/blog/2015/08/git-use-process.html&lt;/a>&lt;/p></content><category scheme="http://blog.wss.cool/categories/git/" term="git" label="git"/><category scheme="http://blog.wss.cool/tags/api/" term="api" label="api"/></entry><entry><title type="text">Fetch 与 Axios</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/fetch%E4%B8%8Eaxios/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/fetch%E4%B8%8Eaxios/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-07-17T10:27:44+00:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">原文：使用Fetch 、axios文档 什么是 fetch ？ 以前通过JS进行网络请求都是使用aja……</summary><content type="html">&lt;p>原文：&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch">使用Fetch&lt;/a> 、&lt;a href="https://github.com/axios/axios">axios文档&lt;/a>&lt;/p>
&lt;h1 id="什么是-fetch-">什么是 fetch ？&lt;/h1>
&lt;p>以前通过JS进行网络请求都是使用&lt;code>ajax&lt;/code>也就是&lt;code>XMLHttpRequest&lt;/code>实现的。如果用原生方式实现起来比较麻烦。&lt;/p>
&lt;p>&lt;code>Fetch API&lt;/code>是浏览器提供的一个代替&lt;code>XMLHttpRequest&lt;/code>的新方法。&lt;/p>
&lt;h2 id="怎么使用-fetch-">怎么使用 fetch ？&lt;/h2>
&lt;p>最简单的形式：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;http://example.com/movies.json&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">response&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// return response.text();
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">response&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">myJson&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">myJson&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>⚠️需要注意:&lt;/p>
&lt;ol>
&lt;li>&lt;code>fetch()&lt;/code>方法返回的是&lt;code>promise&lt;/code>。&lt;/li>
&lt;li>当&lt;code>Http状态码&lt;/code>是&lt;code>404&lt;/code>或者&lt;code>500&lt;/code>时也是&lt;code>resolve&lt;/code>，但是会将&lt;code>resolve&lt;/code>的返回值的&lt;code>ok&lt;/code>属性设置为&lt;code>false&lt;/code>。&lt;/li>
&lt;li>只有当网络故障或者请求被阻止时才会是&lt;code>reject&lt;/code>。&lt;/li>
&lt;li>&lt;code>resolve&lt;/code>中进行&lt;code>response.json()&lt;/code>才能拿到返回数据。&lt;/li>
&lt;li>&lt;code>response.json()&lt;/code>会读取body，如果是json格式的，会将其转化。如果是不是json要用&lt;code>response.text()&lt;/code>&lt;/li>
&lt;/ol>
&lt;h2 id="怎么设置-methodheader等参数呢">怎么设置 method、header等参数呢？&lt;/h2>
&lt;p>fetch() 方法接受第二个可选参数——一个对象——用来设置请求的参数：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">url&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">body&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stringify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="c1">// must match &amp;#39;Content-Type&amp;#39; header
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">cache&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;no-cache&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// *default, no-cache, reload, force-cache, only-if-cached
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">credentials&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;same-origin&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// include, same-origin, *omit
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">headers&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s1">&amp;#39;user-agent&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Mozilla/4.0 MDN Example&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;content-type&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;application/json&amp;#39;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">method&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;POST&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// *GET, POST, PUT, DELETE, etc.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">mode&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;cors&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// no-cors, cors, *same-origin
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">redirect&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;follow&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// manual, *follow, error
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">referrer&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;no-referrer&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// *client, no-referrer
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>⚠️&lt;code>credentials: 'include'&lt;/code> 这个字段可以让请求带上 cookie 。&lt;/p>
&lt;h2 id="上传json数据">上传JSON数据&lt;/h2>
&lt;p>⚠️需要设置&lt;code>header&lt;/code>的&lt;code>'Content-Type': 'application/json'&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">url&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">method&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;POST&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// or &amp;#39;PUT&amp;#39;
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">body&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stringify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="c1">// data can be `string` or {object}!
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">headers&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Headers&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="s1">&amp;#39;Content-Type&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;application/json&amp;#39;&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="上传文件">上传文件&lt;/h2>
&lt;p>⚠️需要使用&lt;code>FormData&lt;/code>类作为&lt;code>request&lt;/code>的&lt;code>body&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">var&lt;/span> &lt;span class="nx">formData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">FormData&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">fileField&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">querySelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;input[type=&amp;#39;file&amp;#39;]&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">formData&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;username&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;abc123&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">formData&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;avatar&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fileField&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">files&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;https://example.com/profile/avatar&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">method&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;PUT&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">body&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">formData&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="什么是-axios-">什么是 axios ？&lt;/h1>
&lt;p>它是一个库，可以用&lt;code>Promise&lt;/code>的方式进行网络请求。&lt;/p>
&lt;h2 id="怎么使用-axios-">怎么使用 axios ？&lt;/h2>
&lt;h3 id="最简单的几种方式">最简单的几种方式&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="c1">// get请求1
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">axios&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/user?ID=12345&amp;#39;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="c1">// get请求2
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">axios&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/user&amp;#39;&lt;/span>&lt;span class="p">,{&lt;/span>
&lt;span class="nx">params&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">12345&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="p">}).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="c1">// post请求
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">axios&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">post&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/user&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">firstName&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Fred&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">lastName&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Flintstone&amp;#39;&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="同时进行多个请求">同时进行多个请求&lt;/h3>
&lt;p>几个请求都成功后，进行后续操作&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">function&lt;/span> &lt;span class="nx">getUserAccount&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">axios&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/user/12345&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">getUserPermissions&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">axios&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/user/12345/permissions&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">axios&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">all&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="nx">getUserAccount&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nx">getUserPermissions&lt;/span>&lt;span class="p">()])&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">axios&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">spread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">acct&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">perms&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Both requests are now complete
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}));&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="使用asyncawait">使用&lt;code>async/await&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">async&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">getUser&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">axios&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/user?ID=12345&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">response&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="创建实例统一配置设置统一处理请求响应">创建实例——统一配置、设置，统一处理请求、响应&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">instance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">axios&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">create&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">baseURL&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;https://some-domain.com/api/&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">timeout&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1000&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">headers&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;Authorization&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;foobar&amp;#39;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="nx">transformRequest&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">headers&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Do whatever you want to transform the data
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}],&lt;/span>
&lt;span class="nx">transformResponse&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Do whatever you want to transform the data
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}],&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意⚠️&lt;/p>
&lt;ol>
&lt;li>没有transformResponse属性时，resopnse中的data是一个对象。&lt;/li>
&lt;li>加了transformResponse属性后（即便它是空的方法），resopnse的data会变成字符串。&lt;/li>
&lt;li>如果想对response做统一处理，可以在拦截中做。&lt;/li>
&lt;/ol>
&lt;h3 id="拦截响应或请求">拦截响应或请求&lt;/h3>
&lt;p>这里的data会受到上面的transformResponse影响，不加的时候就是对象&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="c1">// 响应拦截器
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">instance&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">interceptors&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">response&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">response&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 对响应数据做点什么
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">response&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="mi">1500&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">warn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;ed_token失效，error code:1500&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">localStorage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">removeItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;ed_token&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">localStorage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">removeItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;ed_user_info&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dispatchEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="nx">Event&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;authErrorAngToLogin&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1">// return Promise.reject(response.data);
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">response&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">response&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">data&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">response&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 对响应错误做点什么
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nb">Promise&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">reject&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>初始的header的Authorization可能是无效的，需要在登录后更新&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">my_axios&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">defaults&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">headers&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Authorization&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">result&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">token&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="上传文件-1">上传文件&lt;/h3>
&lt;p>两点需要注意：&lt;/p>
&lt;ol>
&lt;li>&lt;code>file&lt;/code>文件对象使用&lt;code>Form&lt;/code>类存放&lt;/li>
&lt;li>&lt;code>content-type&lt;/code>为&lt;code>multipart/form-data&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">var&lt;/span> &lt;span class="nx">formData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">FormData&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">formData&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;file&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">axios&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">post&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="s1">&amp;#39;https://develop.com/upload&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">formData&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nx">headers&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s1">&amp;#39;Authorization&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;token&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;Content-Type&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;multipart/form-data&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="取消请求">取消请求&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">login&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">params&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">cancelToken&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">axios&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">post&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`/user`&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">params&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">cancelToken&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">response&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">axios&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">isCancel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Request canceled&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">error&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">message&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其中cancelToken每次调用login时需要重新生成：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">CancelToken&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">axios&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CancelToken&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">// 可以全局一个
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">source&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">CancelToken&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">source&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="c1">// 每次请求都要时调用生成cancelToken
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="http://blog.wss.cool/tags/api/" term="api" label="api"/></entry><entry><title type="text">利用useContext使用ReactRouter</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/react-router-hook.html"/><id>http://blog.wss.cool/react-router-hook.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-07-08T09:36:38+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">利用React Hook的useContext使用React Router的history.push等api，使用useReducer管理数据。</summary><content type="html">&lt;h2 id="react-router-的historypush">React Router 的history.push&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">useState&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">useContext&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">useEffect&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">__RouterContext&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s2">&amp;#34;react-router&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">Login&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">FC&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">token&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">setToken&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">useState&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">history&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">useContext&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">__RouterContext&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">useEffect&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">token&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">history&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/list&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">token&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">history&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">button&lt;/span> &lt;span class="na">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{()=&amp;gt;&lt;/span>&lt;span class="nx">setToken&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;666&amp;#39;&lt;/span>&lt;span class="p">)}&amp;gt;&lt;/span>&lt;span class="nx">登录&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/&amp;gt;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这段代码的逻辑是，等级登录按钮，设置token变量。当token变量变化时，触发useEffect调用ReactRouter的history.push切换路由。history对象是通过useContext获得到的，可以拿到location、history、match等3个对象。&lt;/p></content><category scheme="http://blog.wss.cool/categories/react/" term="React" label="React"/><category scheme="http://blog.wss.cool/tags/api/" term="api" label="api"/></entry><entry><title type="text">web前端对密码加密的意义</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%BF%83%E5%BE%97/web%E5%89%8D%E7%AB%AF%E5%AF%B9%E5%AF%86%E7%A0%81%E5%8A%A0%E5%AF%86%E7%9A%84%E6%84%8F%E4%B9%89/"/><id>http://blog.wss.cool/posts/%E5%BF%83%E5%BE%97/web%E5%89%8D%E7%AB%AF%E5%AF%B9%E5%AF%86%E7%A0%81%E5%8A%A0%E5%AF%86%E7%9A%84%E6%84%8F%E4%B9%89/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-07-06T10:04:07+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">web前端对密码加密的意义 有的运维或者后台会记录包含请求体的 access log，如果不加密，l……</summary><content type="html">&lt;h1 id="web前端对密码加密的意义httpswwwv2excomt522221">&lt;a href="https://www.v2ex.com/t/522221">web前端对密码加密的意义&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>有的运维或者后台会记录包含请求体的 access log，如果不加密，log 里面就是明文密码。这种在架构上垂直扩展&amp;amp;多层的公司很容易发生。GitHub 就翻车过一次，在请求日志里发现了明文密码，然后就群发邮件通知用户改密码。 @lincanbin&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>用单向函数“加密”等同于明文 @hanru&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>能增加攻击的难度。安全领域并不是非黑即白的，如果小量成本能挡住小学 3 年级的傻子攻击，那就有意义 @otakustay&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>任何提高攻击门槛的做法都是有意义的 @newmlp&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>感觉一般加密意义不大，中间人重放就可以了，但聊胜于无。顺便一说 B 站采用的是前端非对称加密 @lzvezr&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>非对称加密。用公钥加密，知道 JS 源码也没用。但是我觉得在 HTTPS 下面没必要。另外，如果进日志，肯定不要存密码啊。如果原封进日志，那所有加密都没有意义。因为这个加密过的密码本来就可以从前端登录进去。我只是不知道明文而已。CDN 商是可以拦截保存，所以不要啥的都经过 CDN。基于上面的分析，还有一种比较稳妥的方式是前端密码提交的时候，附上 timestamp，用 RSA 公钥加密，服务器私钥解密后验证时间，然后登录一次 timestamp 作废。这样日志泄露或者被拦截，也无法用原密文重放 @lhx2008&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>看了下苹果、微软、谷歌、fb 这几个登录页面都是明文传输密码的，百度、淘宝、qq 都是先前端加密，总结一下就是在国外没意义，国内有意义 @iiji86&lt;/p>
&lt;/blockquote>
&lt;h1 id="用户密码安全性设计httpsblogcoderzhcom20160103security-design">&lt;a href="https://blog.coderzh.com/2016/01/03/security-design/">用户密码安全性设计&lt;/a>&lt;/h1>
&lt;h1 id="即使被拖库也可以保证密码不泄露httpsblogcoderzhcom20160110a-password-security-design-example">&lt;a href="https://blog.coderzh.com/2016/01/10/a-password-security-design-example/">即使被拖库，也可以保证密码不泄露&lt;/a>&lt;/h1>
&lt;h1 id="前端rsa私钥加密httpsgithubcomtravistjsencrypt">&lt;a href="https://github.com/travist/jsencrypt">前端rsa私钥加密&lt;/a>&lt;/h1>
&lt;h1 id="web前端密码加密是否有意义---w2014的回答httpswwwzhihucomquestion25539382answer539557939">&lt;a href="https://www.zhihu.com/question/25539382/answer/539557939">Web前端密码加密是否有意义？ - w2014的回答&lt;/a>&lt;/h1>
&lt;p>事实上现代密码学已经可以做到很多让人难以想象的事情了下面是一些有一点“反常识”的结论&lt;br>
1.A可以向B证明自己拥有一个密码，但是如果B是假冒的验证者，A不会透露关于密码的任何信息给B。——“零知识证明”&lt;br>
2.A可以和B比较自己持有的一个值的大小关系，而不泄露这个值给对方。——“百万富翁问题”&lt;br>
3.A可以给B发来的一段信息进行电子签名，而不知道信息的内容。——“盲签名”&lt;br>
4.A和B可以，在没有公正第三人的情况下，进行等概率胜负的博弈。——“电子博弈”&lt;br>
5.邮件服务，如果不考虑法律风险的话，是可以做到让服务器看不到你的邮件内容的。——PGP&lt;br>
6.破解4096位RSA是困难的。——即使用超算也如此。破解256位AES是困难的。——即使用量子计算也如此。破解OTP系统是困难（划掉）不可能的。——即使天顶星人来了也如此。&lt;br>
7.一个好的加密算法真的应该是公开的——它可以接受更多人的检验。 一个好的密码系统不一定是公开的——但是它应该按照可以公开除了密码之外的一切而依旧安全来设计。&lt;br>
8.可以实现这样的算法，使得班干部中的任何一个均可以以班委会的名义下达通知，且其他人，除了班长之外，都不知道具体下达者。&lt;br>
9.密码系统的安全性取决于最弱的一环……当年是谁说的“只用https保护登录界面就够了”的来着…你的token也会被盗&lt;br>
10.大多数密码系统都不是被正面攻破的…而是实现过程中出了差错…&lt;br>
11.以上内容，真的，真的，在大多数的密码学教材上都能找到——甚至还有用到的一些算法安全性的数学证明…&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%BF%83%E5%BE%97%E4%B8%8E%E7%BB%8F%E9%AA%8C/" term="心得与经验" label="心得与经验"/></entry><entry><title type="text">为博客打造在线编辑器</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/online-editor-for-markdown-blog/"/><id>http://blog.wss.cool/online-editor-for-markdown-blog/</id><updated>2019-10-18T08:47:32+08:00</updated><published>2019-06-23T21:12:32+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">使用vscode开源的编辑器，制作一个在线的博客编辑器。</summary><content type="html">&lt;h2 id="初衷">初衷&lt;/h2>
&lt;p>博客的内容时使用git管理的。在公司的电脑和家里的两台电脑上都有写博客的需求，那么在3个端的每次的pull和push就显得有一点麻烦。如果有一个基于浏览器访问的编辑器就舒服多了。&lt;/p>
&lt;h2 id="构思">构思&lt;/h2>
&lt;p>我的博客使用了hugo，它的内容是基于markdown或html的，所以如果把博客源文件放在服务器上，同时搭建一个可以编辑这些源文件的后台，就可以实现基于浏览器编辑博客了。&lt;/p>
&lt;p>vscode开源了他们的编辑器monaco-editor，可以使用它作为浏览器中的编辑器。&lt;/p>
&lt;p>在搭建一个后台程序来读取博客文章内容，配合若干接口实现保存、创建、删除、登录等功能即可。&lt;/p>
&lt;h2 id="editor项目">editor项目&lt;/h2>
&lt;p>此项目作为后台服务，需要提供的接口有：&lt;/p>
&lt;ol>
&lt;li>创建文章&lt;/li>
&lt;li>保存文章&lt;/li>
&lt;li>提交到git并push到仓库，并打包发布。&lt;/li>
&lt;/ol>
&lt;p>准备使用golang实现。需要用到的golang的api有：
……&lt;/p>
&lt;h3 id="制作image">制作image&lt;/h3>
&lt;pre>&lt;code>sudo docker image build -t myeditor .
&lt;/code>&lt;/pre>&lt;h3 id="启动容器">启动容器&lt;/h3>
&lt;pre>&lt;code>sudo docker container run -d --rm -p 3000:3000 -v &amp;quot;/home/wang/code/hugo/content/posts&amp;quot;:/app/blog myeditor
&lt;/code>&lt;/pre>&lt;h2 id="hugo项目中的docker">hugo项目中的docker&lt;/h2>
&lt;h3 id="生成image">生成image&lt;/h3>
&lt;pre>&lt;code>sudo docker image build -t site .
&lt;/code>&lt;/pre>&lt;h3 id="启动nginx容器">启动nginx容器&lt;/h3>
&lt;pre>&lt;code>sudo docker container run --rm --name myblog \
-p 80:80 -p 443:443 -d \
--volume &amp;quot;$PWD/public&amp;quot;:/usr/share/nginx/html site
&lt;/code>&lt;/pre>&lt;h3 id="打包hugo">打包hugo&lt;/h3>
&lt;pre>&lt;code>hugo --baseURL https://wowfriday.cn/
&lt;/code>&lt;/pre>&lt;pre>&lt;code>hugo serve --renderToDisk --baseURL https://wowfriday.cn/ --appendPort=false
hugo serve --renderToDisk --appendPort=false
&lt;/code>&lt;/pre></content><category scheme="http://blog.wss.cool/categories/%E6%8A%98%E8%85%BE/" term="折腾" label="折腾"/></entry><entry><title type="text">前端知识点</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-06-17T02:03:56+00:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">左耳朵耗子 css 选择器 优先级 伪类 伪元素 盒子 盒子模型 内容、内边距、边框、外边距、box-s……</summary><content type="html">&lt;p>&lt;a href="https://time.geekbang.org/column/article/12271">左耳朵耗子&lt;/a>&lt;/p>
&lt;h1 id="css">css&lt;/h1>
&lt;ul>
&lt;li>选择器
&lt;ul>
&lt;li>优先级&lt;/li>
&lt;li>伪类&lt;/li>
&lt;li>伪元素&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>盒子
&lt;ul>
&lt;li>盒子模型&lt;/li>
&lt;li>内容、内边距、边框、外边距、box-sizing&lt;/li>
&lt;li>背景颜色、背景图片、背景渐变色&lt;/li>
&lt;li>outline、box-shadow&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>外边距合并&lt;/li>
&lt;li>布局&lt;/li>
&lt;li>浮动和定位在内的传统布局方法&lt;/li>
&lt;li>弹性盒（flexbox）布局&lt;/li>
&lt;li>书写规范&lt;/li>
&lt;li>less&lt;/li>
&lt;/ul>
&lt;h1 id="js核心原理">JS核心原理&lt;/h1>
&lt;p>了解好的特性和各种坑。&lt;/p>
&lt;ul>
&lt;li>《JS语言精粹》&lt;/li>
&lt;li>《JS忍者秘籍》&lt;/li>
&lt;li>《Effective JS》的68条精华建议&lt;/li>
&lt;li>《深入浅出ES6》&lt;/li>
&lt;/ul>
&lt;h1 id="浏览器原理">浏览器原理&lt;/h1>
&lt;h2 id="how-browsers-works">How browsers works&lt;/h2>
&lt;p>原文的翻译&lt;a href="link1">How browsers works&lt;/a>&lt;/p>
&lt;h2 id="virtual">Virtual&lt;/h2>
&lt;hr>
&lt;h1 id="网络协议">网络协议&lt;/h1>
&lt;ul>
&lt;li>High Performance Browser Networking&lt;/li>
&lt;li>http2&lt;/li>
&lt;li>websocket&lt;/li>
&lt;/ul>
&lt;h1 id="前端性能">前端性能&lt;/h1>
&lt;h1 id="框架">框架&lt;/h1>
&lt;h1 id="实践">实践&lt;/h1>
&lt;ul>
&lt;li>跨域&lt;/li>
&lt;li>AJAX &amp;amp; Fetch &amp;amp; Axios&lt;/li>
&lt;/ul>
&lt;p>[link1][https://www.html5rocks.com/zh/tutorials/internals/howbrowserswork/]&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/></entry><entry><title type="text">Favicon Emoji</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/favicon-emoji.html"/><id>http://blog.wss.cool/favicon-emoji.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-06-12T17:58:07+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">使用emoji表情作为网站的favicon</summary><content type="html">&lt;p>先加一个这个&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">link&lt;/span> &lt;span class="na">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;icon&amp;#34;&lt;/span> &lt;span class="na">data-emoji&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;🛰&amp;#34;&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;image/png&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在来一段js&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">favicon&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">querySelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;link[rel=icon]&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">favicon&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">emoji&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">favicon&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getAttribute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;data-emoji&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">emoji&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">canvas&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createElement&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;canvas&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">canvas&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">height&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">64&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">canvas&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">width&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">64&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">ctx&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">canvas&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getContext&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;2d&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">ctx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">font&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;64px serif&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">ctx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fillText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">emoji&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">64&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">favicon&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">href&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">canvas&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toDataURL&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content></entry><entry><title type="text">Linux的简单使用</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/linux.html"/><id>http://blog.wss.cool/linux.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-06-11T23:02:30+08:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">过滤 grep 1 history | grep chmod chmod 给脚本运行的权限 1 2 chmod 777 proxy.sh chmod u+x deploy-hugo.sh 远程执行命令 1 ssh t &amp;#34;service 77kpi stop&amp;#34; t 使ssh……</summary><content type="html">&lt;h2 id="过滤-grep">过滤 grep&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="nb">history&lt;/span> &lt;span class="p">|&lt;/span> grep chmod
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="chmod">chmod&lt;/h2>
&lt;p>给脚本运行的权限&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">chmod &lt;span class="m">777&lt;/span> proxy.sh
chmod u+x deploy-hugo.sh
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="远程执行命令">远程执行命令&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">ssh t &lt;span class="s2">&amp;#34;service 77kpi stop&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>t 使ssh配置文件中的别名，会连接到服务器，在服务器上执行引号中的命令。&lt;/p>
&lt;h2 id="scp">scp&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">scp -i ~/.ssh/证书 /mnt/c/Users/aa/bb.txt root@6.6.6.6:~/bb.txt
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>-i 使用证书 本地文件名绝对路径 用户名@ip:绝对路径&lt;/p>
&lt;h2 id="压缩与解压文件夹">压缩与解压文件夹&lt;/h2>
&lt;p>压缩 &lt;code>public&lt;/code> 文件夹为 &lt;code>blog.tar.gz&lt;/code>&lt;/p>
&lt;pre>&lt;code>tar -zcvf blog.tar.gz public
&lt;/code>&lt;/pre>
&lt;p>解压 &lt;code>blog.tar.gz&lt;/code>的内容到 &lt;code>public&lt;/code> 文件夹内&lt;/p>
&lt;pre>&lt;code>tar -zxvf blog.tar.gz public
&lt;/code>&lt;/pre>
&lt;h2 id="安装二进制软件">安装二进制软件&lt;/h2>
&lt;ol>
&lt;li>下载tar.gz压缩包&lt;/li>
&lt;li>use the command &lt;code>tar vxzf hugo.tar.gz &lt;/code>&lt;/li>
&lt;li>move lib to &lt;code>/usr/local/bin&lt;/code>, command:&lt;code>mv ~/download/hugo /usr/local/bin/hugo&lt;/code>&lt;/li>
&lt;li>set path &lt;code>vim ~/.zshrc&lt;/code>&lt;/li>
&lt;li>add &lt;code>export PATH=/usr/local/bin/hugo:$PATH&lt;/code>&lt;/li>
&lt;li>&lt;code>source ~/.zshrc&lt;/code>&lt;/li>
&lt;/ol>
&lt;h2 id="复制">复制&lt;/h2>
&lt;pre>&lt;code>sudo cp -r public /usr/share/nginx/html/blog
&lt;/code>&lt;/pre>&lt;h2 id="端口被占用">端口被占用&lt;/h2>
&lt;p>lsof -i :80&lt;/p>
&lt;h2 id="解析域名">解析域名&lt;/h2>
&lt;pre>&lt;code>apt install dig
dig wss.cool
&lt;/code>&lt;/pre>&lt;h2 id="设置梯子-客户端">设置梯子-客户端&lt;/h2>
&lt;p>使用shadowsocks-libev，&lt;/p>
&lt;p>安装 &lt;code>sudo apt-get install shadowsocks-libev&lt;/code>&lt;/p>
&lt;p>配置文件在 &lt;code>/etc/shadowsocks-libev/config.json&lt;/code>&lt;/p>
&lt;p>修改后启动服务 &lt;code>systemctl start shadowsocks-livev-local@config&lt;/code>&lt;/p>
&lt;p>开机自启动 &lt;code>systemctl enable shadowsocks-livev-local@config&lt;/code>&lt;/p>
&lt;p>可以查看日志 &lt;code>journalctl -u shadowsocks-livev-local@config&lt;/code>&lt;/p>
&lt;h2 id="ubuntu-安装python3">ubuntu 安装python3&lt;/h2>
&lt;ol>
&lt;li>wget &lt;a href="http://www.python.org/ftp/python/3.7.4/Python-3.7.4.tgz">http://www.python.org/ftp/python/3.7.4/Python-3.7.4.tgz&lt;/a>&lt;/li>
&lt;li>tar -xvzf Python-3.7.4.tgz&lt;/li>
&lt;li>cd Python-3.7.4&lt;/li>
&lt;li>./configure --with-ssl&lt;/li>
&lt;li>make&lt;/li>
&lt;li>sudo make install&lt;/li>
&lt;/ol>
&lt;h2 id="修改root密码">修改root密码&lt;/h2>
&lt;p>使用普通给用户密码切换到root，在使用passwd修改密码&lt;/p>
&lt;pre>&lt;code>sudo su
passwd root
&lt;/code>&lt;/pre></content><category scheme="http://blog.wss.cool/categories/linux/" term="linux" label="linux"/><category scheme="http://blog.wss.cool/tags/linux/" term="linux" label="linux"/><category scheme="http://blog.wss.cool/tags/%E5%85%A5%E9%97%A8/" term="入门" label="入门"/></entry><entry><title type="text">docker</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/docker.html"/><id>http://blog.wss.cool/docker.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-06-06T01:47:46+00:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">ubuntu安装docker 使用清华源安装，地址，按照文档操作即可。 设置docker……</summary><content type="html">&lt;h2 id="ubuntu安装docker">ubuntu安装docker&lt;/h2>
&lt;p>使用清华源安装，&lt;a href="https://mirror.tuna.tsinghua.edu.cn/help/docker-ce/">地址&lt;/a>，按照文档操作即可。&lt;/p>
&lt;h2 id="设置docker源为阿里镜像">设置docker源为阿里镜像&lt;/h2>
&lt;pre>&lt;code>sudo mkdir -p /etc/docker
sudo tee /etc/docker/daemon.json &amp;lt;&amp;lt;-'EOF'
{
&amp;quot;registry-mirrors&amp;quot;: [&amp;quot;https://2sjdzxnu.mirror.aliyuncs.com&amp;quot;]
}
EOF
sudo systemctl daemon-reload
sudo systemctl restart docker
&lt;/code>&lt;/pre>&lt;h2 id="操作">操作&lt;/h2>
&lt;p>进入 container&lt;/p>
&lt;pre>&lt;code>docker exec -it container-name/id /bin/sh
&lt;/code>&lt;/pre>&lt;p>最后的 &lt;code>/bin/sh&lt;/code> 可以换成 &lt;code>/bin/bash&lt;/code>&lt;/p>
&lt;h2 id="tensorflow">tensorflow&lt;/h2>
&lt;p>系统ubuntu 18.04，显卡Gtx950，驱动390。&lt;/p>
&lt;ol>
&lt;li>安装&lt;code>nvidia-docker&lt;/code>和&lt;code>nvidia-container-runtime&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey &lt;span class="p">|&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> sudo apt-key add -
&lt;span class="nv">distribution&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>. /etc/os-release&lt;span class="p">;&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$ID$VERSION_ID&lt;/span>&lt;span class="k">)&lt;/span>
curl -s -L https://nvidia.github.io/nvidia-docker/&lt;span class="nv">$distribution&lt;/span>/nvidia-docker.list &lt;span class="p">|&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> sudo tee /etc/apt/sources.list.d/nvidia-docker.list
sudo apt-get update
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">sudo apt-get install -y nvidia-docker2&lt;span class="o">=&lt;/span>2.0.3+docker18.09.1-1 nvidia-container-runtime&lt;span class="o">=&lt;/span>2.0.0+docker18.08.1-1
sudo pkill -SIGHUP dockerd
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>测试一下&lt;/p>
&lt;p>&lt;code>docker run --runtime=nvidia --rm nvidia/cuda:9.0-base nvidia-smi&lt;/code>&lt;/p>
&lt;p>&lt;a href="https://github.com/NVIDIA/nvidia-docker/issues/578">如果报错&lt;code>docker: Error response from daemon: Unknown runtime specified nvidia.&lt;/code>&lt;/a>&lt;/p>
&lt;p>解决方法：&lt;/p>
&lt;blockquote>
&lt;p>Systemd drop-in file
sudo mkdir -p /etc/systemd/system/docker.service.d
sudo tee /etc/systemd/system/docker.service.d/override.conf &amp;lt;&amp;lt;EOF
[Service]
ExecStart=
ExecStart=/usr/bin/dockerd --host=fd:// --add-runtime=nvidia=/usr/bin/nvidia-container-runtime
EOF
sudo systemctl daemon-reload
sudo systemctl restart docker
Daemon configuration file
sudo tee /etc/docker/daemon.json &amp;lt;&amp;lt;EOF
{
&amp;quot;runtimes&amp;quot;: {
&amp;quot;nvidia&amp;quot;: {
&amp;quot;path&amp;quot;: &amp;quot;/usr/bin/nvidia-container-runtime&amp;quot;,
&amp;quot;runtimeArgs&amp;quot;: []
}
}
}
EOF
sudo pkill -SIGHUP dockerd
再次测试。&lt;/p>
&lt;/blockquote>
&lt;ol start="2">
&lt;li>安装tensorflow的docker，&lt;a href="https://github.com/NVIDIA/nvidia-docker/issues/931">由于驱动旧，不能使用最新的tensorflow版本&lt;/a>，就先用1.11.0版本。还要用python3，所以安装的docker image是这个&lt;code>sudo docker pull tensorflow/tensorflow:1.11.0-gpu-py3&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">sudo docker run -p 8888:8888 --volume &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$PWD&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>:/notebooks --runtime&lt;span class="o">=&lt;/span>nvidia -it tensorflow/tensorflow:1.11.0-gpu-py3
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>启动后会直接打开一个jupyter，可以先做一下gpu的测试。
这样就算是搭号GPU环境了。&lt;/p>
&lt;p>但是这个环境中没有安装opencv-python或者opencv-contrib-python，也没有～/.keras/modelsinception_v3_weights_tf_dim_ordering_tf_kernels_notop.h5文件。&lt;/p>
&lt;p>这里可能需要自己再打包一个image，可以参考这个&lt;a href="https://blog.csdn.net/chenming_hnu/article/details/70184543">链接&lt;/a>&lt;br>
还可以试一下用映射解决&lt;/p>
&lt;p>&lt;code>--volume&lt;/code>为“映射”，当前目录（$PWD）中的文件，会反映容器中个的&lt;code>/notebooks&lt;/code>目录下。&lt;br>
tensorflow这个image会启动一个jupyter，其中就可以访问到&lt;code>$PWD&lt;/code>目录。&lt;/p>
&lt;h2 id="腾讯云的docker仓库">腾讯云的docker仓库&lt;/h2>
&lt;p>账号w..........&lt;br>
密码w...1......&lt;/p>
&lt;p>&lt;code>docker image build -t site . &lt;/code>&lt;/p>
&lt;p>方案1：使用&lt;code>hugo&lt;/code>命令手动将也构建到public目录，然后启动docker是映射目录&lt;br>
&lt;code>sudo docker container run --rm --name myblog -p 80:80 -p 443:443 --volume &amp;quot;$PWD/public&amp;quot;:/usr/share/nginx/html site&lt;/code>&lt;/p>
&lt;p>方案2：使用&lt;code>hugo server -D&lt;/code>命令运行测试服务器，修改nginx的default.conf文件，加入反向代理配置。&lt;/p>
&lt;p>登录腾讯云 docker registry&lt;/p>
&lt;p>&lt;code>sudo docker login --username=wangshushuo hub.tencentyun.com&lt;/code>&lt;br>
登录 registry 的用户名是您 Tencent Hub 的用户名，密码是您开通 Tencent Hub 用户时设置的密码。&lt;/p>
&lt;p>从 registry 拉取镜像&lt;/p>
&lt;p>&lt;code>sudo docker pull hub.tencentyun.com/wangshushuo/site:[tag]&lt;/code>&lt;/p>
&lt;p>其中 [tag] 请根据您的镜像版本信息进行填写。&lt;/p>
&lt;p>将镜像推送到 registry&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">sudo docker tag &lt;span class="o">[&lt;/span>ImageId&lt;span class="o">]&lt;/span> hub.tencentyun.com/wangshushuo/site:&lt;span class="o">[&lt;/span>tag&lt;span class="o">]&lt;/span>
sudo docker login --username&lt;span class="o">=&lt;/span>wangshushuo hub.tencentyun.com
sudo docker tag site hub.tencentyun.com/wangshushuo/site
sudo docker push hub.tencentyun.com/wangshushuo/site
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="加速image文件上传到云服务器">加速image文件上传到云服务器。&lt;/h2>
&lt;p>云服务器的快带只有1m，我猜测上传速度会很慢，一个image文件有七八十兆，可能要上传很久。&lt;/p>
&lt;p>腾讯云有免费的docker仓库，可以上传image文件。&lt;/p>
&lt;p>再从腾讯云服务器pull image文件，就很快。&lt;/p>
&lt;h2 id="将wordpress的nginx配置改掉了">将wordpress的nginx配置改掉了&lt;/h2>
&lt;p>docker开启在8080端口，修改了原来wp的配置为：&lt;/p>
&lt;pre>&lt;code class="language-conf" data-lang="conf">server {
listen 80;
listen 443 ssl http2;
ssl_certificate /usr/local/nginx/conf/ssl/1_wowfriday.cn_bundle.crt;
ssl_certificate_key /usr/local/nginx/conf/ssl/2_wowfriday.cn.key;
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
ssl_prefer_server_ciphers on;
ssl_session_timeout 10m;
ssl_session_cache builtin:1000 shared:SSL:10m;
ssl_buffer_size 1400;
add_header Strict-Transport-Security max-age=15768000;
ssl_stapling on;
ssl_stapling_verify on;
server_name wowfrday.cn;
access_log /data/wwwlogs/wowfrday.cn_nginx.log combined;
index index.html index.htm index.php;
root /data/wwwroot/wowfrday.cn/;
if ($ssl_protocol = &amp;quot;&amp;quot;) { return 301 https://$host$request_uri; }
location /{
proxy_pass https://localhost:8080;
}
}
&lt;/code>&lt;/pre>&lt;h2 id="phpmyadmin">phpmyadmin&lt;/h2>
&lt;pre>&lt;code>docker run --name myphpadmin -d -e PMA_ARBITRARY=1 -p 8080:80 phpmyadmin/phpmyadmin
&lt;/code>&lt;/pre></content><category scheme="http://blog.wss.cool/categories/%E5%B7%A5%E5%85%B7/" term="工具" label="工具"/></entry><entry><title type="text">GraphQl介绍</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/graphql/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/graphql/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-05-10T06:58:48+00:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">什么是GraphQL？ 官网的介绍：一种用于API的查询语言。 通常说到API都是说调用……</summary><content type="html">&lt;h2 id="什么是graphql">什么是GraphQL？&lt;/h2>
&lt;p>官网的介绍：一种用于API的查询语言。&lt;/p>
&lt;p>通常说到API都是说调用，那查询API是什么操作呢？&lt;/p>
&lt;p>大家都知道SQL，数据库的查询语言。其实gql和sql就有些相似。&lt;/p>
&lt;p>比如sql是这样的语句：&lt;figure class="wp-block-image">&lt;/p>
&lt;p>&lt;img src="http://blog.wss.cool/uploads/2019/05/image-1.png" alt="" class="wp-image-356" /> &lt;/figure>&lt;/p>
&lt;p>gql也是个语句，它可以写成这样：&lt;figure class="wp-block-image">&lt;/p>
&lt;p>&lt;img src="http://blog.wss.cool/uploads/2019/05/image-2.png" alt="" class="wp-image-357" /> &lt;/figure>&lt;/p>
&lt;p>他们都是一种查询语言，用一定的语法来描述你想要的数据。&lt;/p>
&lt;p>上面的gql会返回一个json：&lt;figure class="wp-block-image">&lt;/p>
&lt;p>&lt;img src="http://blog.wss.cool/uploads/2019/05/image-3.png" alt="" class="wp-image-358" /> &lt;/figure>&lt;/p>
&lt;p>这个查询语句就是GraphQL（gql）。&lt;/p>
&lt;h2 id="graphql能干嘛">GraphQL能干嘛？&lt;/h2>
&lt;p>知道了它是什么，还得了解它是做什么事的。&lt;/p>
&lt;p>举个例子：&lt;/p>
&lt;p>首先，我们要做一个需求，是一个这样的页面，里面有若干数据。&lt;figure class="wp-block-image">&lt;/p>
&lt;p>&lt;img src="http://blog.wss.cool/uploads/2019/05/image-4-1024x212.png" alt="" class="wp-image-359" /> &lt;/figure>&lt;/p>
&lt;p>这些数据由一个API接口返回：&lt;figure class="wp-block-image">&lt;/p>
&lt;p>&lt;img src="http://blog.wss.cool/uploads/2019/05/image-5.png" alt="" class="wp-image-360" /> &lt;/figure>&lt;/p>
&lt;p>后来需求变了，有些数据不需要显示了：&lt;figure class="wp-block-image">&lt;/p>
&lt;p>&lt;img src="http://blog.wss.cool/uploads/2019/05/image-6.png" alt="" class="wp-image-361" /> &lt;/figure>&lt;/p>
&lt;p>那么API接口也可能做对应的变化。&lt;figure class="wp-block-image">&lt;/p>
&lt;p>&lt;img src="http://blog.wss.cool/uploads/2019/05/image-7.png" alt="" class="wp-image-362" /> &lt;/figure>&lt;/p>
&lt;p>这次是减字段，也可能是加字段。还可能要考虑兼容旧版本（APP或灰度），不改原来的API，通过加API来做新需求。&lt;/p>
&lt;p>这些修改不仅消耗时间和精力。长时间的积累，也会在前后端，出现很多冗余的字段，冗余的API。给项目积累了一些混乱和风险。&lt;/p>
&lt;p>这时候GraphQL就能派上用场了。看下面的视频。上半部分是gql语句，下半部分是查询到的结果。&lt;figure class="wp-block-image">&lt;/p>
&lt;p>&lt;img src="http://blog.wss.cool/uploads/2019/05/屏幕录制-2019-05-07-下午11.36.17.mp4" alt="" class="wp-image-363" /> &lt;/figure>&lt;/p>
&lt;p>我们看到，对于hero对象，gql可以只查询一个name字段，也可以查询3个字段。&lt;/p>
&lt;p>如果用gql来查询API接口，是不是就能避免上面提到的“冗余的字段，冗余的API。混乱和风险。”&lt;/p>
&lt;p>这里大致介绍了GraphQL能做的事。&lt;/p>
&lt;h2 id="实现">实现&lt;/h2>
&lt;p>知道了GraphQL是什么和能做什么事，接下来该介绍怎么实现这个技术方案了。&lt;/p>
&lt;p>我们知道sql查询的是数据库，我们运行一个sql语句需要在数据库服务器的环境。同样的运行一个gql也需要一个gql的服务器。&lt;/p>
&lt;p>实现gql服务器前，需要先了解ji个gql的概念：schema和类型。&lt;/p>
&lt;h3 id="gql的类型">gql的类型&lt;/h3>
&lt;p>GraphQl是通过&lt;strong>类型&lt;/strong>系统来定义数据和行为。这些&lt;strong>类型&lt;/strong>就需要通过schema语句定义的。先看一段schema语句：&lt;figure class="wp-block-image">&lt;/p>
&lt;p>&lt;img src="http://blog.wss.cool/uploads/2019/05/image-8-1024x570.png" alt="" class="wp-image-364" /> &lt;/figure>&lt;/p>
&lt;p>使用type声明一个类型，图中有3个类型，其中&lt;strong>Query&lt;/strong>和&lt;strong>Mutation&lt;/strong>是原始类型，分别表示&lt;strong>查询&lt;/strong>和&lt;strong>变更&lt;/strong>，这两个类型内部就是定义查询和变更的行为。&lt;/p>
&lt;p>&lt;strong>Book&lt;/strong>类型是我们的数据类型，是自定义类型。&lt;/p>
&lt;p>schema只是定义了数据类型和行为类型。有了类型，我们还需要根据类型执行不同的任务。执行这些任务的角色就叫解析器。&lt;/p>
&lt;h3 id="resolver解析器">Resolver解析器&lt;/h3>
&lt;p>解析器是行为类型的实现，它需要与数据库对接，来查询数据库。比如上面定义的Query和Mutation类型的实现：&lt;figure class="wp-block-image">&lt;/p>
&lt;p>&lt;img src="http://blog.wss.cool/uploads/2019/05/image-9-1024x644.png" alt="" class="wp-image-365" /> &lt;/figure>&lt;/p>
&lt;p>这个解析器是通过MongoDB实现的：&lt;figure class="wp-block-image">&lt;/p>
&lt;p>&lt;img src="http://blog.wss.cool/uploads/2019/05/image-11-1024x302.png" alt="" class="wp-image-367" /> &lt;/figure>&lt;/p>
&lt;p>所以具体的getAll和getById实际上都是执行的mongoDB的查询。&lt;/p>
&lt;p>服务器上主要做这两件事，通过schema定义类型，和实现具体的解析器。&lt;/p>
&lt;p>server的代码在这里&lt;a href="https://gitee.com/wss1942/appllo-serve.git">https://gitee.com/wss1942/appllo-serve.git&lt;/a>&lt;/p>
&lt;p>这个server的实现用到了mongoDB数据库，需要自己安装，我是按照菜鸟的教程做的，很简单。&lt;/p>
&lt;h2 id="客户端网页">客户端（网页）&lt;/h2>
&lt;p>代码在这里&lt;a href="https://gitee.com/wss1942/apollo-client.git">https://gitee.com/wss1942/apollo-client.git&lt;/a>&lt;/p>
&lt;p>实现一个gql的客户端主要需要2部分，网络层和存储层。&lt;figure class="wp-block-image">&lt;/p>
&lt;p>&lt;img src="http://blog.wss.cool/uploads/2019/05/image-12.png" alt="" class="wp-image-368" /> &lt;/figure>&lt;/p>
&lt;p>用了client就可以执行gql语句进行查询了：&lt;figure class="wp-block-image">&lt;/p>
&lt;p>&lt;img src="http://blog.wss.cool/uploads/2019/05/image-13.png" alt="" class="wp-image-369" /> &lt;/figure>&lt;/p>
&lt;p>还有变更：&lt;figure class="wp-block-image">&lt;/p>
&lt;p>&lt;img src="http://blog.wss.cool/uploads/2019/05/image-14-1024x726.png" alt="" class="wp-image-370" /> &lt;/figure>&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="http://blog.wss.cool/tags/api/" term="api" label="api"/></entry><entry><title type="text">如何拥有技术领导力？</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/lead.html"/><id>http://blog.wss.cool/lead.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-05-06T02:38:58+00:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">左耳听风专栏 第一，吃透基础技术，基础技术是各种上层技术的共同的基础。 计算机技术太多，……</summary><content type="html">&lt;p>&lt;a href="">左耳听风专栏&lt;/a>&lt;/p>
&lt;h2 id="第一吃透基础技术基础技术是各种上层技术的共同的基础">第一，吃透基础技术，基础技术是各种上层技术的共同的基础。&lt;/h2>
&lt;p>计算机技术太多，但仔细分析你会发现，知识表现形式多，而基础技术并不多。学好基础技术，能让你一通百通，更快地使用各种新技术，从而可以更轻松地与时代同步。&lt;/p>
&lt;p>基础技术主要是两部分：编程和系统。&lt;/p>
&lt;h3 id="编程部分">编程部分：&lt;/h3>
&lt;p>**C语言：**更接近底层，能更好地理解程序的运行。&lt;/p>
&lt;p>**编程范式：**培养抽象思维，提高编程效率，提高程序的结构合理性、可读性和可维护性，降低冗余度。学习编程范式：多了解各种程序设计语言的功能特性。&lt;/p>
&lt;p>**算法和数据结构：**任何有技术含量的软件中一定有高级的算法和数据结构。比如epoll中使用红黑树，数据库索引使用B+树。业务中的各种排序、过滤、查找也用到算法。&lt;/p>
&lt;h3 id="系统部分">系统部分：&lt;/h3>
&lt;p>&lt;strong>网络基础：&lt;/strong>《TCP/IP详解》，学习基础的网络协议，可以为我们的高纬度分布式架构中的一些技术问题提供很多的技术方案。比如TCP的滑动窗口限流，完全可以用于分布式服务中的限流方案。&lt;/p>
&lt;p>**数据库原理：**文件系统适合存放连续的信息，比如图片，文章。如果保存很短的信息也保存文件的画，会浪费大量的磁盘空间，而且无法方便地查询。数据库更适合存放短的数据。且能方便的查询。流行的两类数据库管理系统：SQL和NoSQL。前者B+数，强一致性，后者弱一致性，高存取效率，基于哈希表和其他技术。&lt;/p>
&lt;p>学习数据库原理，能了解数据库访问性调优的要点。以及保证并发情况下的数据操作的原子性。&lt;/p>
&lt;p>**分布式技术架构：**数据库和应用程序服务器需要横向扩展，才能提供做够高的性能。为了做到这一点，要学习分布式技术架构，包括负载均衡、DNS解析、多子域名、无状态应用层、缓存层、数据库分片、容错和恢复机制、Paxos、Map/Reduce操作、分布式SQL数据库一致性等知识点。&lt;/p>
&lt;p>学习分布式技术架构的有效途径是参与到分布式项目的开发中去，并阅读相关论文。&lt;/p>
&lt;h2 id="第二提高学习能力就是能够很快地学习新技术又能在关键技术上深入的能力">第二，提高学习能力。就是能够很快地学习新技术，又能在关键技术上深入的能力。&lt;/h2>
&lt;p>只有掌握了上述基础原理之上，才能拥有好的学习能力。&lt;/p>
&lt;h2 id="第三坚持做正确的事">第三，坚持做正确的事。&lt;/h2>
&lt;p>做正确的事，比用正确的方法做事更重要。因为这样才始终会向目的地靠拢。&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%BF%83%E5%BE%97%E4%B8%8E%E7%BB%8F%E9%AA%8C/" term="心得与经验" label="心得与经验"/></entry><entry><title type="text">网站的兼容性</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/%E7%BD%91%E7%AB%99%E7%9A%84%E5%85%BC%E5%AE%B9%E6%80%A7/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/%E7%BD%91%E7%AB%99%E7%9A%84%E5%85%BC%E5%AE%B9%E6%80%A7/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-04-03T02:41:47+00:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">适配方案 两种方案做适配不同屏幕：一种是淘宝的按照尺寸缩放，一种是bootstrap的……</summary><content type="html">&lt;h2 id="适配方案">适配方案&lt;/h2>
&lt;p>两种方案做适配不同屏幕：一种是淘宝的按照尺寸缩放，一种是bootstrap的响应式布局。&lt;/p>
&lt;p>bootstrap有一个react-bootstrap的项目，如果需要支持ie9，需要引入bootstrap3的css。因为4不支持ie9，有些特性使用不了。&lt;/p>
&lt;h2 id="回流与重绘-reflow--repaint">回流与重绘 (Reflow &amp;amp; Repaint)&lt;/h2>
&lt;p>ie（9-11）中使用absolute和fixed，滚动式抖动。在整个文档中间某些位置设置了&lt;br>
absolute和fixed，会导致页面抖动，查看性能记录，会有大量时间在【画图】，将absolute和fixed的元素移动到文档的尾部，也就是他们的后面没有其他元素，就能解决抖动的问题。&lt;/p>
&lt;p>利用 &lt;code>ReactDOM.createPortal&lt;/code>将absolute\fixed的元素放置到整个文档最后&lt;/p>
&lt;p>利用modernizr检测浏览器不支持的功能\样式。&lt;/p>
&lt;h2 id="ie9的某些样式与标准写法不同">IE9的某些样式与标准写法不同&lt;/h2>
&lt;p>文字两段对齐:&lt;/p>
&lt;pre class="wp-block-code">&lt;code>text-align: justify;
text-justify: distribute; //IE9
-ms-text-align-last: justify;
text-align-last: justify;&lt;/code>&lt;/pre>
&lt;p>文字竖排：&lt;/p>
&lt;pre class="wp-block-code">&lt;code>writing-mode: vertical-rl;
-ms-writing-mode: tb-rl;//IE9&lt;/code>&lt;/pre>
&lt;p>居中写法（top/left有bug）：&lt;/p>
&lt;pre class="wp-block-code">&lt;code>position: absolute;
bottom: 50%;
right: 50%;
transform: translate(50%, 50%);&lt;/code>&lt;/pre>&lt;blockquote>
&lt;/blockquote></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/></entry><entry><title type="text">自定义事件</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/dom/%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/dom/%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-03-27T05:19:04+00:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">两种的自定义事件的用法的介绍，addEventListener监听事件，event和customevent创建事件，dispatchEvent发送事件。</summary><content type="html">&lt;p>&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/Events/Creating_and_triggering_events">创建和触发events&lt;/a>&lt;/p>
&lt;h1 id="监听">监听&lt;/h1>
&lt;p>通常将事件监听绑定在&lt;code>document&lt;/code>上即可，也可以绑定在其他DOM元素。&lt;/p>
&lt;p>监听&lt;code>build&lt;/code>事件。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;build&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// do something
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">},&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="传数据的事件">传数据的事件&lt;/h1>
&lt;p>使用&lt;code>CustomEvent&lt;/code>创建事件。并且只能用&lt;code>detail&lt;/code>字段名来存放数据。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">var&lt;/span> &lt;span class="nx">event&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">CustomEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;build&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="s1">&amp;#39;detail&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">anydata&lt;/span> &lt;span class="p">});&lt;/span>
&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dispatchEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="不传数据的事件">不传数据的事件&lt;/h1>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="c1">// 创建事件
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">event&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Event&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;build&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dispatchEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/Events/Creating_and_triggering_events">MDN&lt;/a>上还有冒泡等其他内容&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="http://blog.wss.cool/categories/dom/" term="DOM" label="DOM"/></entry><entry><title type="text">CSS命名</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/css/css%E5%91%BD%E5%90%8D/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/css/css%E5%91%BD%E5%90%8D/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-03-27T05:08:59+00:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">使用less和css module。在A和B两个less文件中分别写如下的样式。 .textfillsContainer{ background-color:red; .textfills{……</summary><content type="html">&lt;p>使用less和css module。在A和B两个less文件中分别写如下的样式。&lt;/p>
&lt;pre>&lt;code>.textfillsContainer{
background-color:red;
.textfills{
background-color:red;
}
}
&lt;/code>&lt;/pre>&lt;p>A文件：
&lt;img src="http://blog.wss.cool/images/css_class_name/image-9.png" alt="A文件" title="A文件">
B文件：
&lt;img src="http://blog.wss.cool/images/css_class_name/image-8.png" alt="B文件" title="B文件">&lt;/p>
&lt;p>在编译打包后的文件中观察：&lt;/p>
&lt;p>A文件打包出来的css代码：
&lt;img src="http://blog.wss.cool/images/css_class_name/image-6.png" alt="B文件" title="A文件的实际css代码">&lt;/p>
&lt;p>B文件打包出来的css代码：
&lt;img src="http://blog.wss.cool/images/css_class_name/image-7.png" alt="B文件" title="B文件的实际css代码">&lt;/p>
&lt;p>可以看到，即使是相同的class名，由于less或者css module的作用，会视文件为一个模块，在打包时，根据模块对class名做混淆哈希。&lt;/p>
&lt;p>所以只要不在一个文件（模块）中使用相同class名就能避免命名冲突。&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="http://blog.wss.cool/categories/css/" term="CSS" label="CSS"/></entry><entry><title type="text">浏览器缓存</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/browser-cache.html"/><id>http://blog.wss.cool/browser-cache.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-03-14T02:23:03+00:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">浏览器的缓存机制的学习笔记。Browser caching mechanism</summary><content type="html">&lt;p>看了&lt;a href="https://juejin.im/entry/5ad86c16f265da505a77dca4">这篇文章&lt;/a>后记录下自己的理解。&lt;/p>
&lt;p>缓存有2步：强制缓存和协商缓存。就是通过一些手段，设置强制缓存，让文件保存在本地硬盘，当强制缓存失效后，再通过与服务器协商看是否更新缓存文件。&lt;/p>
&lt;h2 id="强制缓存">强制缓存&lt;/h2>
&lt;p>强制缓存会把文件缓存在本地，当缓存未过期时访问网站，浏览器会直接使用缓存的资源。&lt;/p>
&lt;p>控制强制缓存的字段分别是Expires和Cache-Control，其中Cache-Control优先级比Expires高。&lt;/p>
&lt;p>Expires是过时的方式，不推荐使用。推荐使用Cache-Control来控制。&lt;/p>
&lt;p>Cache-Control用的多的值是如下几个：&lt;/p>
&lt;ul>
&lt;li>public：（强制缓存）所有内容都将被缓存（客户端和代理服务器都可缓存）&lt;/li>
&lt;li>private：&lt;br>
（强制缓存） 所有内容只有客户端可以缓存，Cache-Control的默认取值&lt;/li>
&lt;li>no-cache：（协商缓存）客户端缓存内容，但是是否使用缓存则需要经过协商缓存来验证决定&lt;/li>
&lt;li>no-store：（决定不使用缓存）所有内容都不会被缓存，即不使用强制缓存，也不使用协商缓存&lt;/li>
&lt;li>max-age=xxx (xxx is numeric)：缓存内容将在xxx秒后失效&lt;/li>
&lt;/ul>
&lt;h2 id="协商缓存">协商缓存&lt;/h2>
&lt;p>协商缓存就是强制缓存失效后，浏览器携带&lt;strong>缓存标识&lt;/strong>向服务器发起请求，由服务器根据&lt;strong>缓存标识&lt;/strong>决定是否使用缓存的过程。&lt;/p>
&lt;p>&lt;strong>缓存标识&lt;/strong>是响应报文的HTTP头中和请求结果一起返回给浏览器的。&lt;/p>
&lt;p>&lt;strong>缓存标识&lt;/strong>有2组：&lt;/p>
&lt;ul>
&lt;li>【Last-Modified / If-Modified-Since 】&lt;/li>
&lt;li>【Etag / If-None-Match】&lt;/li>
&lt;/ul>
&lt;p>【Etag / If-None-Match】优先级较高。&lt;/p>
&lt;h3 id="last-modified--if-modified-since">Last-Modified / If-Modified-Since&lt;/h3>
&lt;p>Last-Modified是服务器响应请求时，返回该资源文件在服务器最后被修改的时间。&lt;/p>
&lt;p>If-Modified-Since则是客户端再次发起该请求时，携带上次请求返回的Last-Modified值。服务器通过比较这个值判断缓存是否失效。&lt;/p>
&lt;p>协商缓存生效，返回304，浏览器使用缓存。&lt;/p>
&lt;p>协商缓存失效，返回200和请求结果 。&lt;/p>
&lt;h3 id="etag--if-none-match">Etag / If-None-Match&lt;/h3>
&lt;p>Etag是服务器响应请求时，返回当前资源文件的一个唯一标识（由服务器生成）。&lt;/p>
&lt;p>If-None-Match是客户端再次发起该请求时，携带上次请求返回的唯一标识Etag值。服务器通过比较这个值判断缓存是否失效。&lt;/p>
&lt;p>协商缓存生效，返回304，浏览器使用缓存。&lt;/p>
&lt;p>协商缓存失效，返回200和请求结果 。&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/></entry><entry><title type="text">加载script标签</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/js-script-tag/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/js-script-tag/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-03-13T02:03:07+00:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">script标签书写位置和方式如何影响其加载</summary><content type="html">&lt;p>将script标签写在2个地方——head中和body中——进行观察：&lt;/p>
&lt;p>head中，他们大概是同时开始加载，运行后，body中的才开始加载运行。也及时body中的，会等待head中的加载完成运行完毕后，才开始加载。也就是页面会阻塞。&lt;/p>
&lt;pre>&lt;code>&amp;lt;figure class=&amp;quot;wp-block-image&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;/uploads/2019/03/image-4-1024x409.png&amp;quot; alt=&amp;quot;&amp;quot; class=&amp;quot;wp-image-296&amp;quot; /&amp;gt;
&amp;lt;/figure&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>还有可能在head中编写一段js代码，它会在head中再添加几个script标签。就会出现下面的情况。&lt;/p>
&lt;pre>&lt;code>&amp;lt;figure class=&amp;quot;wp-block-image&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;/uploads/2019/03/image-5-1024x437.png&amp;quot; alt=&amp;quot;&amp;quot; class=&amp;quot;wp-image-297&amp;quot; /&amp;gt;
&amp;lt;/figure&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>第一部分是head中写死的，第二部分是JS添加到head中的，第三部分是写在body中的。&lt;/p>
&lt;p>第二部分会开始加载，然后body中的不会等待第二部分加载完成，也就是JS添加的script不会阻塞页面。&lt;/p>
&lt;p>当body中的script依赖了JS添加的script，就有可能出现找不到依赖报错的情况。&lt;/p>
&lt;h2 id="defer-async">&lt;strong>defer async&lt;/strong>&lt;/h2>
&lt;p>**async：**异步加载资源，且加载完JS资源立即执行，并不会按顺序，谁快谁先上， 网页不会失去响应。&lt;/p>
&lt;p>**defer：**异步加载资源，在DOM渲染后之后再按顺序执行JS。&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/></entry><entry><title type="text">字体bug</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/%E5%AD%97%E4%BD%93/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/%E5%AD%97%E4%BD%93/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-03-05T05:16:17+00:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">一个bug——页面中的字体无缘无故的而变成了宋体，而且有区别，用electron打包……</summary><content type="html">&lt;p>一个bug——页面中的字体无缘无故的而变成了宋体，而且有区别，用electron打包的页面是宋体，用chrome浏览器打开的是雅黑或者果方。&lt;/p>
&lt;p>由于span被设置了一个fontFamily只为雅黑，而苹果系统没有雅黑字体，所以它没有找父级元素继承字体，而是选择了浏览器的环境变量（设置）。&lt;/p>
&lt;p>在mac的chrome的设置中，看字体。有标准、serif、sans-serif、宽度固定四中设置。在修改了 sans-serif 以后，原本只在electron中出现的宋体，也出现在了chrome中，由此推断，是这个设置的锅了。&lt;/p>
&lt;p>electron也是一个浏览器环境，有一些配置项，发现 webPreferences 有如下配置：&lt;/p>
&lt;figure class="wp-block-image">
&lt;img src="http://blog.wss.cool/uploads/2019/03/image-1.png" alt="" class="wp-image-281" />
&lt;/figure>
&lt;p>此处设置为微软雅黑后，mac下表现就和chrome一致了。&lt;/p></content><category scheme="http://blog.wss.cool/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="http://blog.wss.cool/tags/bug%E8%BF%BD%E8%B8%AA/" term="bug追踪" label="bug追踪"/></entry><entry><title type="text">Cheerio</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/cheerio.html"/><id>http://blog.wss.cool/cheerio.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-01-25T01:20:58+00:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">1.解析表格table Summa tillgodoräknade poäng: 10,5 如果只是一段tr……</summary><content type="html">&lt;h2 id="1解析表格table">1.解析表格table&lt;/h2>
&lt;pre class="wp-block-code">&lt;code>&lt;tr class="listingTrailer">
&lt;td>
&lt;/td>&lt;td colspan="2">Summa tillgodoräknade poäng:
&lt;/td>&lt;td class="credits">10,5
&lt;/td>&lt;td>
&lt;/td>&lt;/tr>&lt;/code>&lt;/pre>
&lt;p>如果只是一段tr，cheerio不会识别，需要是一个完整的table才可以，而且table外面好像还有包一层div之类的东西，cheerio才能解析。&lt;/p>
&lt;h2 id="2遍历">2.遍历&lt;/h2>
&lt;p>使用each方法可以return false跳出遍历：&lt;/p>
&lt;blockquote class="wp-block-quote">
&lt;p>
To break out of the &lt;code>each&lt;/code> loop early, return with &lt;code>false&lt;/code>.
&lt;/p>
&lt;p>&lt;cite>&lt;a href="https://cheerio.js.org/">&lt;a href="https://cheerio.js.org/">https://cheerio.js.org/&lt;/a>&lt;/a>&lt;/cite>&lt;/p>
&lt;/blockquote>
&lt;h3 id="21-使用this">2.1. 使用this&lt;/h3>
&lt;p>使用this的话，要使用function函数，不能使用箭头函数。function函数的this指向tr。&lt;/p>
&lt;pre class="wp-block-code">&lt;code>$('tbody tr').each(function(i, elem) {
const id = $(this).data();
console.log(id);
});&lt;/code>&lt;/pre>
&lt;h3 id="22-使用箭头函数就别用this">2.2. 使用箭头函数就别用this&lt;/h3>
&lt;p>因为this不会指向tr，所以要用回调函数的第二个参数。&lt;/p>
&lt;pre class="wp-block-code">&lt;code>$('tbody tr').each((i, elem)=>{
const id = $(elem).data();
console.log(id);
});&lt;/code>&lt;/pre>&lt;blockquote>
&lt;/blockquote></content><category scheme="http://blog.wss.cool/categories/%E5%90%8E%E7%AB%AF/" term="后端" label="后端"/></entry><entry><title type="text">React 与 Typescript</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/typescript-react.html"/><id>http://blog.wss.cool/typescript-react.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-01-20T14:15:47+00:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">input的事件类型 需要注意两点。 事件类型可能有两种 ChangeEvent 对应 event.target FormEvent 对应 event.currentTarget 泛型对应元素，可……</summary><content type="html">&lt;h2 id="input的事件类型">input的事件类型&lt;/h2>
&lt;p>需要注意两点。&lt;/p>
&lt;ol>
&lt;li>事件类型可能有两种&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;code>ChangeEvent&lt;/code> 对应 &lt;code>event.target&lt;/code>&lt;/li>
&lt;li>&lt;code>FormEvent&lt;/code> 对应 &lt;code>event.currentTarget&lt;/code>&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>泛型对应元素，可能是&lt;code>HTMLInputElement&lt;/code> 或 &lt;code>HTMLSelectElement&lt;/code> 等。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="kr">const&lt;/span> &lt;span class="nx">handleSearch&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>: &lt;span class="kt">React.ChangeEvent&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">HTMLInputElement&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">target&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">setKeywords&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">target&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">props&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onUpdateKeyword&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">target&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="class组件的类型">class组件的类型&lt;/h2>
&lt;p>class组件需要定义props和state的类型：&lt;/p>
&lt;pre>&lt;code>interface IProps {
addTodo: (input: string) =&amp;gt; void;
}
interface IState {
input: string;
}
class AddTodo extends React.Component&amp;lt;IProps, IState&amp;gt;{}
&lt;/code>&lt;/pre>&lt;h2 id="创建项目">创建项目&lt;/h2>
&lt;p>&lt;a href="https://github.com/Microsoft/TypeScript-React-Starter#typescript-react-starter">creact-react-app&lt;/a>可以直接创建 typescript 项目。&lt;/p>
&lt;pre>&lt;code>create-react-app my-app --scripts-version=react-scripts-ts
&lt;/code>&lt;/pre>&lt;h2 id="修改配置">修改配置&lt;/h2>
&lt;p>把 tslint.json 修改为这样，能舒服一点：&lt;/p>
&lt;pre>&lt;code>{
&amp;quot;extends&amp;quot;: [
&amp;quot;tslint:recommended&amp;quot;,
&amp;quot;tslint-react&amp;quot;,
&amp;quot;tslint-config-prettier&amp;quot;
],
&amp;quot;defaultSeverity&amp;quot;: &amp;quot;warning&amp;quot;,
&amp;quot;linterOptions&amp;quot;: {
&amp;quot;exclude&amp;quot;: [
&amp;quot;config/**/*.js&amp;quot;,
&amp;quot;node_modules/**/*.ts&amp;quot;,
&amp;quot;coverage/lcov-report/*.js&amp;quot;
]
},
&amp;quot;rules&amp;quot;: {
&amp;quot;object-literal-sort-keys&amp;quot;: false,
&amp;quot;no-console&amp;quot;: false
}
}
&lt;/code>&lt;/pre>&lt;p>在package.json的script中加入这条，可以让tslint自动修复问题：&lt;/p>
&lt;pre>&lt;code>&amp;quot;lint&amp;quot;: &amp;quot;tslint --fix -c ./tslint.json 'src/**/*{.ts,.tsx}'&amp;quot;
&lt;/code>&lt;/pre>&lt;p>千万要注意，你的代码将被修改，所以要&lt;a href="https://stackoverflow.com/a/44850320/6021280">注意以下事项&lt;/a>⚠️：&lt;/p>
&lt;ul>
&lt;li>Commit the changes you have made to your code&lt;/li>
&lt;li>Run TSLint with the &lt;code>--fix&lt;/code> flag like above&lt;/li>
&lt;li>Quickly review the changes TSLint has made&lt;/li>
&lt;li>Make a new commit with these changes, or simply amend them to your previous commit&lt;/li>
&lt;/ul>
&lt;p>&lt;code>.d.ts&lt;/code> 文件是使用js编写的api才用的。&lt;/p></content><category scheme="http://blog.wss.cool/categories/react/" term="React" label="React"/></entry><entry><title type="text">命令行发送email</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/mac-ubuntu-send-email.html"/><id>http://blog.wss.cool/mac-ubuntu-send-email.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2019-01-04T04:49:13+00:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">python发送邮件</summary><content type="html">&lt;p>&lt;a href="http://www.ruanyifeng.com/blog/2017/06/smtp-protocol.html">如何验证 Email 地址：SMTP 协议入门教程&lt;/a>
&lt;a href="http://fred.itxfd.com/2017/08/08/ubuntu-mail-%E7%94%A8-qq-%E9%82%AE%E7%AE%B1%E5%8F%91%E9%82%AE%E4%BB%B6/">ubuntu mail 用 qq 邮箱发邮件&lt;/a>&lt;/p>
&lt;p>我先尝试在我的mac上发送，先是找到了sendmail相关的介绍，然后找到了mac自带的postfix类似于sendmail，于是研究postfix，将近一天的时间我经历了各种配置与失败。&lt;/p>
&lt;p>晚上下班的路上，看了阮一峰的smtp介绍，了解到smtp服务器的身份验证是为了防止垃圾邮件，为了控制垃圾邮件，许多邮件服务器会用自己的方法验证邮件地址，下面就是其中的一些方法。&lt;/p>
&lt;ul>
&lt;li>example.com 是否有 MX 记录&lt;/li>
&lt;li>example.com 是否可以 Ping 通&lt;/li>
&lt;li>是否存在 &lt;a href="mailto:postmaster@example.com">postmaster@example.com&lt;/a> 这个邮箱&lt;/li>
&lt;li>发起连接的 IP 地址是否在黑名单之中&lt;/li>
&lt;li>IP 地址的反向 DNS 解析，是否指向一个邮件服务器&lt;/li>
&lt;/ul>
&lt;p>qq邮箱也许用了其中某些方法，使用mac链接smtp的话，135应该都是不能通过的，所以导致了在mac上mail失败。具体什么原因导致的不能成功就不深究了。&lt;/p>
&lt;p>由于得知了上面的信息，于是尝试用我的云服务器来实验一下，因为云服务器可以ping，有MX记录。正好还发现了一个ubuntu发邮件的文章。步骤如下：（以下主要是某网友的博文）&lt;/p>
&lt;p>先用 &lt;code>which mail&lt;/code> 看看有没有 &lt;code>mail&lt;/code>。&lt;/p>
&lt;p>如果没有的话，可以安装如下软件：&lt;/p>
&lt;pre>&lt;code>sudo apt-get install -y heirloom-mailx
&lt;/code>&lt;/pre>&lt;p>有了 &lt;code>mail&lt;/code> 后，直接用命令行测试&lt;/p>
&lt;pre>&lt;code>echo &amp;quot;mail body&amp;quot; | \
mail -v \
-r 6666666@qq.com \
-s &amp;quot;subject&amp;quot; \
-S form=6666666@qq.com \
-S smtp-auth-password=密码或授权码 \
-S smtp-auth-user=6666666@qq.com \
-S smtp-auth=login \
-S smtp-use-starttls \
-S smtp=smtps://smtp.qq.com:465 \
-S ssl-verify=ignore \
6666666@qq.com
&lt;/code>&lt;/pre>&lt;p>在配置文件里面配置账号，首先找到相应的配置文件：&lt;/p>
&lt;pre>&lt;code>strings `which mail` | grep '\.rc'
sudo vim /etc/s-nail.rc﻿
&lt;/code>&lt;/pre>&lt;p>在文件尾部添加：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">set&lt;/span> &lt;span class="nx">from&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">6666666&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="nx">qq&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">com&lt;/span>
&lt;span class="nx">set&lt;/span> &lt;span class="nx">smtp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">auth&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">password&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">密码或授权码&lt;/span>
&lt;span class="nx">set&lt;/span> &lt;span class="nx">smtp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">auth&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">6666666&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="nx">qq&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">com&lt;/span>
&lt;span class="nx">set&lt;/span> &lt;span class="nx">smtp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">auth&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">login&lt;/span>
&lt;span class="nx">set&lt;/span> &lt;span class="nx">smtp&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">smtps&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="c1">//smtp.qq.com:465
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">set&lt;/span> &lt;span class="nx">ssl&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">verify&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nx">ignore&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后测试：&lt;/p>
&lt;pre>&lt;code>echo &amp;quot;mail body&amp;quot; | mail -s &amp;quot;subject1&amp;quot; 6666666@qq.com
&lt;/code>&lt;/pre>&lt;p>至此，我的qq邮箱可以成功接收到邮件。这件事总算有了结果。&lt;/p>
&lt;p>发送邮件虽然能成功，但是我的命令行会打印一个警告&lt;/p>
&lt;pre>&lt;code>mail: /usr/local/openssl/lib/libssl.so.1.0.0: no version information available (required by mail)
&lt;/code>&lt;/pre>&lt;p>经查，及尝试。将警告的2个文件移除即可，也可以改名字：&lt;/p>
&lt;pre>&lt;code>mv /usr/local/openssl/lib/libssl.so.1.0.0 /usr/local/openssl/lib/libssl.so.1.0.0_bk
&lt;/code>&lt;/pre>&lt;p>之后再发邮件就一切顺利了。&lt;/p>
&lt;hr>
&lt;p>事情有了新的进展：2019年1月7日。&lt;/p>
&lt;p>我又想，为什么mac的邮件app可以发送而命令行却不行吗？应该都是用的SMTP方式来发送邮件的。那么可能还是我配置SMTP参数的问题。&lt;/p>
&lt;p>经过搜索了解到，mac的命令行mail是一个旧版的，新版的叫heirloom-mailx或者s-nail。&lt;/p>
&lt;p>我通过Homebrew安装了s-nail，将上面测试代码的mail换成s-nail是可以发送邮件的，但是同样的写s-nail.rc后，却不能发送邮件。而且看了man s-nail以后还是不会写抄送参数的配置。&lt;/p>
&lt;p>上面的这个过程又消耗了我一天的时间，直接使用s-nail的人似乎很少，没有查到一个能运行的例子，这一天就在各种搜索、配置、测试中度过了。后来又想到安装mail的新本的二进制文件来更新mail似乎也是个办法。但是想到还要重新配置还是很麻烦。就放弃了。&lt;/p>
&lt;p>今天早晨坐地铁时想到，shell不行，那就试试python吧。到公司后，在stackoverflow上找到了一个例子，修改smtp地址，账号密码，加上抄送字段。整个过程差不多半个多小时，顺利的发出了邮件🥳🤙🕺💃🎉🎊&lt;/p>
&lt;p>幸甚至哉，歌以咏志。&lt;/p>
&lt;p>真的惊喜，我真是太蠢了，傻了吧唧地折腾了4天的，最后用python半小时就解决了。&lt;/p>
&lt;p>最后奉上python发送邮件的代码：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="ch">#! /usr/local/bin/python&lt;/span>
&lt;span class="n">SMTPserver&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;smtp.qq.com:465&amp;#39;&lt;/span>
&lt;span class="n">sender&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;666666@qq.com&amp;#39;&lt;/span>
&lt;span class="n">cc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;888888@163.com&amp;#34;&lt;/span>
&lt;span class="n">to&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;666666@qq.com&amp;#34;&lt;/span>
&lt;span class="n">USERNAME&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;666666@qq.com&amp;#34;&lt;/span>
&lt;span class="n">PASSWORD&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;PASSWORD&amp;#34;&lt;/span>
&lt;span class="c1"># typical values for text_subtype are plain, html, xml&lt;/span>
&lt;span class="n">text_subtype&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;plain&amp;#39;&lt;/span>
&lt;span class="n">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>&lt;span class="s2">Test message
&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="n">subject&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Sent from Python&amp;#34;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">sys&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">re&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">smtplib&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">SMTP_SSL&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">SMTP&lt;/span> &lt;span class="c1"># this invokes the secure SMTP protocol (port 465, uses SSL)&lt;/span>
&lt;span class="c1"># from smtplib import SMTP # use this for standard SMTP protocol (port 25, no encryption)&lt;/span>
&lt;span class="c1"># old version&lt;/span>
&lt;span class="c1"># from email.MIMEText import MIMEText&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">email.mime.text&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">MIMEText&lt;/span>
&lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">rcpt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;,&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">to&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">msg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">MIMEText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">content&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">text_subtype&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">msg&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Subject&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">subject&lt;/span>
&lt;span class="n">msg&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;From&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sender&lt;/span> &lt;span class="c1"># some SMTP servers will do this automatically, not all&lt;/span>
&lt;span class="n">msg&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Cc&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cc&lt;/span>
&lt;span class="n">conn&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SMTP&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SMTPserver&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">conn&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_debuglevel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">False&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">conn&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">login&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">USERNAME&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PASSWORD&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">conn&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sendmail&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sender&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rcpt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">msg&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">as_string&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="k">finally&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">conn&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">quit&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">except&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">sys&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">exit&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;mail failed; &lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="s2">&amp;#34;CUSTOM_ERROR&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="c1"># give an error message&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="http://blog.wss.cool/categories/%E6%8A%98%E8%85%BE/" term="折腾" label="折腾"/></entry><entry><title type="text">dva取消异步任务</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/dva-saga-cancel-effect.html"/><id>http://blog.wss.cool/dva-saga-cancel-effect.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2018-12-31T09:54:21+00:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">先声明一个axios的网络请求函数login🤪： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 //service.js import……</summary><content type="html">&lt;p>先声明一个axios的网络请求函数login🤪：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="c1">//service.js
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">import&lt;/span> &lt;span class="nx">axios&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;axios&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">login&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">params&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">cancelToken&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">await&lt;/span> &lt;span class="nx">axios&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">post&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">ApiServer&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">/auth/user`&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">params&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">cancelToken&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">response&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">axios&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">isCancel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Request canceled&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">error&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">message&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这段代码可以处理3中情况的异常：&lt;/p>
&lt;ul>
&lt;li>axios.interceptors.response中throw Error&lt;/li>
&lt;li>http status code !== 200时的promise reject，不使用async时是在catch中处理&lt;/li>
&lt;li>axios请求被代码cancel掉&lt;/li>
&lt;/ul>
&lt;p>有了网络请求，可以写saga函数了：&lt;/p>
&lt;p>如果是在dva中，saga函数会被写在model中的effects对象中：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">CancelToken&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">axios&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CancelToken&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">...&lt;/span>
&lt;span class="nx">effects&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="o">*&lt;/span>&lt;span class="nx">startLogin&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">payload&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">put&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">call&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">race&lt;/span> &lt;span class="p">})&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">source&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">CancelToken&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">source&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">timeout&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">yield&lt;/span> &lt;span class="nx">race&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">data&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">login&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">username&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">payload&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">username&lt;/span>&lt;span class="p">,},&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">cancelToken&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">source&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">token&lt;/span>&lt;span class="p">,}),&lt;/span>
&lt;span class="nx">timeout&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">delay&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1000&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">put&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;log&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">payload&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;success&amp;#39;&lt;/span> &lt;span class="p">});&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">source&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">cancel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;登录超时&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">put&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;log&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">payload&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;timeout&amp;#39;&lt;/span> &lt;span class="p">});&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>当然startLogin函数也可以写成generator函数作为普通saga，在不用dva的情况下使用。&lt;/p>
&lt;p>这段代码调用了上面👆的login函数进行网络请求，其中race是saga提供的一种effect，是一种竞赛模式，race下面的多个任务，只有一个胜利者，即第一个完成的任务，其他任务会被取消。&lt;/p>
&lt;p>所以这段代码就是用race实现的网络请求任务的超时处理。&lt;/p>
&lt;p>但是网络请求任务只是一个saga任务一个异步任务，异步任务被取消了，但是网络请求并没有被取消，所以取消网络请求需要单独处理。&lt;/p>
&lt;p>对于axios这个库来说，就是使用CancelToken这个api了。👆上面两段代码就是一个完整的CancelToken使用的例子。&lt;/p>
&lt;p>上面说了什么呢？上文使用两段代码，介绍了一种——在使用dva或者redux-saga时——取消effect（取消异步任务、cancel effect、处理异步任务超时、处理网路请求超时、取消axios请求）的写法。下面介绍另一种写法。&lt;/p>
&lt;p>除了用race以外，还可以用take Effect来写。比如：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js"> &lt;span class="nx">namespace&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;products&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">effects&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="o">*&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="p">(){},&lt;/span>
&lt;span class="o">*&lt;/span>&lt;span class="nx">stop&lt;/span>&lt;span class="p">(){},&lt;/span>
&lt;span class="nx">watchLogin&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="kd">function&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="p">({&lt;/span> &lt;span class="nx">take&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">put&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">call&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">cancel&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fork&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">cancelled&lt;/span> &lt;span class="p">})&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">take&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;start&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">timerTask&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">yield&lt;/span> &lt;span class="nx">fork&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">timer&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">bgSyncTask&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">yield&lt;/span> &lt;span class="nx">fork&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">bgSync&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">take&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;stop&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">cancel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">bgSyncTask&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">cancel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">timerTask&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kd">function&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="nx">bgSync&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">yield&lt;/span> &lt;span class="nx">call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">delay&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">1000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">put&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;stop&amp;#39;&lt;/span> &lt;span class="p">})&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">finally&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">yield&lt;/span> &lt;span class="nx">cancelled&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">put&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;log&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">payload&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;fetch🛑&amp;#39;&lt;/span> &lt;span class="p">})&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="nx">timer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">time&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">put&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;log&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">payload&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">})&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">delay&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span> &lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;watcher&amp;#39;&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>多说一句，这段代码还是在dva中的写法，它也可以被轻易的改成redux-saga的写法。&lt;/p>
&lt;p>watchLogin是一个saga，它被dva自动run运行，它的第一个take在等待一个type为start的action被dispatch或者put，take(‘start’)被触发后，2个非阻塞任务运行，同时等待take(‘stop’)被触发。&lt;/p>
&lt;p>action stop触发take(‘stop’)，下面2行代码执行，取消了2个非阻塞任务🤪。&lt;/p>
&lt;p>我们看到fork的2个任务都是generator函数，也就是saga，它们可以写在dva的model的effects下，被disptach或者put发送action调用触发，如果这样的话就无法通过代码将其cancel。&lt;/p>
&lt;p>所以为了实现取消异步任务，可以像这样写在一个effect中，通过take帮助，实现cancel。&lt;/p>
&lt;p>其实dva中每个model的effects被看作一个大saga，会被当作sagaMiddleware.run()方法的参数，而effects下面的每个方法，都会被fork成一个子任务。&lt;/p>
&lt;p>综上所述，现在我们可以处理一种问题了——在使用dva或者redux-saga时——取消effect、取消异步任务、cancel effect、处理异步任务超时、处理网路请求超时、取消axios请求。&lt;/p></content><category scheme="http://blog.wss.cool/categories/react/" term="React" label="React"/></entry><entry><title type="text">如何处理大量bug</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86%E5%A4%A7%E9%87%8Fbug.html"/><id>http://blog.wss.cool/%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86%E5%A4%A7%E9%87%8Fbug.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2018-12-21T16:21:39+00:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">处理bug分三步：确认位置及原因，解决方案，实现代码。 bug数量很多时，领导的心里会……</summary><content type="html">&lt;p>处理bug分三步：确认位置及原因，解决方案，实现代码。&lt;/p>
&lt;p>bug数量很多时，领导的心里会有压力，所以先解决容易改的，让数量降下来，领导的压力小了就可以不加班了。如果你改的数量多还可能认为你比别人有些。&lt;/p>
&lt;h2 id="处理问题的1-2-3升级策略">处理问题的“1-2-3”升级策略&lt;/h2>
&lt;p>遇到问题的时候，&lt;/p>
&lt;ol>
&lt;li>自己一个人处理1小时内没有思路，请找他人小范围讨论&lt;/li>
&lt;li>如果与他人2小时内没有结果，请上升到团队范围&lt;/li>
&lt;li>如果在团队范围3小时内没有思路&lt;/li>
&lt;li>我们就需要借助外部力量了。比如：找产品改需求，找公司外的技术高手做咨询，外包&lt;/li>
&lt;/ol></content><category scheme="http://blog.wss.cool/categories/%E5%BF%83%E5%BE%97%E4%B8%8E%E7%BB%8F%E9%AA%8C/" term="心得与经验" label="心得与经验"/></entry><entry><title type="text">Redux Saga</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/react/redux-saga/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/react/redux-saga/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2018-12-02T11:04:48+00:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">redux-saga中使用fetch 1 2 3 const response = yield call(fetch, &amp;#39;/consult/v1/headCarousel&amp;#39;); const data = yield response.json(); yield put({ type: &amp;#39;save&amp;#39;, payload: data }); 为了对……</summary><content type="html">&lt;h2 id="redux-saga中使用fetch">redux-saga中使用fetch&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">yield&lt;/span> &lt;span class="nx">call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fetch&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;/consult/v1/headCarousel&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">yield&lt;/span> &lt;span class="nx">response&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">put&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;save&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">payload&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">data&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>为了对它有一个感性的认识，首先看一下 &lt;a rel="noreferrer noopener" href="http://link.zhihu.com/?target=http%3A//leonshi.com/redux-saga-in-chinese/docs/api/index.html%23effect-" target="_blank">中文文档&lt;/a> 把dome写出来，跑一下。另外还需要了解 &lt;a href="http://es6.ruanyifeng.com/#docs/generator">ES6的Generator&lt;/a> 。&lt;/p>
&lt;p>跑完了文档中的dome之后，在来看一个例子。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="c1">// 类 thunk 的 worker “进程”
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="nx">load&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">put&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">BEGIN_LOAD_DATA&lt;/span> &lt;span class="p">});&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">yield&lt;/span> &lt;span class="nx">call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fetch&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">UrlMap&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">loadData&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">put&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">LOAD_DATA_SUCCESS&lt;/span> &lt;span class="p">,&lt;/span>&lt;span class="nx">payload&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">result&lt;/span> &lt;span class="p">});&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">put&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">LOAD_DATA_ERROR&lt;/span> &lt;span class="p">});&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="nx">saga&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 创建一个监听“进程”
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">yield&lt;/span> &lt;span class="nx">fork&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">watch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">CLICK_LOAD_BUTTON&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">load&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里有几个 redux-saga 的概念需要再了解一下。&lt;/p>
&lt;h3 id="1put">1、put&lt;/h3>
&lt;p>作用和 redux 中的 dispatch 相同。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="k">yield&lt;/span> &lt;span class="nx">put&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;CLICK_BTN&amp;#39;&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2select">2、select&lt;/h3>
&lt;p>作用和 redux thunk 中的 getState 相同。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">yield&lt;/span> &lt;span class="nx">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">state&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">state&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="3take">3、take&lt;/h3>
&lt;p>等待 redux dispatch 匹配某个 pattern 的 action 。&lt;/p>
&lt;p>在这个例子中，先等待一个按钮点击的 action ，然后执行按钮点击的 saga：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">take&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;CLICK_BUTTON&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">fork&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">clickButtonSaga&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>再举一个利用 take 实现 logMiddleware 的例子：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">action&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">yield&lt;/span> &lt;span class="nx">take&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;*&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">newState&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">yield&lt;/span> &lt;span class="nx">select&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;received action:&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">action&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;state become:&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">newState&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这种监听一个 action ，然后执行相应任务的方式，在 redux-saga 中非常常用，因此 redux-saga 提供了一个辅助 Effect —— takeEvery ，让 watch/worker 的代码更加清晰。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="k">yield&lt;/span> &lt;span class="nx">takeEvery&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;*&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="nx">logger&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">action&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">newState&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">yield&lt;/span> &lt;span class="nx">select&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;received action:&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">action&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;state become:&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">newState&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="4阻塞调用和无阻塞调用">4、阻塞调用和无阻塞调用&lt;/h3>
&lt;p>redux-saga 可以用 fork 和 call 来调用子 saga ，其中 fork 是无阻塞型调用，call 是阻塞型调用。&lt;/p>
&lt;h3 id="41forknbsp">4.1、fork &lt;/h3>
&lt;p>下面写一个倒数的例子，当接收到 BEGIN_COUNT 的 action，则开始倒数，而接收到 STOP_COUNT 的 action， 则停止倒数。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">function&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="nx">count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">number&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">currentNum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">number&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">currentNum&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">currentNum&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">delay&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="nx">countSaga&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">payload&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="nx">number&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">yield&lt;/span> &lt;span class="nx">take&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">BEGIN_COUNT&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">countTaskId&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">yield&lt;/span> &lt;span class="nx">fork&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">count&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">number&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">take&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">STOP_COUNT&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">cancel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">countTaskId&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>因为使用 fork 开启的任务，所以不需要等 count 这个saga执行完， STOP_COUNT 任务已经被监听了，当 count 执行的过程中，如果STOP_COUNT任务被触发，会执行下一行代码，也就是取消 fork 开启的那个任务，中断 count 的执行。&lt;/p>
&lt;h3 id="42call">4.2、call&lt;/h3>
&lt;p>下面这个例子：&lt;/p>
&lt;pre>&lt;code>const project = yield call(fetch, { url: UrlMap.fetchProject });
const members = yield call(fetchMembers, project.id)
&lt;/code>&lt;/pre>&lt;p>有阻塞地调用 saga 或者返回 promise 的函数。可以理解为 fetch 执行完有了返回结果了，才会执行下一行。&lt;/p>
&lt;h2 id="effects">Effects&lt;/h2>
&lt;p>上面提到的几个 redux-saga 的概念都是 Effect 。Effect 是一个 javascript 对象，里面包含描述副作用的信息，可以通过 yield 传达给 sagaMiddleware 执行&lt;/p>
&lt;p>在 redux-saga 世界里，所有的 Effect 都必须被 yield 才会执行，所以有人写了 &lt;a href="http://link.zhihu.com/?target=https%3A//github.com/pke/eslint-plugin-redux-saga" target="_blank" rel="noreferrer noopener">eslint-plugin-redux-saga&lt;/a> 来检查是否每个 Effect 都被 yield。并且原则上来说，所有的 yield 后面也只能跟Effect，以保证代码的易测性。&lt;/p>
&lt;p>例如：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="k">yield&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">UrlMap&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fetchData&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>应该用 call Effect ：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="k">yield&lt;/span> &lt;span class="nx">call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fetch&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">UrlMap&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fetchData&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>从而可以使代码可测：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">assert&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">deepEqual&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">iterator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">next&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fetch&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">UrlMap&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fetchData&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>关于各个 Effect 的具体介绍，文档已经写得很详细了，这里只做简要介绍。&lt;/p>
&lt;h2 id="传统异步中间件简介">传统异步中间件简介&lt;/h2>
&lt;p>在介绍 redux-saga 优缺点之前，这里先简要介绍传统的 redux 异步中间件，以便和 redux-saga 做比较。对传统异步中间件已经充分了解的读者，可以直接跳到 “redux-saga 优缺点分析” 进行阅读。&lt;/p>
&lt;h3 id="1-fetch-middleware">1. fetch-middleware&lt;/h3>
&lt;p>使用redux的前端技术团队或个人，大多数都有一套自己 fetch-middleware，一来可以封装异步请求的业务逻辑，避免重复代码，二来可以写一些公共的异步请求逻辑，比如异常接口数据采集、接口缓存、接口处理等等。例如 &lt;a href="http://link.zhihu.com/?target=https%3A//github.com/jasonslyvia/redux-composable-fetch" target="_blank" rel="noreferrer noopener">redux-composable-fetch&lt;/a>，&lt;a href="http://link.zhihu.com/?target=https%3A//github.com/agraboso/redux-api-middleware" target="_blank" rel="noreferrer noopener">redux-api-middleware&lt;/a>。&lt;/p>
&lt;p>在当前 redux 社区中，fetch-middleware 封装结果一般如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">function&lt;/span> &lt;span class="nx">loadData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">url&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;/api.json&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">types&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">LOADING_ACTION_TYPE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">SUCCESS_ACTION_TYPE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">FAILURE_ACTION_TYPE&lt;/span>&lt;span class="p">],&lt;/span>
&lt;span class="nx">params&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>值得一提的是，大多数 fetch-middleware 都会用到一个小技巧 —— 把最终处理好的 promise 返回出来，以便在 thunk-middleware 中复用，并组织不同异步过程的先后逻辑。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">function&lt;/span> &lt;span class="nx">loadDetailThunk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">dispatch&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 先请求到 loadData 的结果，再请求 loadDetail
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">dispatch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">loadData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">)).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">result&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">detailId&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">result&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">dispatch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">loadDetail&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">detailId&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这个技巧在 redux-saga 中也同样有效。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">function&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="nx">loadDetailSaga&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">yield&lt;/span> &lt;span class="nx">put&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">loadData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">detailId&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">result&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">put&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">loadDetail&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">detailId&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="redux-saga-优缺点分析">redux-saga 优缺点分析&lt;/h2>
&lt;h3 id="缺点">缺点&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>redux-saga 不强迫我们捕获异常，这往往会造成异常发生时难以发现原因。因此，一个良好的习惯是，相信任何一个过程都有可能发生异常。如果出现异常但没有被捕获，redux-saga 的错误栈会给你一种一脸懵逼的感觉。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>generator 的调试环境比较糟糕，babel 的 source-map 经常错位，经常要手动加 debugger 来调试。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>你团队中使用的其它异步中间件，或许难以和 redux-saga 搭配良好。或许需要花费一些代价，用 redux-saga 来重构一部分中间件。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="优点">优点&lt;/h3>
&lt;ul>
&lt;li>保持 action 的简单纯粹，aciton 不再像原来那样五花八门，让人眼花缭乱。task 的模式使代码更加清晰。&lt;/li>
&lt;li>redux-saga 提供了丰富的 Effects，以及 sagas 的机制（所有的 saga 都可以被中断），在处理复杂的异步问题上十分趁手。如果你的应用属于写操作密集型或者业务逻辑复杂，快让 redux-saga 来拯救你。&lt;/li>
&lt;li>扩展性强。&lt;/li>
&lt;li>声明式的 Effects，使代码更易测试，&lt;a href="http://link.zhihu.com/?target=http%3A//leonshi.com/redux-saga-in-chinese/docs/basics/DeclarativeEffects.html" target="_blank" rel="noreferrer noopener">查看详情&lt;/a>。&lt;/li>
&lt;/ul>
&lt;h2 id="利用-redux-saga-写-redux-中间件">利用 redux-saga 写 redux 中间件&lt;/h2>
&lt;p>用 redux-saga 来写中间件，可谓事半功倍。这里举一个轮询中间件的例子。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kd">function&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="nx">pollingSaga&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fetchAction&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">defaultInterval&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">mockInterval&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">fetchAction&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">yield&lt;/span> &lt;span class="nx">put&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fetchAction&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">interval&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mockInterval&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">result&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">interval&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">delay&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">interval&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">1000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">delay&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">defaultInterval&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">1000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="nx">beginPolling&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">pollingAction&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">pollingUrl&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">defaultInterval&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">300&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">mockInterval&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">types&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">params&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">pollingAction&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">types&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;pollingAction pattern error&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">pollingAction&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="nb">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;pollingAction types[1] is null&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">fetchAction&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">url&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">pollingUrl&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">types&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">params&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">mockInterval&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">defaultInterval&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">pollingTaskId&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">yield&lt;/span> &lt;span class="nx">fork&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">pollingSaga&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fetchAction&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">pattern&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">action&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">action&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">type&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">types&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">action&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stopPolling&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">take&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">pattern&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">cancel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">pollingTaskId&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="nx">pollingSagaMiddleware&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">yield&lt;/span> &lt;span class="nx">takeEvery&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">action&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">pollingUrl&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">types&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">action&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">pollingUrl&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">types&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">types&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="nx">beginPolling&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;pre class="wp-block-verse">本文来自知乎“&lt;a href="https://zhuanlan.zhihu.com/p/23012870">redux-saga 实践总结&lt;/a>”，作者“&lt;a rel="noreferrer noopener" target="_blank" href="https://www.zhihu.com/people/huang-jason">Jason&lt;/a>”，&lt;a href="https://zhuanlan.zhihu.com/p/23012870">原文链接&lt;/a>&lt;/pre></content><category scheme="http://blog.wss.cool/categories/react/" term="React" label="React"/><category scheme="http://blog.wss.cool/tags/api/" term="api" label="api"/></entry><entry><title type="text">Redux 概要</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/react/redux-%E6%A6%82%E8%A6%81/"/><id>http://blog.wss.cool/posts/%E5%89%8D%E7%AB%AF/react/redux-%E6%A6%82%E8%A6%81/</id><updated>2023-02-27T17:06:48+00:00</updated><published>2018-11-28T14:24:04+00:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">参考：Redux 入门教程 基本概念 store：保存数据的容器，整个应用通常只有一个st……</summary><content type="html">&lt;p id="page-title" class="asset-name entry-title">
参考：&lt;a href="http://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_one_basic_usages.html">Redux 入门教程&lt;/a>
&lt;/p>
&lt;h2 id="基本概念">基本概念&lt;/h2>
&lt;p>store：保存数据的容器，整个应用通常只有一个store。&lt;/p>
&lt;p>state：store在某时点的一个快照，一个state对应一个view。&lt;/p>
&lt;p>action：定义一个用户对view的操作。&lt;/p>
&lt;p>可以暂时这样理解：&lt;br>
&lt;img class="aligncenter size-medium wp-image-81" src="http://58.87.109.73/wpBlog/wp-content/uploads/2018/11/屏幕快照-2018-11-28-下午10.24.34-300x184.png" alt="" width="300" height="184" />&lt;br>
store生成一个快照state，state对应一个view，view发出action来通知store变化，使store变化而生成一个新的state，新的state又对应新的view。&lt;/p>
&lt;p>ActionCreator：通常action只是一个对象，且只有type属性使必须的。我们知道action代表着view的操作，所以action可能有很多个又被经常使用，所以用一个函数来生成各种action是比较合理的操作，这个函数就叫做ActionCreator。&lt;/p>
&lt;pre>&lt;code class="language-javascript">const ADD_TODO = '添加 TODO';
function addTodo(text) {
return {
type: ADD_TODO,
text
}
}
const action = addTodo('Learn Redux');&lt;/code>&lt;/pre>
&lt;h2 id="redux的api">Redux的API&lt;/h2>
&lt;p>生成store、获得state&lt;/p>
&lt;pre>&lt;code class="language-javascript">import { createStore } from 'redux';
const store = createStore(fn);
const state = store.getState();&lt;/code>&lt;/pre>
&lt;p>view通过store.dispatch() 发出action：&lt;/p>
&lt;pre>&lt;code class="language-javascript">store.dispatch({
type: 'ADD_TODO',
payload: 'Learn Redux'
});
// store.dispatch(addTodo('learn Redux'));&lt;/code>&lt;/pre>
&lt;p>store在接收到action时，会根据action生成一个新的state，那么如何生成新的state，这个计算过程怎么定义呢？&lt;/p>
&lt;h3 id="reducer">Reducer&lt;/h3>
&lt;p>Reducer是一个函数，它定义store在接收到action时state如何发生变化。action只描述发生了什么，而reducer描述state如何变化。这个函数是这样的：&lt;/p>
&lt;pre>&lt;code class="language-javascript">const reducer = function (state, action) {
// ...
return new_state;
};
// 或
const defaultState = 0;
const reducer = (state = defaultState, action) =&amp;gt; {
switch (action.type) {
case 'ADD':
return state + action.payload;
default:
return state;
}
};
const state = reducer(1, {
type: 'ADD',
payload: 2
});
&lt;/code>&lt;/pre>
&lt;p>实际应用中，Reducer 函数不用像上面这样手动调用，store.dispatch方法会触发 Reducer 的自动执行。为此，Store 需要知道 Reducer 函数，做法就是在生成 Store 的时候，将 Reducer 传入createStore方法：&lt;/p>
&lt;pre>&lt;code class="language-javascript">import { createStore } from 'redux';
const store = createStore(reducer);&lt;/code>&lt;/pre>
&lt;p>⚠️ Reducer必须是纯函数：只要是同样的输入，必定得到同样的输出，必须遵守以下一些约束：&lt;/p>
&lt;ul>
&lt;li>不得改写参数&lt;/li>
&lt;li>不能调用系统 I/O 的API&lt;/li>
&lt;li>不能调用&lt;code>Date.now()&lt;/code>或者&lt;code>Math.random()&lt;/code>等不纯的方法，因为每次会得到不一样的结果&lt;/li>
&lt;/ul>
&lt;p>⚠️ Reducer 函数里面不能改变 State，必须返回一个全新的对象：&lt;/p>
&lt;pre>&lt;code class="language-javascript">return { ...state, ...newState };
// return [...state, newItem];&lt;/code>&lt;/pre>
&lt;p>现在我们知道了Ruducer是处理state变化过程的，那么state变化以后又会发生什么呢？上面说过，通常一个state对应一个view，也就是说state改变后view也要随之变化，但是view怎么知道自己应该改变呢？&lt;/p>
&lt;h3 id="storesubscribe">store.subscribe()&lt;/h3>
&lt;p>Store 允许使用&lt;code>store.subscribe&lt;/code>方法设置监听函数，一旦 State 发生变化，就自动执行这个监听函数，view也就可以通过它来更新。比如React的setState()。&lt;/p>
&lt;h3 id="工作流程大概可以这样理解">工作流程大概可以这样理解：&lt;/h3>
&lt;div style="width: 640px;" class="wp-video">
&lt;!--[if lt IE 9]>&lt;![endif]-->&lt;video class="wp-video-shortcode" id="video-78-1" width="640" height="436" preload="metadata" controls="controls">&lt;source type="video/mp4" src="http://58.87.109.73/wpBlog/wp-content/uploads/2018/11/redux.mp4?_=1" />
&lt;p>&lt;a href="http://58.87.109.73/wpBlog/wp-content/uploads/2018/11/redux.mp4">http://58.87.109.73/wpBlog/wp-content/uploads/2018/11/redux.mp4&lt;/a>&lt;/video>&lt;/p>
&lt;/div>
&lt;p> &lt;/p></content><category scheme="http://blog.wss.cool/categories/react/" term="React" label="React"/><category scheme="http://blog.wss.cool/tags/api/" term="api" label="api"/></entry><entry><title type="text">元素与组件</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/react-element-and-component.html"/><id>http://blog.wss.cool/react-element-and-component.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2018-11-24T04:49:54+00:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">原文链接：React Components, Elements, and Instances 什么是React元素(element)？ 元素(eleme……</summary><content type="html">&lt;p>原文链接：&lt;a href="https://reactjs.org/blog/2015/12/18/react-components-elements-and-instances.html">React Components, Elements, and Instances&lt;/a>&lt;/p>
&lt;h2 id="什么是react元素element">什么是React元素(element)？&lt;/h2>
&lt;p>&lt;strong>元素(element)是描述组件实例或DOM节点及其所需属性的普通对象&lt;/strong>这个对象仅仅包含了有关组件类型、属性、子元素的信息。&lt;/p>
&lt;p>元素不是实际的实例。相反，它是一种告诉React你想在屏幕上看到什么的方法。你不能在元素上调用任何方法。它只是一个带有两个字段的不可变描述对象：type:(string | ReactClass) 和 props: Object 。&lt;/p>
&lt;p>可以把一个这样的DOM节点描述成下面这样的对象，这个对象就叫元素（element）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="p">{&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;div&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">props&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">children&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Login&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;login-btn&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>元素可以通过createElement方法创建。&lt;/p>
&lt;h2 id="dom元素">DOM元素&lt;/h2>
&lt;p>当element的type为英文字符串时，它表示同名的DOM节点，element的props对应其属性。这就是React将呈现的内容。例如：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="p">{&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;button&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">props&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">className&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;button button-blue&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">children&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">props&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">children&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;OK!&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此元素只是将以下HTML表示为普通对象的一种方法：&lt;/p>
&lt;h2 id="组件元素">组件元素&lt;/h2>
&lt;p>但是，element的type也可以是与React组件对应的函数或类：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="p">{&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Button&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">props&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;blue&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">children&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;OK!&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>描述组件的element与描述DOM节点的element一样，都是element，它们可以嵌套并互相混合。&lt;/p>
&lt;p>此功能允许您将DangerButton组件定义为具有特定color属性值的Button组件，而无需关心是否完全Button组件会呈现为DOM的button还是&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">DangerButton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">({&lt;/span> &lt;span class="nx">children&lt;/span> &lt;span class="p">})&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">({&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Button&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">props&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;red&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">children&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">children&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>你可以在单个元素树中混合DOM和组件元素：&lt;/p>
&lt;pre>&lt;code>const DeleteAccount = () =&amp;gt; ({
type: 'div',
props: {
children: [{
type: 'p',
props: {
children: 'Are you sure?'
}
}, {
type: DangerButton,
props: {
children: 'Yep'
}
}]
});
&lt;/code>&lt;/pre>&lt;p>也可以用JSX写：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="nx">DeleteAccount&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="nx">Are&lt;/span> &lt;span class="nx">you&lt;/span> &lt;span class="nx">sure&lt;/span>&lt;span class="o">?&amp;lt;&lt;/span>&lt;span class="err">/p&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">DangerButton&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="nx">Yep&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/DangerButton&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/div&amp;gt;&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这种混合有助于保持组件彼此分离，因为它们可以通过组合表达is-a和has-a关系：&lt;/p>
&lt;ul>
&lt;li>DangerButton是一个Button具有特定属性的&lt;/li>
&lt;li>DeleteAccount包含一个Button和一个DangerButton内部&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="components-encapsulate-element-trees">组件封装元素树&lt;/h2>
&lt;p>当React发现一个element的type时函数或者类时，它会问那个组件，给你相关的props你会render一个怎样的element。&lt;/p>
&lt;p>比如当React看到这个element时：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-hs" data-lang="hs">&lt;span class="p">{&lt;/span>
&lt;span class="kr">type&lt;/span>&lt;span class="kt">:&lt;/span> &lt;span class="kt">Button&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">props&lt;/span>&lt;span class="kt">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">color&lt;/span>&lt;span class="kt">:&lt;/span> &lt;span class="n">&amp;#39;blue&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">children&lt;/span>&lt;span class="kt">:&lt;/span> &lt;span class="kt">&amp;#39;OK&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="sc">&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>React 会问 Button 组件想render一个什么样的element，  Button 组件返回一个这样的 element 给React:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="p">{&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;button&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">props&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">className&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;button button-blue&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">children&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">props&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">children&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;OK!&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>React将重复这个过程，直到它知道了页面内的所有组件的element都是基本DOM标签element。&lt;/p>
&lt;p>React就像一个孩子，问你每个“X是Y”的“Y是什么”，你向他们解释，直到他们弄清楚世界上的每一件小事。&lt;/p>
&lt;p>对于React组件，props是输入，元素树是输出。&lt;/p>
&lt;p>&lt;strong>返回的元素树可以包含描述DOM节点的元素和描述其他组件的元素。这使得您可以在不依赖于其内部DOM结构的情况下组成UI的独立部分。&lt;/strong>&lt;/p>
&lt;h2 id="top-down-reconciliation">Top-Down Reconciliation&lt;/h2>
&lt;p>当你这样调用时：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">ReactDOM&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">render&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Form&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">props&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">isSubmitted&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">buttonText&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;OK!&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>React 会问 Form 组件，结合所给的props返回怎样的元素树。它将逐步“改进”对组件树的理解：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="c1">// React: You told me this...
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Form&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">props&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">isSubmitted&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">buttonText&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;OK!&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// React: ...And Form told me this...
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Button&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">props&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">children&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;OK!&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;blue&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// React: ...and Button told me this! I guess I&amp;#39;m done.
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;button&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">props&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">className&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;button button-blue&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">children&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">props&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">children&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;OK!&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这就是被叫做reconciliation的过程的一部分，当你调用 &lt;a href="https://reactjs.org/docs/top-level-api.html#reactdom.render">ReactDOM.render()&lt;/a> or &lt;a href="https://reactjs.org/docs/component-api.html#setstate">setState()&lt;/a> 时 reconciliation 就会开始。当 reconciliation 结束时，React就知道了最后的DOM树 ，然后一个像 react-dom or react-native 这样的渲染器将应用最小变更集来更新DOM节点。&lt;/p>
&lt;h2 id="实例instances">实例instances&lt;/h2>
&lt;p>您可能已经注意到，此博客条目对组件和元素进行了大量讨论，而不是实例。事实上，实例在React中的重要性远远低于大多数面向对象的UI框架。&lt;/p>
&lt;p>只有声明为类的组件才有实例，而且你永远不会直接创建它们：React会为你做这件事。虽然&lt;a href="https://reactjs.org/docs/more-about-refs.html">存在父组件实例访问子组件实例的机制&lt;/a>，但它们仅用于命令性操作（例如将焦点设置在字段上），并且通常应该避免。&lt;/p>
&lt;p>React负责为每个类组件创建一个实例，因此您可以使用方法和本地状态以面向对象的方式编写组件，但除此之外，实例在React的编程模型中不是很重要，并且由React本身管理。&lt;/p>
&lt;h2 id="摘要summary">摘要Summary&lt;/h2>
&lt;p>&lt;strong>元素&lt;/strong>是一个简单的对象，用来描述你想让什么样的DOM节点或组件出现在屏幕上。元素可以在其props中包含其他元素。创建React元素很简单。一旦创建了一个元素，它就永远不会发生变异(mutated)。&lt;/p>
&lt;p>&lt;strong>组件&lt;/strong>可以以多种不同的方式来声明(declared)。它可以是一个带有render()方法的类。或者，在简单的情况下，可以将其定义为函数。在任何一种情况下，它都将props作为输入，并返回一个元素树作为输出。&lt;/p>
&lt;p>当一个组件接收props作为输入时，这是因为一个特定的父组件返回了一个带有它的type和props的元素。这就是人们说道具在React中以一种方式流动的原因：从父母到孩子。&lt;/p>
&lt;p>在您编写的组件类中可以用this引用的&lt;strong>实例&lt;/strong>。它对于&lt;a href="https://reactjs.org/docs/component-api.html">存储本地状态和对生命周期事件做出反应&lt;/a>非常有用。&lt;/p>
&lt;p>功能组件根本没有实例。类组件有实例，但您永远不需要直接创建组件实例–React负责这一点。&lt;/p>
&lt;p>最后，为了创建元素，使用&lt;a href="https://reactjs.org/docs/top-level-api.html#react.createelement">React.createElement()&lt;/a>，&lt;a href="https://reactjs.org/docs/jsx-in-depth.html">JSX&lt;/a>或&lt;a href="https://reactjs.org/docs/top-level-api.html#react.createfactory">元素工厂帮手&lt;/a>。不要在真实代码中将元素写为普通对象 – 只要知道它们是引擎下的普通对象。&lt;/p></content><category scheme="http://blog.wss.cool/categories/react/" term="React" label="React"/><category scheme="http://blog.wss.cool/categories/react%E5%8E%9F%E7%90%86/" term="React原理" label="React原理"/><category scheme="http://blog.wss.cool/tags/knowledge/" term="knowledge" label="knowledge"/></entry><entry><title type="text">Diff</title><link rel="alternate" type="text/html" href="http://blog.wss.cool/react-reconciliation.html"/><id>http://blog.wss.cool/react-reconciliation.html</id><updated>2023-02-27T17:06:48+00:00</updated><published>2018-11-17T08:33:37+00:00</published><author><name>王书硕</name><uri>http://blog.wss.cool/</uri><email>wss.six@foxmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">React Element 首先我们要知道react的diff比较的是新旧两颗 react element 树。那什么是 react element 呢？ react element 是……</summary><content type="html">&lt;h2 id="react-element">React Element&lt;/h2>
&lt;p>首先我们要知道react的diff比较的是新旧两颗 react element 树。那什么是 react element 呢？&lt;/p>
&lt;p>react element 是一个普通对象，它描述组件实例或DOM节点。&lt;/p>
&lt;p>它是这样的&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="p">{&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;div&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">props&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">children&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Login&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;login-btn&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>或这样的（区别是type一个是字符串，一个是函数或类）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="p">{&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Button&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">props&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;blue&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">children&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;OK!&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>React.render()方法，会把 react element 解析成所有type都是字符串（DOM标签），形成一棵虚拟DOM树。&lt;/p>
&lt;p>当 state 或 props 更新时，render方法会解析出另一个树。React不会直接将新的树渲染为真实的DOM，而是找出新旧树之间的差异，只更新差异部分的真实DOM。这个“找出新旧树之间的差异”的算法就是diff。&lt;/p>
&lt;p>如果直接比较两颗树，算法的时间复杂度为O(n&lt;sup>3&lt;/sup>) ，不使用于react的场景。&lt;/p>
&lt;p>React基于两点假设，实现了一个复杂度为O(n)的算法：&lt;/p>
&lt;ol>
&lt;li>两个不同类型的元素将产生不同的树。&lt;/li>
&lt;li>开发人员可以通过key参数提示哪些子元素可以在不同渲染中保持稳定。&lt;/li>
&lt;/ol>
&lt;p>实践中，上述假设适用于大部分应用场景。&lt;/p>
&lt;h2 id="diff算法">diff算法&lt;/h2>
&lt;p>在对比新旧两棵树时，React首先比较两个根元素的类型，然后根据两个元素的类型采取不同的行动。&lt;/p>
&lt;h3 id="根元素的类型">根元素的类型&lt;/h3>
&lt;p>对比两个根元素的类型可能以下几种情况：&lt;/p>
&lt;ul>
&lt;li>elements of different types，不同类型的元素&lt;/li>
&lt;li>DOM elements of the same type，相同类型的DOM元素&lt;/li>
&lt;li>component elements of the same type，相同类型的组件元素&lt;/li>
&lt;/ul>
&lt;h3 id="不同类型的元素">不同类型的元素&lt;/h3>
&lt;p>每当根元素具有不同的类型时，React将拆除旧树并从头开始构建新树。无论从&lt;code>&amp;lt;a&amp;gt;&lt;/code>到&lt;code>&amp;lt;img&amp;gt;&lt;/code>或从&lt;code>&amp;lt;Article&amp;gt;&lt;/code>到&lt;code>&amp;lt;Comment&amp;gt;&lt;/code>，或从&lt;code>&amp;lt;Button&amp;gt;&lt;/code> 到 &lt;code>&amp;lt;div&amp;gt;&lt;/code>，任何的调整都会导致全部重建。&lt;/p>
&lt;p>当树被卸载，旧的DOM节点将被销毁。组件实例会调用&lt;code>componentWillUnmount()&lt;/code>。当构建一棵新树，新的DOM节点被插入到DOM中。组件实例将依次调用&lt;code>componentWillMount()&lt;/code>和&lt;code>componentDidMount()&lt;/code>。任何与旧树有关的状态都将丢弃。&lt;/p>
&lt;p>这个根节点下所有的组件都将会被卸载，同时他们的状态将被销毁。 例如，以下节点对比之后：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Counter&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">Counter&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这将会销毁旧的&lt;code>Counter&lt;/code>并重装新的&lt;code>Counter&lt;/code>。&lt;/p>
&lt;h3 id="相同类型的dom元素">相同类型的DOM元素&lt;/h3>
&lt;p>当比较两个相同类型的React DOM元素时，React则会观察二者的属性，保持相同的底层DOM节点，并仅更新变化的属性。&lt;/p>
&lt;h3 id="相同类型的组件元素">相同类型的组件元素&lt;/h3>
&lt;p>当组件更新时，实例仍保持一致，以让状态能够在渲染之间保留。React通过更新底层组件实例的props来产生新元素，并在底层实例上依次调用&lt;code>componentWillReceiveProps()&lt;/code> 和 &lt;code>componentWillUpdate()&lt;/code> 方法。&lt;/p>
&lt;p>接下来，&lt;code>render()&lt;/code>方法被调用，同时对比算法会递归处理之前的结果和新的结果。&lt;/p>
&lt;h2 id="递归子节点">递归子节点&lt;/h2>
&lt;p>默认情况下，当对DOM节点的子节点进行递归时，React会同时迭代两个&lt;strong>子项列表&lt;/strong>，并在出现差异时生成变异。（应该是两个树的子项列表吧？）&lt;/p>
&lt;p>例如，当在子节点末尾增加一个元素，两棵树的转换效果很好：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>first&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>second&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>first&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>second&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>third&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>React将会匹配两棵树的&lt;code>&amp;lt;li&amp;gt;first&amp;lt;/li&amp;gt;&lt;/code>，匹配两棵树的&lt;code>&amp;lt;li&amp;gt;second&amp;lt;/li&amp;gt;&lt;/code> 节点，然后插入&lt;code>&amp;lt;li&amp;gt;third&amp;lt;/li&amp;gt;&lt;/code>节点树。&lt;/p>
&lt;p>如果你天真地在开头插入一个元素就会有糟糕的表现。 例如，在这两棵树之间进行转换效果不佳：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Duke&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Villanova&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Connecticut&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Duke&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Villanova&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>React会调整每个子节点，而非意识到可以完整保留&lt;code>&amp;lt;li&amp;gt;Duke&amp;lt;/li&amp;gt;&lt;/code> 和 &lt;code>&amp;lt;li&amp;gt;Villanova&amp;lt;/li&amp;gt;&lt;/code>子树。低效成了一个问题。&lt;/p>
&lt;h2 id="key">Key&lt;/h2>
&lt;p>React提供了一个key属性来解决这种低效问题。当子元素有key属性时，React使用key将旧树中的子元素与新树中的子元素相匹配并比较。&lt;/p>
&lt;p>例如，增加一个&lt;code>key&lt;/code>在之前效率不高的样例中能让树的转换变得高效：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span> &lt;span class="na">key&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;2015&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Duke&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span> &lt;span class="na">key&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;2016&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Villanova&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span> &lt;span class="na">key&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;2014&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Connecticut&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span> &lt;span class="na">key&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;2015&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Duke&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span> &lt;span class="na">key&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;2016&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Villanova&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>现在React知道带有&lt;code>2014&lt;/code>的key的元素是新的，仅移动带有&lt;code>2015&lt;/code>和&lt;code>2016&lt;/code>的key的元素。&lt;/p>
&lt;p>实践中，为元素找到一个key通常不难。你将展示的元素可能已经带有一个唯一的ID，比如key可以来自于你的数据中：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span> &lt;span class="na">key&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">{item.id}&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>{item.name}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>当这已不再是问题，你可以给你的数据增加一个新的ID属性，或根据数据的某些内容创建一个哈希值来作为key。key必须在其兄弟节点中是唯一的，而非全局唯一。&lt;/p>
&lt;h2 id="权衡">权衡&lt;/h2>
&lt;p>重要的是要记住，协调算法是一个实现细节。 React可以在每个动作上重新呈现整个应用程序; 最终结果是一样的。 为了清楚起见，在这种情况下重新渲染意味着为所有组件调用渲染，这并不意味着React将卸载并重新安装它们。 它只会按照前面章节中规定的规则&lt;strong>应用差异(apply the differences)&lt;/strong>。(什么叫apply the differences)&lt;/p>
&lt;p>我们经常改进启发式方法，以便使常见用例更快。 在当前的实现中，您可以表达一个子树已经在其兄弟之间移动的事实，但您不能说它已移动到其他地方。&lt;em>算法将重新渲染完整的子树。(最后一句话根前面两句是什么逻辑关系？)&lt;/em>&lt;/p>
&lt;p>因为React依赖于启发式，如果不满足它们背后的假设，性能将受到影响。&lt;/p>
&lt;ol>
&lt;li>该算法不会尝试匹配不同组件类型的子树。 如果您发现自己在具有非常相似输出的两种组件类型之间交替，则可能需要使其成为相同类型。 在实践中，我们没有发现这是一个问题。&lt;/li>
&lt;li>key应该是稳定的，可预测的和独特的。 不稳定的key（如Math.random（）生成的键）将导致许多组件实例和DOM节点被不必要地重新创建，这可能导致子组件中的性能下降和丢失状态。&lt;/li>
&lt;/ol>
&lt;p> &lt;/p></content><category scheme="http://blog.wss.cool/categories/react/" term="React" label="React"/><category scheme="http://blog.wss.cool/categories/react%E5%8E%9F%E7%90%86/" term="React原理" label="React原理"/><category scheme="http://blog.wss.cool/tags/knowledge/" term="knowledge" label="knowledge"/></entry></feed>